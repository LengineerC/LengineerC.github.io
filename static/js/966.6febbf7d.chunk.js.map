{"version":3,"file":"static/js/966.6febbf7d.chunk.js","mappings":"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","sources":["components/Category/index.tsx","pages/CategoriesPage/index.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n    category:string,\r\n}\r\n\r\nexport default function Category({category}: Props) {\r\n  return (\r\n    <div className='category-main'>\r\n      <NavLink to={`/categories/${category}`} style={{ textDecoration: \"none\" }}>\r\n        <div className='category-container'>\r\n          <FontAwesomeIcon icon={faBookmark}/>\r\n          <span style={{marginLeft:\"5px\"}}>{category}</span>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","import Card from \"../../components/Card\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { useEffect, useRef } from \"react\";\r\n// import store from \"../../redux/store\";\r\nimport * as echarts from 'echarts/core';\r\nimport { RadarChart } from 'echarts/charts';\r\nimport 'echarts-wordcloud';\r\nimport Category from \"../../components/Category\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function CategoriesPage() {\r\n  // const [categories,setCategories]=useState<any>();\r\n  const categories=useAppSelector(state=>state.categoriesList);\r\n  const postCount=useAppSelector(state=>state.postList).length || 0;\r\n  // const [postCount,setPostCount]=useState<number>(0);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  const chartRef=useRef(null);\r\n  \r\n  // useEffect(()=>{\r\n  //   const {categoriesList,postList}=store.getState();\r\n  //   setCategories(categoriesList);\r\n  //   setPostCount(postList.length);\r\n\r\n\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {categoriesList={},postList,darkMode}=store.getState();\r\n  //     setCategories(categoriesList);\r\n  //     setPostCount(postList.length);\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n  \r\n  useEffect(()=>{\r\n    // console.log(categories,postCount);\r\n    if(categories && Object.keys(categories).length>0 && postCount!==0){\r\n      createRadarChart();\r\n    }\r\n      \r\n  },[categories,postCount])\r\n\r\n  useEffect(()=>{\r\n    if(categories && Object.keys(categories).length>0 && postCount!==0){\r\n      createRadarChart();\r\n    }\r\n  },[darkMode])\r\n\r\n  const createRadarChart=()=>{\r\n    echarts.use([RadarChart]); \r\n    const radarChart=echarts.init(chartRef.current);\r\n    let textStyle={\r\n      fontFamily:\"CustomFont1\",\r\n      fontSize:15,\r\n      color:`${darkMode?'#ffffffcc':'#000000c0'}`\r\n    };\r\n    let itemStyle={\r\n      color: `${darkMode?'#42cf52':'#67abff'}`\r\n    }\r\n    let axisName={\r\n      fontFamily:\"CustomFont1\",\r\n      fontSize:15,\r\n      color:`${darkMode?'#ffffffcc':'#000000c0'}`,\r\n      fontWeight:'bold'\r\n    }\r\n\r\n    let max=0;\r\n    const getMaxCount=()=>{\r\n      Object.keys(categories).forEach(item=>{\r\n        if(item.length>max){\r\n          max=item.length;\r\n        }\r\n      })\r\n    }\r\n    getMaxCount();\r\n\r\n    const option = {\r\n      backgroundColor:\"\",\r\n      radar: {\r\n        indicator: Object.keys(categories).map(categoryName=>({\r\n          name:categoryName,\r\n          max:max,\r\n        })),\r\n        name: {\r\n          textStyle: textStyle\r\n        },\r\n        axisName,\r\n        center:[\"50%\",\"65%\"],\r\n        radius:\"100%\"\r\n      },\r\n      series: [\r\n        {\r\n          areaStyle:{opacity:\"0.25\"},\r\n          label:{show:\"true\"},\r\n          type: 'radar',\r\n          data: [\r\n            {\r\n              value: Object.keys(categories).map(catagoryName=>{\r\n                const category=categories[catagoryName];\r\n                return category?category.length:0;\r\n              }),\r\n              itemStyle:itemStyle,\r\n              label: {\r\n                show: true, \r\n                fontSize: 13, \r\n                position: 'right', \r\n                color:`${darkMode?'#ffffff':\"#000000\"}`,\r\n                fontWeight:\"bold\",\r\n                fontFamily:\"CustomFont1\",\r\n                // shadowColor:`${isDarkMode?\"#000000aa\":\"#ffffffaa\"}`,\r\n                // shadowBlur:5,\r\n                // shadowOffsetX:1,\r\n                // shadowOffsetY:5,\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n\r\n    radarChart.setOption(option);\r\n  }\r\n\r\n  const createCategories=():React.ReactNode=>{\r\n    if(categories){\r\n      return Object.keys(categories).map((categories:any)=>{\r\n        return (\r\n          <div className=\"categories-container\" key={categories}>\r\n            <Category category={categories}/>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-main\">\r\n\r\n      <div className=\"page-main-title\">\r\n        <PageTitle title=\"Categories\"/>\r\n      </div>\r\n\r\n      <div className=\"page-main-content\">\r\n          <Card darkMode={darkMode}>\r\n            <div className=\"categories-page-card-categories\">\r\n              {createCategories()}\r\n            </div>\r\n          </Card>\r\n\r\n          <div className=\"categories-page-chart-main\">\r\n            <Card darkMode={darkMode}>\r\n              <div className=\"categories-page-chart-block\" ref={chartRef} />\r\n            </Card>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}"],"names":["Category","_ref","category","_jsx","className","children","NavLink","to","concat","style","textDecoration","_jsxs","FontAwesomeIcon","icon","faBookmark","marginLeft","CategoriesPage","categories","useAppSelector","state","categoriesList","postCount","postList","length","darkMode","chartRef","useRef","useEffect","Object","keys","createRadarChart","echarts","RadarChart","radarChart","current","textStyle","fontFamily","fontSize","color","itemStyle","axisName","fontWeight","max","forEach","item","option","backgroundColor","radar","indicator","map","categoryName","name","center","radius","series","areaStyle","opacity","label","show","type","data","value","catagoryName","position","setOption","PageTitle","title","Card","createCategories","ref"],"sourceRoot":""}