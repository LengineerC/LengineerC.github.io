{"version":3,"file":"static/js/650.02251ab4.chunk.js","mappings":"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","sources":["../node_modules/antd/es/skeleton/Element.js","../node_modules/antd/es/skeleton/style/index.js","../node_modules/antd/es/skeleton/Avatar.js","../node_modules/antd/es/skeleton/Button.js","../node_modules/antd/es/skeleton/Image.js","../node_modules/antd/es/skeleton/Input.js","../node_modules/antd/es/skeleton/Node.js","../node_modules/antd/es/skeleton/Paragraph.js","../node_modules/antd/es/skeleton/Title.js","../node_modules/antd/es/skeleton/Skeleton.js","../node_modules/antd/es/skeleton/index.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [skeletonAvatarCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [skeletonInputCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [skeletonImageCls]: Object.assign(Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'middle',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [skeletonButtonCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [skeletonAvatarCls]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [skeletonTitleCls]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [skeletonParagraphCls]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [skeletonTitleCls]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [skeletonButtonCls]: {\n        width: '100%'\n      },\n      [skeletonInputCls]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonAvatar = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    shape = 'circle',\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls', 'className']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-avatar`,\n    shape: shape,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonAvatar;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nconst SkeletonImage = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${prefixCls}-image-svg`\n  }, /*#__PURE__*/React.createElement(\"title\", null, \"Image placeholder\"), /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: `${prefixCls}-image-path`\n  })))));\n};\nexport default SkeletonImage;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, children)));\n};\nexport default SkeletonNode;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst getWidth = (index, props) => {\n  const {\n    width,\n    rows = 2\n  } = props;\n  if (Array.isArray(width)) {\n    return width[index];\n  }\n  // last paragraph\n  if (rows - 1 === index) {\n    return width;\n  }\n  return undefined;\n};\nconst Paragraph = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(new Array(rows)).map((_, index) => (\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index, props)\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","\"use client\";\n\n/* eslint-disable jsx-a11y/heading-has-content */\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst Title = _ref => {\n  let {\n    prefixCls,\n    className,\n    width,\n    style\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // biome-ignore lint/a11y/useHeadingContent: HOC here\n    React.createElement(\"h3\", {\n      className: classNames(prefixCls, className),\n      style: Object.assign({\n        width\n      }, style)\n    })\n  );\n};\nexport default Title;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport useStyle from './style';\nimport Title from './Title';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    skeleton\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\n    return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return children !== null && children !== void 0 ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","\"use client\";\n\nimport Skeleton from './Skeleton';\nexport default Skeleton;"],"names":["props","prefixCls","className","style","size","shape","sizeCls","classNames","concat","shapeCls","sizeStyle","React","width","height","lineHeight","Object","assign","skeletonClsLoading","Keyframes","backgroundPosition","genSkeletonElementCommonSize","unit","genSkeletonElementAvatarSize","genSkeletonColor","token","background","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","genStyleHooks","skeletonToken","mergeToken","gradientToColor","colorFillContent","colorFill","color","colorGradientEnd","marginLG","marginXXS","deprecatedTokens","customizePrefixCls","rootClassName","active","getPrefixCls","ConfigContext","wrapCSSVar","hashId","cssVarCls","useStyle","otherProps","omit","cls","Element","block","viewBox","xmlns","d","children","getWidth","index","rows","Array","isArray","rowList","_toConsumableArray","map","_","key","_ref","getComponentProps","prop","Skeleton","loading","avatar","title","paragraph","round","direction","skeleton","hasAvatar","hasTitle","hasParagraph","avatarNode","contentNode","avatarProps","getAvatarBasicProps","$title","paragraphNode","titleProps","getTitleBasicProps","Title","paragraphProps","basicProps","getParagraphBasicProps","Paragraph","Button","SkeletonButton","Avatar","SkeletonAvatar","Input","SkeletonInput","Image","SkeletonImage","Node","SkeletonNode"],"sourceRoot":""}