{"version":3,"file":"static/js/488.fbb6f339.chunk.js","mappings":"4HAce,SAASA,EAAIC,GAAwF,IAAvF,MAACC,GAAM,EAAK,SAACC,EAAQ,UAACC,EAAU,OAAM,QAACC,EAAO,QAACC,EAAQ,EAAC,WAACC,EAAU,SAACC,GAAgBP,EAc/G,OACEQ,EAAAA,EAAAA,KAAA,OACAL,UAAS,GAAAM,OAAKR,EAAM,kBAAkB,YAAW,KAAAQ,OAAIN,EAAS,KAAAM,OAAIF,EAAS,iBAAiB,IAC5FG,MAAO,CACLC,gBAAgB,OAADF,OAAQL,EAAO,KAC9BC,QAAQ,GAADI,OAAIJ,GACXC,WAAW,GAADG,OAAIH,IACdJ,SAICA,GAGP,C,kDCpCe,SAASU,EAASZ,GAAoB,IAAnB,MAAEa,GAAcb,EAChD,OACEQ,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAZ,UACEM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYD,SACxBW,KAIT,C,+HCHA,MAAME,EAAS,CACb,sEACA,sEACA,sEACA,sEACA,sEACA,uEAEIC,EAAmB,sEAEV,SAASC,IAEtB,MAAMC,GAAeC,EAAAA,EAAAA,IAAeC,GAAOA,EAAMF,iBAE3CX,GAASY,EAAAA,EAAAA,IAAeC,GAAOA,EAAMb,WACrCc,GAASC,EAAAA,EAAAA,MAEfC,EAAAA,EAAAA,YAAU,KAQmB,IAAxBL,EAAeM,QAChBC,EAAAA,EAAMC,IAAI,sBACTC,MAAMC,IACL,MAAM,KAACC,GAAMD,EAEbP,GAASS,EAAAA,EAAAA,IAAmBD,GAAM,IAEnCE,OAAOC,IACNC,QAAQC,IAAI,mDAAWF,EAAI,GAE/B,GASA,IAqCF,OACEG,EAAAA,EAAAA,MAAA,OAAKhC,UAAU,YAAWD,SAAA,EACxBM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBD,UAC9BM,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,MAAM,eAGnBL,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBD,UAChCM,EAAAA,EAAAA,KAACT,EAAAA,EAAI,CAACQ,SAAUA,EAASL,UACvBM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcD,SA3CTkC,MAC1B,GAAGlB,EAAeM,OAAO,EACvB,OAAON,EAAemB,KAAI,CAACC,EAAKC,KAE5B/B,EAAAA,EAAAA,KAAA,OAAiBL,UAAU,iBAAgBD,UACzCM,EAAAA,EAAAA,KAAA,KAAGgC,KAAMF,EAAKG,IAAIvC,UAChBM,EAAAA,EAAAA,KAACT,EAAAA,EAAI,CACLE,OAAO,EACPE,UAAU,aACVI,SAAUA,EACVD,WAAYC,EAASS,EAAYD,EAAS,GAAGb,UAE3CiC,EAAAA,EAAAA,MAAA,OAAKhC,UAAU,eAAcD,SAAA,EAC3BM,EAAAA,EAAAA,KAAA,OAAKL,UAAWI,EAAS,wBAAwB,mBAAmBL,UAClEM,EAAAA,EAAAA,KAAA,OAAKkC,IAAKJ,EAAKK,YAGjBR,EAAAA,EAAAA,MAAA,OAAKhC,UAAU,uBAAsBD,SAAA,EACnCM,EAAAA,EAAAA,KAAA,OAAKL,UAAWI,EAAS,kCAAkC,6BAA6BL,SACrFoC,EAAKzB,SAGRL,EAAAA,EAAAA,KAAA,OAAKL,UAAWI,EAAS,wCAAwC,mCAAmCL,SACjGoC,EAAKM,yBAnBRL,IA4BhB,EAYSH,WAMb,C","sources":["components/Card/index.tsx","components/PageTitle/index.tsx","pages/Friends/index.tsx"],"sourcesContent":["// import {useState, useEffect} from 'react'\r\n// import store from '../../redux/store'\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n  scale?:boolean,\r\n  className?:\"aside-card\"|\"card\"\r\n  children?:React.ReactNode,\r\n  bgImage?:string,\r\n  opacity?:number,\r\n  background?:string,\r\n  darkMode:boolean,\r\n}\r\n\r\nexport default function Card({scale=false,children,className=\"card\",bgImage,opacity=1,background,darkMode}: Props) {\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n\r\n  // useEffect(()=>{\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {darkMode}=store.getState();\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n\r\n  return (\r\n    <div \r\n    className={`${scale?'card-main-scale':'card-main'} ${className} ${darkMode?'card-main-dark':\"\"}`}\r\n    style={{\r\n      backgroundImage:`url(${bgImage})`,\r\n      opacity:`${opacity}`,\r\n      background:`${background}`\r\n    }}\r\n    >\r\n      {/* <div className='card-main-text-container'>\r\n      </div> */}\r\n      {children}\r\n    </div>\r\n  )\r\n}","import \"./index.scss\"\r\n\r\ntype Props = {\r\n  title: string\r\n}\r\n\r\nexport default function PageTitle({ title }: Props) {\r\n  return (\r\n    <>\r\n      <div className='page-title'>\r\n        {title}\r\n      </div>\r\n    </>\r\n  )\r\n}","import {useState, useEffect} from 'react'\r\nimport PageTitle from '../../components/PageTitle'\r\nimport Card from '../../components/Card'\r\nimport axios from 'axios'\r\nimport { FriendUrl } from '../../utils/types'\r\nimport store from '../../redux/store'\r\nimport { saveFriendsUrlData } from '../../redux/actions'\r\n\r\nimport './index.scss'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\n\r\nconst bgColors=[\r\n  'linear-gradient(to right,#ffb7b7aa 0%,#ff4c4caa 50%,#ffb7b7aa 100%)',\r\n  'linear-gradient(to right,#bbdcf5aa 0%,#9accf9aa 50%,#bbdcf5aa 100%)',\r\n  'linear-gradient(to right,#f7ff89aa 0%,#f6ff47aa 50%,#f7ff89aa 100%)',\r\n  'linear-gradient(to right,#8aff73aa 0%,#49ff38aa 50%,#8aff73aa 100%)',\r\n  'linear-gradient(to right,#71fffaaa 0%,#38e4ffaa 50%,#71fffaaa 100%)',\r\n  'linear-gradient(to right,#c57affaa 0%,#b436e1aa 50%,#c57affaa 100%)',\r\n]\r\nconst darkBgColor:string=\"linear-gradient(to right,#ffffff55 0%,#c0c0c055 50%,#ffffff55 100%)\";\r\n\r\nexport default function Friends() {\r\n  // const [friendsUrlData,setFriendsUrlData]=useState<FriendUrl[]>([]);\r\n  const friendsUrlData=useAppSelector(state=>state.friendsUrlData);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n  const dispatch=useAppDispatch();\r\n\r\n  useEffect(()=>{\r\n    // const {friendsUrlData}=store.getState();\r\n    \r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // });\r\n\r\n    if(friendsUrlData.length===0){\r\n      axios.get('/json/friends.json')\r\n      .then((response=>{\r\n        const {data}=response;\r\n        // setFriendsUrlData(data);\r\n        dispatch(saveFriendsUrlData(data));\r\n      }))\r\n      .catch((err)=>{\r\n        console.log(\"获取友链数据失败\",err);\r\n      });\r\n    }\r\n    // else{\r\n    //   setFriendsUrlData(friendsUrlData);\r\n    // }\r\n\r\n    // return ()=>{\r\n    //   unsubscribe();\r\n    // }\r\n\r\n  },[])\r\n\r\n  const createFriendsUrlCards=()=>{\r\n    if(friendsUrlData.length>0){\r\n      return friendsUrlData.map((item,index)=>{\r\n        return(\r\n          <div key={index} className='card-container'>\r\n            <a href={item.url}>\r\n              <Card\r\n              scale={true}\r\n              className='aside-card'\r\n              darkMode={darkMode}\r\n              background={darkMode?darkBgColor:bgColors[1]}\r\n              >\r\n                <div className='friends-card'>\r\n                  <div className={darkMode?'friends-card-img-dark':'friends-card-img'}>\r\n                    <img src={item.avatar}/>\r\n                  </div>\r\n\r\n                  <div className='friends-card-content'>\r\n                    <div className={darkMode?'friends-card-content-title-dark':'friends-card-content-title'}>\r\n                      {item.title}\r\n                    </div>\r\n\r\n                    <div className={darkMode?'friends-card-content-description-dark':'friends-card-content-description'}>\r\n                      {item.description}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </a>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='page-main'>\r\n      <div className='page-main-title'>\r\n        <PageTitle title='Friends'/>\r\n      </div>\r\n\r\n      <div className='page-main-content'>\r\n        <Card darkMode={darkMode}>\r\n          <div className='friends-main'>\r\n            {createFriendsUrlCards()}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":["Card","_ref","scale","children","className","bgImage","opacity","background","darkMode","_jsx","concat","style","backgroundImage","PageTitle","title","_Fragment","bgColors","darkBgColor","Friends","friendsUrlData","useAppSelector","state","dispatch","useAppDispatch","useEffect","length","axios","get","then","response","data","saveFriendsUrlData","catch","err","console","log","_jsxs","createFriendsUrlCards","map","item","index","href","url","src","avatar","description"],"sourceRoot":""}