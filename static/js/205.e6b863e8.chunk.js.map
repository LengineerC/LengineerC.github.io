{"version":3,"file":"static/js/205.e6b863e8.chunk.js","mappings":";wPAsEsBA,EAAAA,GACHC,EAAAA,GACIC,EAAAA,GAmDhB,SAASC,EAAgBC,EAAgBC,GAE9C,OADAA,EAAOA,GAAQ,CAAC,GACTC,EAAAA,EAAAA,IAAqBF,EAAgB,KAAM,KAAqB,WAAfC,EAAKE,MAC/D,0EC5EAC,EAAAA,EAAAA,GAAIC,EAAAA,kECMAC,EAA4B,SAAUC,GAExC,SAASD,IACP,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAEhE,OADAF,EAAMI,KAAO,UACNJ,CACT,CAoBA,OAzBAK,EAAAA,EAAAA,IAAUP,EAAcC,GAMxBD,EAAaQ,UAAUC,KAAO,SAAUC,EAAQC,EAAaC,GAC3DX,EAAOO,UAAUC,KAAKI,KAAKT,KAAMM,EAAQC,EAAaC,GACtDR,KAAKU,eAAiB,IAAIC,EAAAA,EAAcX,OACxCY,EAAAA,EAAAA,GAA4BZ,KAC9B,EACAJ,EAAaQ,UAAUS,YAAc,SAAUC,EAAWN,GACxDX,EAAOO,UAAUS,YAAYJ,KAAKT,KAAMc,EAAWN,IACnDI,EAAAA,EAAAA,GAA4BZ,KAC9B,EACAJ,EAAaQ,UAAUW,cAAgB,WACrCf,KAAKU,eAAeM,OACtB,EACApB,EAAaQ,UAAUa,iBAAmB,WACxC,OAAOjB,KAAKU,cACd,EACAd,EAAaM,KAAO,UACpBN,EAAasB,cAAgB,CAC3BC,eAAgBC,EAAAA,IAEXxB,CACT,CA3BgC,CA2B9ByB,EAAAA,GAEEC,EAA2B,SAAUzB,GAEvC,SAASyB,IACP,IAAIxB,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAEhE,OADAF,EAAMI,KAAO,UACNJ,CACT,CAEA,OAPAK,EAAAA,EAAAA,IAAUmB,EAAazB,GAMvByB,EAAYpB,KAAO,UACZoB,CACT,CAT+B,CAS7BC,EAAAA,IC7CF7B,EAAAA,EAAAA,GAAI,CAAC8B,EAAAA,ED8CE,SAAiBC,GACtBA,EAAUC,uBAAuB9B,GACjC6B,EAAUE,sBAAsBL,EAClC,KCjCA5B,EAAAA,EAAAA,GAAIC,EAAAA,GCsCG,SAA2BiC,GAChC,IAAIC,EAAQC,EAAAA,EAAYC,OAAOH,GAC/BE,EAAAA,EAAYE,cAAcH,EAE5B,CCzGAI,CAA0B,CACxB/B,KAAM,mBAENgC,sBAAuB,YACvBC,kBAAmB,SAAUC,GAC3B,MAAO,CACLC,KAAMD,EAAME,IAAI,SAEpB,EACAC,eAAgB,OAEhBxB,cAAe,WACb,IAAIT,EAASN,KAAKM,OAClBA,EAAOkC,SAAWC,KAAKC,IAAID,KAAKE,MAAMrC,EAAOkC,UAAW,EAC1D,EAEAI,eAAgB,SAAUtC,EAAQE,GAChC,IAAIqC,EAAaZ,EAAAA,EAAgC3B,EAAOwC,KAAM,CAC5DC,gBAAiB,CAAC,WAEhBC,EAAO,IAAIf,EAAAA,EAAaY,EAAY7C,MAExC,OADAgD,EAAKC,SAAS3C,EAAOwC,MACdE,CACT,EAGA9B,cAAe,CACbgC,UAAW,KAGXC,MAAO,SACPC,YAAY,EAEZC,KAAM,SAENC,IAAK,SAELC,MAAO,MAEPC,OAAQ,MAERC,UAAW,CAAC,GAAI,IAEhBC,cAAe,EAAE,GAAI,IAErBC,aAAc,GAEdnB,SAAU,EAEVoB,gBAAgB,EAChBC,aAAa,EAEbC,UAAW,CACTC,WAAY,aDqDX,SAAyBnC,GAC9B,IAAIoC,EAAOC,EAAAA,EAAUlC,OAAOH,GAC5BqC,EAAAA,EAAUjC,cAAcgC,EAE1B,CE9GA/B,CAAwB,CACtB/B,KAAM,YAENgE,OAAQ,SAAUC,EAAa3D,EAAS4D,GACtC,IAAIC,EAAQrE,KAAKqE,MACjBA,EAAMC,YAEN,IAAIxB,EAAOqB,EAAYI,UAEnB/B,EAAW2B,EAAY7B,IAAI,YAE/B6B,EAAYK,eAAeC,OAAS,SAAUC,EAAMC,EAAMC,EAASC,GACjE,IAAIC,EAAYhC,EAAKiC,aAAaH,GAC9BtF,EAAiBwF,EAAUE,SAAS,aAEpCC,EAAS,IAAIhD,EAAAA,GAAqB,CACpCiD,MAAOjD,EAA+B3C,GACtC6F,OAAQ,EAAIN,EAAMO,KAAKC,GACvBC,OAAQ,EAAIT,EAAMO,KAAKC,GACvBE,GAAIV,EAAMW,GAAKX,EAAMO,KAAKK,GAAK,GAAKjD,EACpCkD,GAAIb,EAAMc,GAAKd,EAAMO,KAAKQ,GAAK,GAAKpD,EACpCqD,SAAUhB,EAAMiB,MAElBb,EAAOc,SAAS,CACdR,EAAGV,EAAMO,KAAKY,gBACdN,EAAGb,EAAMO,KAAKa,gBAAyB,GAAPtB,EAChCD,KAAMA,EACNwB,cAAe,SACf7D,KAAMS,EAAKqD,cAAcvB,EAAS,SAASvC,KAC3C+D,SAAUzB,IAGZN,EAAMgC,IAAIpB,GAEVnC,EAAKwD,iBAAiB1B,EAASK,GAE/BA,EAAOsB,YAAY,YAAYrB,MAAQjD,EACrC6C,EAAUE,SAAS,CAAC,WAAY,cAChC,CACEvF,MAAO,aAGXwF,EAAOsB,YAAY,QAAQrB,MAAQjD,EACjC6C,EAAUE,SAAS,CAAC,OAAQ,cAC5B,CACEvF,MAAO,SAIXwC,EAAAA,GACEgD,EACAH,EAAUxC,IAAI,CAAC,WAAY,UAC3BwC,EAAUxC,IAAI,CAAC,WAAY,eAG7B2C,EAAOuB,gBAAkB,CACvBC,SAAUtC,EAAY7B,IAAI,aACtB6B,EAAY7B,IAAI,CAAC,iBAAkB,aACnC,EACJoE,OAAQvC,EAAY7B,IAAI,CAAC,iBAAkB,YAG7C2C,EAAO0B,sBAAuB,CAChC,EAEA3G,KAAK4G,OAASzC,CAChB,EAEA0C,OAAQ,WACN7G,KAAKqE,MAAMC,YAEXtE,KAAK4G,OAAOpC,eAAesC,SAC7B,EAEAA,QAAS,WACP9G,KAAK4G,OAAOpC,eAAesC,SAC7B,ICnEGC,OAAOC,eACVD,OAAOC,aAEHD,OAAOE,gBACPF,OAAOG,oBACPH,OAAOI,iBACPJ,OAAOK,eACN,WACC,IAAKL,OAAOM,cAAgBN,OAAOO,iBACjC,OAAO,KAGT,IAAIC,EAAY,MAACC,GACbC,EAAU,uBAgDd,OAnCAV,OAAOO,iBACL,WACA,SAA+BI,GAG7B,GACsB,kBAAbA,EAAI5E,MACX4E,EAAI5E,KAAK6E,OAAO,EAAGF,MAAoBA,EAFzC,CAQAC,EAAIE,2BAEJ,IAAIC,EAAKC,SAASJ,EAAI5E,KAAK6E,OAAOF,IAAiB,IAC9CF,EAAUM,KAIfN,EAAUM,KACVN,EAAUM,QAAML,EAVhB,CAWF,IACA,GAIFT,OAAOgB,eAAiB,SAA0BF,GAC3CN,EAAUM,KAIfN,EAAUM,QAAML,EAClB,EAzCqB,SAAwBQ,GAC3C,IAAIH,EAAKN,EAAUU,OAInB,OAHAV,EAAUW,KAAKF,GACfjB,OAAOM,YAAYI,EAAUI,EAAGM,SAAS,IAAK,KAEvCN,CACT,CAsCF,CAvDC,IAyDD,SAA8BO,GAC5BrB,OAAOsB,WAAWD,EAAI,EACxB,GAKDrB,OAAOgB,iBACVhB,OAAOgB,eAEHhB,OAAOuB,kBACPvB,OAAOwB,sBACPxB,OAAOyB,mBACPzB,OAAO0B,iBAGP,SAAgCC,GAC9B3B,OAAO4B,aAAaD,EACtB,GAMN,IAAIE,EAAe,WACjB,IAAIC,EAASC,SAASC,cAAc,UACpC,IAAKF,IAAWA,EAAOG,WACrB,OAAO,EAGT,IAAIC,EAAMJ,EAAOG,WAAW,MAC5B,QAAKC,MAGAA,EAAIC,iBAGJD,EAAIE,aAIJC,MAAMhJ,UAAUiJ,QAGhBD,MAAMhJ,UAAU8H,OAKvB,CAzBmB,GA6BfoB,EAAe,WACjB,GAAKV,EAAL,CAYA,IARA,IAMIW,EAAUC,EANVP,EAAMH,SAASC,cAAc,UAAUC,WAAW,MAGlDrE,EAAO,GAKJA,GAAM,CAEX,GADAsE,EAAIQ,KAAO9E,EAAKwD,SAAS,IAAM,gBAE7Bc,EAAIS,YAAY,UAAUnG,QAAUgG,GACpCN,EAAIS,YAAY,KAAKnG,QAAUiG,EAE/B,OAAO7E,EAAO,EAGhB4E,EAAWN,EAAIS,YAAY,UAAUnG,MACrCiG,EAASP,EAAIS,YAAY,KAAKnG,MAE9BoB,GACF,CAEA,OAAO,CAzBP,CA0BF,CA7BmB,GA2CfgF,EAAe,SAAsBC,GACvC,IAAK,IAAIC,EAAGtE,EAAGuE,EAAIF,EAAI3B,OAAQ6B,GAC7BD,EAAIpH,KAAKE,MAAMF,KAAKsH,SAAWD,GAC/BvE,EAAIqE,IAAME,GACVF,EAAIE,GAAKF,EAAIC,GACbD,EAAIC,GAAKtE,EAEX,OAAOqE,CACT,EAEIlB,EAAQ,CAAC,EACTsB,EAAY,SAAmBC,EAAUC,GAC3C,GAAKtB,EAAL,CAIA,IAAIuB,EAAU1H,KAAKE,MAAMF,KAAKsH,SAAWK,KAAKC,OAEzCjB,MAAMkB,QAAQL,KACjBA,EAAW,CAACA,IAGdA,EAASM,SAAQ,SAAUC,EAAIV,GAC7B,GAAkB,kBAAPU,GAET,GADAP,EAASH,GAAKhB,SAAS2B,eAAeD,IACjCP,EAASH,GACZ,MAAM,IAAIY,MAAM,+CAEb,IAAKF,EAAGG,UAAYH,EAAGI,YAC5B,MAAM,IAAIF,MACR,2DAGN,IAGA,IAAIG,EAAW,CACb7H,KAAM,GACN8H,WACE,sHAEF/G,WAAY,SACZgH,MAAO,cACPC,QAAS,EACTC,aAAc,EACdC,aAAa,EACbC,gBAAiB,OAEjB3I,SAAU,EACVoB,gBAAgB,EAChBC,aAAa,EACbuH,OAAQ,KAERC,UAAU,EACVC,UAAW,oBACXC,aAAc,GAEdC,iBAAiB,EAEjBC,KAAM,EACNC,eAAgB,EAChBC,MAAO,WAAiB,EAExBC,aAAcnJ,KAAKoJ,GAAK,EACxBC,YAAarJ,KAAKoJ,GAAK,EACvBlI,aAAc,GAEdoI,SAAS,EACTC,YAAa,GAEb7I,MAAO,SACP8I,YAAa,IAEbC,QAAS,KAETC,MAAO,KACPC,MAAO,MAGT,GAAIlC,EACF,IAAK,IAAImC,KAAOnC,EACVmC,KAAOxB,IACTA,EAASwB,GAAOnC,EAAQmC,IAM9B,GAAqC,oBAA1BxB,EAASI,aAA6B,CAC/C,IAAIqB,EAASzB,EAASI,aACtBJ,EAASI,aAAe,SAAsBsB,GAC5C,OAAOA,EAAKD,CACd,CACF,CAGA,GAA8B,oBAAnBzB,EAAS1H,MAClB,OAAQ0H,EAAS1H,OACf,IAAK,SAEL,QAEE0H,EAAS1H,MAAQ,SACjB,MAEF,IAAK,WACH0H,EAAS1H,MAAQ,SAAuBqJ,GACtC,OAAO,EAAI/J,KAAKgK,IAAID,EACtB,EACA,MAWF,IAAK,UAIH3B,EAAS1H,MAAQ,SAAqBqJ,GACpC,IAAIE,EAAaF,GAAU,EAAI/J,KAAKoJ,GAAM,GAC1C,OAAO,GAAKpJ,KAAKkK,IAAID,GAAcjK,KAAKgK,IAAIC,GAC9C,EACA,MAEF,IAAK,SAGH7B,EAAS1H,MAAQ,SAAqBqJ,GACpC,OAAO/J,KAAKmK,IACV,EAAInK,KAAKoK,IAAIpK,KAAKkK,IAAIH,IACtB,EAAI/J,KAAKoK,IAAIpK,KAAKgK,IAAID,IAE1B,EACA,MAEF,IAAK,mBAIH3B,EAAS1H,MAAQ,SAAuBqJ,GACtC,IAAIE,EAAaF,GAAU,EAAI/J,KAAKoJ,GAAM,GAC1C,OACE,GAAKpJ,KAAKkK,IAAID,GAAcjK,KAAKqK,KAAK,GAAKrK,KAAKgK,IAAIC,GAExD,EACA,MAEF,IAAK,WACL,IAAK,mBACH7B,EAAS1H,MAAQ,SAAuBqJ,GACtC,IAAIE,GAAcF,EAAmB,EAAV/J,KAAKoJ,GAAU,IAAO,EAAIpJ,KAAKoJ,GAAM,GAChE,OACE,GAAKpJ,KAAKkK,IAAID,GAAcjK,KAAKqK,KAAK,GAAKrK,KAAKgK,IAAIC,GAExD,EACA,MAEF,IAAK,WACH7B,EAAS1H,MAAQ,SAAuBqJ,GACtC,IAAIE,GAAcF,EAAQ,OAAW,EAAI/J,KAAKoJ,GAAM,GACpD,OAAO,GAAKpJ,KAAKkK,IAAID,GAAc,QAAWjK,KAAKgK,IAAIC,GACzD,EACA,MAEF,IAAK,OACH7B,EAAS1H,MAAQ,SAAmBqJ,GAClC,IAAIE,GAAcF,EAAQ,OAAW,EAAI/J,KAAKoJ,GAAM,IACpD,OACIW,EAAQ,OAAW,EAAI/J,KAAKoJ,GAAM,GAAO,EAAIpJ,KAAKoJ,GAAM,IAC1D,EAGE,GACCpJ,KAAKkK,IAAK,EAAIlK,KAAKoJ,GAAM,GAAKa,GAC7B,QAAUjK,KAAKgK,IAAK,EAAIhK,KAAKoJ,GAAM,GAAKa,IAGrC,GAAKjK,KAAKkK,IAAID,GAAc,QAAUjK,KAAKgK,IAAIC,GAE1D,EAMN7B,EAASrI,SAAWC,KAAKC,IAAID,KAAKE,MAAMkI,EAASrI,UAAW,GAG5D,IASIuK,EACFC,EACAC,EACAC,EACAC,EAGEC,EAGAC,EAiCAC,EApDAC,EAAI1C,EAASrI,SACbgL,EAAgBD,EAAI1C,EAASU,aAG7B7H,EAAgBjB,KAAKoK,IAAIhC,EAASiB,YAAcjB,EAASe,aACzDA,EAAcnJ,KAAKmK,IAAI/B,EAASiB,YAAajB,EAASe,aACtDjI,EAAekH,EAASlH,aAyB5B,OAAQkH,EAASE,OACf,IAAK,cACHsC,EAAe,WACb,OAAOI,EAAe,GAAI,GAC5B,EACA,MAEF,IAAK,eACHJ,EAAe,WACb,OAAOI,EAAe,GAAI,GAC5B,EACA,MAEF,QACgC,oBAAnB5C,EAASE,QAClBsC,EAAexC,EAASE,OAOK,oBAAxBF,EAAS9G,aAClBuJ,EAAoBzC,EAAS9G,YAI/B,IAAI2J,EAAiB,KACW,oBAArB7C,EAASqB,UAClBwB,EAAiB7C,EAASqB,SAI5B,IAEIyB,EAFAC,GAAc,EACdC,EAAW,GAGXC,EAAiC,SACnCpG,GAEA,IAEIqG,EACAC,EAHAnF,EAASnB,EAAIuG,cACbC,EAAOrF,EAAOsF,wBAIdzG,EAAI0G,SACNL,EAAUrG,EAAI0G,QAAQ,GAAGL,QACzBC,EAAUtG,EAAI0G,QAAQ,GAAGJ,UAEzBD,EAAUrG,EAAIqG,QACdC,EAAUtG,EAAIsG,SAEhB,IAAIK,EAASN,EAAUG,EAAK7K,KACxBiL,EAASN,EAAUE,EAAK5K,IAExBiC,EAAI9C,KAAKE,MAAO0L,GAAUxF,EAAOtF,MAAQ2K,EAAK3K,OAAS,GAAMgK,GAC7D7H,EAAIjD,KAAKE,MAAO2L,GAAUzF,EAAOrF,OAAS0K,EAAK1K,QAAU,GAAM+J,GAEnE,OAAKM,EAAStI,GAIPsI,EAAStI,GAAGG,GAHV,IAIX,EAEI6I,EAAiB,SAAwB7G,GAC3C,IAAItC,EAAO0I,EAA+BpG,GAEtCiG,IAAYvI,IAIhBuI,EAAUvI,EACLA,EAMLyF,EAASsB,MAAM/G,EAAKoJ,KAAMpJ,EAAKqJ,UAAW/G,GALxCmD,EAASsB,WAAM3E,OAAWA,EAAWE,GAMzC,EAEIgH,EAAiB,SAAwBhH,GAC3C,IAAItC,EAAO0I,EAA+BpG,GACrCtC,IAILyF,EAASuB,MAAMhH,EAAKoJ,KAAMpJ,EAAKqJ,UAAW/G,GAC1CA,EAAIiH,iBACN,EAGIC,EAAiB,GACjBC,EAAoB,SAA2BC,GACjD,GAAIF,EAAeE,GACjB,OAAOF,EAAeE,GAIxB,IAAIC,EAAa,EAATD,EAGJE,EAAID,EACJE,EAAS,GAMb,IAJe,IAAXH,GACFG,EAAO/G,KAAK,CAACgF,EAAO,GAAIA,EAAO,GAAI,IAG9B8B,KAAK,CAEV,IAAIE,EAAK,EACc,WAAnBrE,EAAS1H,QACX+L,EAAKrE,EAAS1H,MAAO6L,EAAID,EAAK,EAAItM,KAAKoJ,KAIzCoD,EAAO/G,KAAK,CACVgF,EAAO,GAAK4B,EAASI,EAAKzM,KAAKkK,KAAMqC,EAAID,EAAK,EAAItM,KAAKoJ,IACvDqB,EAAO,GACL4B,EAASI,EAAKzM,KAAKgK,KAAMuC,EAAID,EAAK,EAAItM,KAAKoJ,IAAMhB,EAASoB,YAC3D+C,EAAID,EAAK,EAAItM,KAAKoJ,IAEvB,CAGA,OADA+C,EAAeE,GAAUG,EAClBA,CACT,EAGIE,EAAa,WACf,OACEtE,EAASa,eAAiB,IAC1B,IAAItB,MAAOgF,UAAYhC,EAAavC,EAASa,cAEjD,EAwYI2D,EAAa,SAAoB9J,EAAGG,EAAG2F,EAAUoD,EAAWD,GAC9D,KAAIjJ,GAAKyH,GAAOtH,GAAKuH,GAAO1H,EAAI,GAAKG,EAAI,GAAzC,CAMA,GAFAqH,EAAKxH,GAAGG,IAAK,EAET2F,EACQpB,EAAS,GAAGjB,WAAW,MAC7BsG,SAAS/J,EAAIgI,EAAG7H,EAAI6H,EAAGC,EAAeA,GAGxCI,IACFC,EAAStI,GAAGG,GAAK,CAAE8I,KAAMA,EAAMC,UAAWA,GAV5C,CAYF,EA6CIc,EAAU,SAASA,EAAQf,EAAMgB,GACnC,GAAIA,EAAY,GACd,OAAO,KAGT,IAAIC,EAAMC,EAAQC,EACdvG,MAAMkB,QAAQkE,IAChBiB,EAAOjB,EAAK,GACZkB,EAASlB,EAAK,KAEdiB,EAAOjB,EAAKiB,KACZC,EAASlB,EAAKkB,OACdC,EAAanB,EAAKmB,YAEpB,IAAIC,EA9cyB,IAAzB/E,EAASmB,aAITvJ,KAAKsH,SAAWc,EAASmB,YAHpB,EAOa,IAAlBtI,EACKkI,EAGFA,EAAcnJ,KAAKoN,MAAMpN,KAAKsH,SAAWrG,EAAgBC,GAAgBA,EAoc5EmM,EAz0Be,SAAUtB,GAC/B,GAAIpF,MAAMkB,QAAQkE,GAAO,CACvB,IAAIuB,EAAWvB,EAAKwB,QAGpB,OADAD,EAASE,OAAO,EAAG,GACZF,CACT,CACE,MAAO,EAEX,CAg0ByBG,CAAiB1B,GAGlCpJ,EApcY,SAChBqK,EACAC,EACAE,EACAE,GAKA,IACI1J,EAAWyE,EAASI,aAAayE,GACrC,GAAItJ,GAAYyE,EAASG,QACvB,OAAO,EAMT,IAYIjH,EAZAsB,EAAK,EACLe,EAAWkD,IACbjE,EAAM,WAEJ,IADA,IAAIA,EAAK,EACFA,EAAKe,EAAWkD,GACrBjE,GAAM,EAER,OAAOA,CACT,CANM,IAYNtB,EADEuJ,EACWA,EAAkBmC,EAAMC,EAAQtJ,EAAU0J,GAE1CjF,EAAS9G,WAGxB,IAAIoM,EAAUrH,SAASC,cAAc,UACjCqH,EAAOD,EAAQnH,WAAW,KAAM,CAAEqH,oBAAoB,IAE1DD,EAAK3G,KACH1F,EACA,KACCqC,EAAWf,GAAI8C,SAAS,IACzB,MACA0C,EAASC,WAGX,IAAIwF,EAAKF,EAAK1G,YAAY+F,GAAMlM,MAAQ8B,EACpCkL,EACF9N,KAAKC,IACH0D,EAAWf,EACX+K,EAAK1G,YAAY,KAAKnG,MACtB6M,EAAK1G,YAAY,UAAUnG,OACzB8B,EAIFmL,EAAWF,EAAU,EAALC,EAChBE,EAAiB,EAALF,EACZG,EAAMjO,KAAKkO,KAAKH,EAAWjD,GAC3BqD,EAAMnO,KAAKkO,KAAKF,EAAYlD,GAChCiD,EAAWE,EAAMnD,EACjBkD,EAAYG,EAAMrD,EAMlB,IAAIvH,GAAmBsK,EAAK,EAIxBrK,EAAwB,IAALsK,EAGnBM,EAAMpO,KAAKkO,MACZH,EAAW/N,KAAKoK,IAAIpK,KAAKgK,IAAImD,IAC5Ba,EAAYhO,KAAKoK,IAAIpK,KAAKkK,IAAIiD,KAC9BrC,GAEAuD,EAAMrO,KAAKkO,MACZH,EAAW/N,KAAKoK,IAAIpK,KAAKkK,IAAIiD,IAC5Ba,EAAYhO,KAAKoK,IAAIpK,KAAKgK,IAAImD,KAC9BrC,GAEAhK,EAAQuN,EAAMvD,EACd/J,EAASqN,EAAMtD,EAEnB4C,EAAQY,aAAa,QAASxN,GAC9B4M,EAAQY,aAAa,SAAUvN,GAU/B4M,EAAKY,MAAM,EAAI3L,EAAI,EAAIA,GACvB+K,EAAKa,UAAW1N,EAAQ8B,EAAM,EAAI7B,EAAS6B,EAAM,GACjD+K,EAAKc,QAAQtB,GAIbQ,EAAK3G,KACH1F,EACA,KACCqC,EAAWf,GAAI8C,SAAS,IACzB,MACA0C,EAASC,WAQXsF,EAAKe,UAAY,OACjBf,EAAKgB,aAAe,SACpBhB,EAAKjH,SACHsG,EACAzJ,EAAkBX,GACjBY,EAA6B,GAAXG,GAAkBf,GAIvC,IAAIgM,EAAYjB,EAAKlH,aAAa,EAAG,EAAG3F,EAAOC,GAAQV,KAEvD,GAAIqM,IACF,OAAO,EAcT,IAJA,IAEIxJ,EAAIJ,EAAGG,EAFP4L,EAAW,GACX9L,EAAKsL,EAELS,EAAS,CAACV,EAAM,EAAGC,EAAM,EAAGD,EAAM,EAAGC,EAAM,GACxCtL,KAEL,IADAG,EAAKkL,EACElL,KAAM,CACXD,EAAI6H,EAEJiE,EAAgB,KAAO9L,KAErB,IADAH,EAAIgI,EACGhI,KACL,GAAI8L,EAAkD,IAAtC1L,EAAK4H,EAAI7H,GAAKnC,GAASiC,EAAK+H,EAAIhI,IAAU,GAAI,CAC5D+L,EAASpJ,KAAK,CAAC1C,EAAIG,IAEfH,EAAK+L,EAAO,KACdA,EAAO,GAAK/L,GAEVA,EAAK+L,EAAO,KACdA,EAAO,GAAK/L,GAEVG,EAAK4L,EAAO,KACdA,EAAO,GAAK5L,GAEVA,EAAK4L,EAAO,KACdA,EAAO,GAAK5L,GAOd,MAAM6L,CACR,CAON,CAcF,MAAO,CACLnM,GAAIA,EACJiM,SAAUA,EACVC,OAAQA,EACR9L,GAAIqL,EACJlL,GAAIiL,EACJ7K,gBAAiBA,EACjBC,gBAAiBA,EACjBwL,cAAenB,EACfoB,eAAgBnB,EAChBnK,SAAUA,EAEd,CAqPauL,CAAYlC,EAAMC,EAAQE,EAAWE,GAGhD,IAAK1K,EACH,OAAO,EAGT,GAAI+J,IACF,OAAO,EAMT,IAAKtE,EAASjH,iBAAmBiH,EAAShH,YAAa,CACrD,IAAI0N,EAASnM,EAAKmM,OAClB,GAAIA,EAAO,GAAKA,EAAO,GAAK,EAAIvE,GAAOuE,EAAO,GAAKA,EAAO,GAAK,EAAItE,EACjE,OAAO,CAEX,CA2CA,IAvCA,IAAI2E,EAAIzE,EAAY,EAEhB0E,EAAsB,SAAUC,GAClC,IAAItM,EAAK/C,KAAKE,MAAMmP,EAAI,GAAK1M,EAAKK,GAAK,GACnCE,EAAKlD,KAAKE,MAAMmP,EAAI,GAAK1M,EAAKQ,GAAK,GAC9BR,EAAKK,GACLL,EAAKQ,GAId,QAnRa,SAAoBJ,EAAIG,EAAIF,EAAIG,EAAI0L,GAInD,IADA,IAAIxH,EAAIwH,EAASrJ,OACV6B,KAAK,CACV,IAAIiI,EAAKvM,EAAK8L,EAASxH,GAAG,GACtBkI,EAAKrM,EAAK2L,EAASxH,GAAG,GAE1B,GAAIiI,GAAM/E,GAAOgF,GAAM/E,GAAO8E,EAAK,GAAKC,EAAK,GAC3C,IAAKnH,EAASjH,eACZ,OAAO,OAKX,IAAKmJ,EAAKgF,GAAIC,GACZ,OAAO,CAEX,CACA,OAAO,CACT,CA+PSC,CAAWzM,EAAIG,EAAIF,EAAIG,EAAIR,EAAKkM,YA5P1B,SACb9L,EACAG,EACAP,EACAqK,EACAC,EACAwC,EACA1F,EACAoD,EACAD,EACAG,GAEA,IACI/E,EAeAhH,EAOAmI,EAvBA9F,EAAWhB,EAAKgB,SAGlB2E,EADEsC,EACMA,EACNoC,EACAC,EACAtJ,EACA8L,EACA1F,EACAsD,GAGMjF,EAASE,MAMjBhH,EADEuJ,EACWA,EAAkBmC,EAAMC,EAAQtJ,EAAU0J,GAE1CjF,EAAS9G,WAKtBmI,EADEwB,EACQA,EAAe+B,EAAMC,EAAQtJ,EAAU0J,GAEvCjF,EAASqB,QAGrBjC,EAASM,SAAQ,SAAUC,GACzB,GAAIA,EAAGxB,WAAY,CACjB,IAAIC,EAAMuB,EAAGxB,WAAW,MACpB3D,EAAKD,EAAKC,GAGd4D,EAAIkJ,OACJlJ,EAAI+H,MAAM,EAAI3L,EAAI,EAAIA,GAEtB4D,EAAIQ,KACF1F,EACA,KACCqC,EAAWf,GAAI8C,SAAS,IACzB,MACA0C,EAASC,WACX7B,EAAIkI,UAAYpG,EAIhB9B,EAAIgI,WAAWzL,EAAKJ,EAAKK,GAAK,GAAK8H,EAAIlI,GAAKM,EAAKP,EAAKQ,GAAK,GAAK2H,EAAIlI,GAElD,IAAduK,GACF3G,EAAIiI,QAAQtB,GAUd3G,EAAImI,aAAe,SACnBnI,EAAIE,SACFsG,EACArK,EAAKY,gBAAkBX,GACtBD,EAAKa,gBAA6B,GAAXG,GAAkBf,GAQ5C4D,EAAImJ,SACN,KAAO,CAEL,IAAIC,EAAOvJ,SAASC,cAAc,QAC9BuJ,EAAgB,GACpBA,EAAgB,WAAc1C,EAAYnN,KAAKoJ,GAAM,IAAM,QAC3C,IAAZzG,EAAKC,KACPiN,GACE,eACAlN,EAAKqM,cAAgB,EADrB,aAIA,EAAIrM,EAAKC,GACT,KAEJ,IAAIkN,EAAa,CACfC,SAAU,WACVC,QAAS,QACThJ,KACE1F,EAAa,IAAMqC,EAAWhB,EAAKC,GAAK,MAAQwF,EAASC,WAC3DzH,MAAOmC,EAAKJ,EAAKK,GAAK,GAAK8H,EAAInI,EAAKY,gBAAkB,KACtD1C,KAAMqC,EAAKP,EAAKQ,GAAK,GAAK2H,EAAInI,EAAKa,gBAAkB,KACrD1C,MAAO6B,EAAKqM,cAAgB,KAC5BjO,OAAQ4B,EAAKsM,eAAiB,KAC9BgB,WAAYtM,EAAW,KACvBuM,WAAY,SACZC,UAAWN,EACXO,gBAAiBP,EACjBQ,YAAaR,EACbS,gBAAiB,UACjBC,sBAAuB,UACvBC,kBAAmB,WAMrB,IAAK,IAAIC,KAJLnI,IACFwH,EAAWxH,MAAQA,GAErBsH,EAAKc,YAAc1D,EACC8C,EAClBF,EAAKnN,MAAMgO,GAAWX,EAAWW,GAEnC,GAAIvD,EACF,IAAK,IAAIyD,KAAazD,EACpB0C,EAAKtB,aAAaqC,EAAWzD,EAAWyD,IAGxClH,IACFmG,EAAKgB,WAAanH,GAEpB1B,EAAGI,YAAYyH,EACjB,CACF,GACF,CAwHIiB,CACE9N,EACAG,EACAP,EACAqK,EACAC,EACAvC,EAAYyE,EACZE,EAAI,GACJlC,EACAD,EACAG,GA5GW,SAAoBtK,EAAIG,EAAIF,EAAIG,EAAIR,EAAMoJ,GACzD,IAEIvF,EAOAwF,EATA6C,EAAWlM,EAAKkM,SAChBjG,EAAWR,EAASQ,SASxB,GAPIA,KACFpC,EAAMgB,EAAS,GAAGjB,WAAW,OACzBmJ,OACJlJ,EAAIkI,UAAYtG,EAASS,WAIvBsC,EAAa,CACf,IAAI2D,EAASnM,EAAKmM,OAClB9C,EAAY,CACVlJ,GAAIC,EAAK+L,EAAO,IAAMhE,EACtB7H,GAAIC,EAAK4L,EAAO,IAAMhE,EACtBgG,GAAIhC,EAAO,GAAKA,EAAO,GAAK,GAAKhE,EACjCiG,GAAIjC,EAAO,GAAKA,EAAO,GAAK,GAAKhE,EAErC,CAGA,IADA,IAAIzD,EAAIwH,EAASrJ,OACV6B,KAAK,CACV,IAAIiI,EAAKvM,EAAK8L,EAASxH,GAAG,GACtBkI,EAAKrM,EAAK2L,EAASxH,GAAG,GAEtBiI,GAAM/E,GAAOgF,GAAM/E,GAAO8E,EAAK,GAAKC,EAAK,GAI7C3C,EAAW0C,EAAIC,EAAI3G,EAAUoD,EAAWD,EAC1C,CAEInD,GACFpC,EAAImJ,SAER,CA4EIqB,CAAWjO,EAAIG,EAAIF,EAAIG,EAAIR,EAAMoJ,GAE1B,CACLhJ,GAAIA,EACJG,GAAIA,EACJG,IAAK8J,EACLxK,KAAMA,GAEV,EAEOwM,KAAK,CACV,IAAI3C,EAASJ,EAAkB1B,EAAYyE,GAEvC/G,EAASkB,UACXkD,EAAS,GAAGyE,OAAOzE,GACnBtF,EAAasF,IAMf,IAAK,IAAInF,EAAI,EAAGA,EAAImF,EAAOhH,OAAQ6B,IAAK,CACtC,IAAI6J,EAAM9B,EAAoB5C,EAAOnF,IACrC,GAAI6J,EACF,OAAOA,CAEX,CAOF,CAEA,OAAI9I,EAAShH,aACPuF,MAAMkB,QAAQkE,GAChBA,EAAK,GAAgB,EAAVA,EAAK,GAAU,EAE1BA,EAAKkB,OAAwB,EAAdlB,EAAKkB,OAAc,EAE7BH,EAAQf,EAAMgB,EAAY,IAI5B,IACT,EAIIoE,EAAY,SAAmB1T,EAAM2T,EAAYC,GACnD,GAAID,EACF,OAAQ5J,EAASZ,MAAK,SAAUmB,GAC9B,IAAIuJ,EAAQ,IAAIC,YAAY9T,EAAM,CAChC+T,OAAQH,GAAW,CAAC,IAEtB,OAAQtJ,EAAG0J,cAAcH,EAC3B,GAAG/T,MAEHiK,EAASM,SAAQ,SAAUC,GACzB,IAAIuJ,EAAQ,IAAIC,YAAY9T,EAAM,CAChC+T,OAAQH,GAAW,CAAC,IAEtBtJ,EAAG0J,cAAcH,EACnB,GAAG/T,KAEP,GAGY,WAGV,IAAI6I,EAASoB,EAAS,GAEtB,GAAIpB,EAAOG,WACTgE,EAAMvK,KAAKkO,KAAK9H,EAAOtF,MAAQgK,GAC/BN,EAAMxK,KAAKkO,KAAK9H,EAAOrF,OAAS+J,OAC3B,CACL,IAAIW,EAAOrF,EAAOsF,wBAClBnB,EAAMvK,KAAKkO,KAAKzC,EAAK3K,MAAQgK,GAC7BN,EAAMxK,KAAKkO,KAAKzC,EAAK1K,OAAS+J,EAChC,CAIA,GAAKqG,EAAU,kBAAkB,GAAjC,CAgBA,IAAIpO,EAAIG,EAAImE,EAyGRqK,EAAiBC,EAxGrB,GAZAlH,EAASrC,EAASO,OACd,CAACP,EAASO,OAAO,GAAKmC,EAAG1C,EAASO,OAAO,GAAKmC,GAC9C,CAACP,EAAM,EAAGC,EAAM,GAGpBE,EAAY1K,KAAKE,MAAMF,KAAKqK,KAAKE,EAAMA,EAAMC,EAAMA,IAInDF,EAAO,IAGFlE,EAAOG,YAAc6B,EAASK,YAgBjC,IAfAjB,EAASM,SAAQ,SAAUC,GACzB,GAAIA,EAAGxB,WAAY,CACjB,IAAIC,EAAMuB,EAAGxB,WAAW,MACxBC,EAAIkI,UAAYtG,EAASM,gBACzBlC,EAAIoL,UAAU,EAAG,EAAGrH,GAAOO,EAAI,GAAIN,GAAOM,EAAI,IAC9CtE,EAAIqG,SAAS,EAAG,EAAGtC,GAAOO,EAAI,GAAIN,GAAOM,EAAI,GAC/C,MACE/C,EAAG2I,YAAc,GACjB3I,EAAGtF,MAAMiG,gBAAkBN,EAASM,gBACpCX,EAAGtF,MAAMsN,SAAW,UAExB,IAGAhN,EAAKwH,EACExH,KAGL,IAFAuH,EAAKvH,GAAM,GACXG,EAAKsH,EACEtH,KACLoH,EAAKvH,GAAIG,IAAM,MAGd,CAGL,IAAI2O,EAAOxL,SAASC,cAAc,UAAUC,WAAW,MAEvDsL,EAAKnD,UAAYtG,EAASM,gBAC1BmJ,EAAKhF,SAAS,EAAG,EAAG,EAAG,GACvB,IAUI/J,EAAGG,EAVH6O,EAAUD,EAAKpL,aAAa,EAAG,EAAG,EAAG,GAAGpG,KAKxCuO,EAAYxI,EACbG,WAAW,MACXE,aAAa,EAAG,EAAG8D,EAAMO,EAAGN,EAAMM,GAAGzK,KAIxC,IAFA0C,EAAKwH,EAEExH,KAGL,IAFAuH,EAAKvH,GAAM,GACXG,EAAKsH,EACEtH,KAAM,CACXD,EAAI6H,EAEJiE,EAAgB,KAAO9L,KAErB,IADAH,EAAIgI,EACGhI,KAEL,IADAuE,EAAI,EACGA,KACL,GACEuH,EAAoD,IAAxC1L,EAAK4H,EAAI7H,GAAKsH,EAAMO,GAAK/H,EAAK+H,EAAIhI,IAAUuE,KACxDyK,EAAQzK,GACR,CACAiD,EAAKvH,GAAIG,IAAM,EACf,MAAM6L,CACR,EAIe,IAAjBzE,EAAKvH,GAAIG,KACXoH,EAAKvH,GAAIG,IAAM,EAEnB,CAGF0L,EAAYiD,EAAOC,OAAU/M,CAC/B,CAGA,GAAIqD,EAASsB,OAAStB,EAASuB,MAAO,CAKpC,IAJAwB,GAAc,EAGdpI,EAAKwH,EAAM,EACJxH,KACLqI,EAASrI,GAAM,GAGbqF,EAASsB,OACXtD,EAAOvB,iBAAiB,YAAaiH,GAGnC1D,EAASuB,QACXvD,EAAOvB,iBAAiB,QAASoH,GACjC7F,EAAOvB,iBAAiB,aAAcoH,GACtC7F,EAAOvB,iBAAiB,YAAY,SAAUkN,GAC5CA,EAAE7F,gBACJ,IACA9F,EAAO3D,MAAMuP,wBAA0B,oBAGzC5L,EAAOvB,iBAAiB,kBAAkB,SAASoN,IACjD7L,EAAO8L,oBAAoB,iBAAkBD,GAE7C7L,EAAO8L,oBAAoB,YAAapG,GACxC1F,EAAO8L,oBAAoB,QAASjG,GACpCf,OAAUnG,CACZ,GACF,CAEAsC,EAAI,EAEJ,IAAI8K,GAAY,EACX/J,EAASW,gBAOe,IAAlBX,EAASY,MAClB0I,EAAkBpN,OAAOsB,WACzB+L,EAAmBrN,OAAO4B,eAE1BwL,EAAkBpN,OAAOC,aACzBoN,EAAmBrN,OAAOgB,iBAX1BoM,EAAkB,SAAUU,GAC1BA,GACF,EACAT,EAAmB,WACjBQ,GAAY,CACd,GASF,IAMID,EAAsB,SAA6BzU,EAAM4U,GAC3D7K,EAASM,SAAQ,SAAUC,GACzBA,EAAGmK,oBAAoBzU,EAAM4U,EAC/B,GAAG9U,KACL,EAEI+U,EAAwB,SAASA,IACnCJ,EAAoB,iBAAkBI,GACtCX,EAAiB1L,EAAMyB,GACzB,GAfuB,SAA0BjK,EAAM4U,GACrD7K,EAASM,SAAQ,SAAUC,GACzBA,EAAGlD,iBAAiBpH,EAAM4U,EAC5B,GAAG9U,KACL,CAaAsH,CAAiB,iBAAkByN,GAGnCrM,EAAMyB,IAAYU,EAASW,gBAAkB2I,EAAkB9L,aAC7D,SAAS2M,IACP,GAAKJ,EAAL,CAGA,GAAI9K,GAAKe,EAAS7H,KAAKiF,OAKrB,OAJAmM,EAAiB1L,EAAMyB,IACvByJ,EAAU,iBAAiB,GAC3Be,EAAoB,iBAAkBI,eAC/BrM,EAAMyB,GAGfiD,GAAa,IAAIhD,MAAOgF,UACxB,IAAIvK,EAAQ0K,EAAQ1E,EAAS7H,KAAK8G,GAAI,GAClCmL,GAAYrB,EAAU,kBAAkB,EAAM,CAChDpF,KAAM3D,EAAS7H,KAAK8G,GACpBjF,MAAOA,IAET,GAAIsK,KAAgB8F,EAMlB,OALAb,EAAiB1L,EAAMyB,IACvBU,EAASc,QACTiI,EAAU,kBAAkB,GAC5BA,EAAU,iBAAiB,QAC3Be,EAAoB,iBAAkBI,GAGxCjL,IACApB,EAAMyB,GAAWgK,EAAgBa,EAAMnK,EAASY,KAvBhD,CAwBF,GACAZ,EAASY,KAzLX,CA2LF,CAGAyJ,EA3nCA,CAwMA,SAASzH,EAAeb,EAAKlK,GAC3B,MACE,QACiB,IAAhBD,KAAKsH,UAAgBoL,UACtB,KACiB,GAAhB1S,KAAKsH,SAAgB,IAAIoL,UAC1B,MACC1S,KAAKsH,UAAYrH,EAAMkK,GAAOA,GAAKuI,UACpC,IAEJ,CA06BF,EAEAnL,EAAUpB,YAAcA,EACxBoB,EAAUV,YAAcA,EAExB,UCnzCA,IAAK8L,EAAsBxM,YACzB,MAAM,IAAI8B,MAAM,4CA8ClBzI,EAAAA,IAAuB,SAAUzB,EAAS4D,GACxC5D,EAAQ6U,iBAAiB,aAAa,SAAUlR,GAC9C,IAAImR,EAAWrT,EAAAA,GACbkC,EAAYoR,qBACZ,CACEhS,MAAOa,EAAIoR,WACXhS,OAAQY,EAAIqR,cAIZrS,EAAae,EAAY7B,IAAI,cAC7BY,EAAYiB,EAAY7B,IAAI,aAC5BoT,EAAQxS,EAAYA,EAAUK,MAAQL,EAAUM,OAAS,EAC7DJ,GAqIJ,SAA0BkS,EAAUK,GAGlC,IAAIpS,EAAQ+R,EAAS/R,MACjBC,EAAS8R,EAAS9R,OAClBD,EAAQC,EAASmS,GACnBL,EAAS/P,IAAMhC,EAAQC,EAASmS,GAAU,EAC1CL,EAAS/R,MAAQC,EAASmS,IAE1BL,EAAS5P,IAAMlC,EAASD,EAAQoS,GAAU,EAC1CL,EAAS9R,OAASD,EAAQoS,EAE9B,CAjJkBC,CAAiBN,EAAUI,GAEzC,IAAI5S,EAAOqB,EAAYI,UAEnBsE,EAASC,SAASC,cAAc,UACpCF,EAAOtF,MAAQ+R,EAAS/R,MACxBsF,EAAOrF,OAAS8R,EAAS9R,OAEzB,IAAIyF,EAAMJ,EAAOG,WAAW,MAC5B,GAAI9F,EACF,IACE+F,EAAI4M,UAAU3S,EAAW,EAAG,EAAG2F,EAAOtF,MAAOsF,EAAOrF,QAlE5D,SAA0BsS,GAOxB,IANA,IAAI7M,EAAM6M,EAAW9M,WAAW,MAC5BqI,EAAYpI,EAAIC,aAAa,EAAG,EAAG4M,EAAWvS,MAAOuS,EAAWtS,QAChEuS,EAAe9M,EAAI+M,gBAAgB3E,GAEnC4E,EAAU,EACVC,EAAU,EACLpM,EAAI,EAAGA,EAAIuH,EAAUvO,KAAKmF,OAAQ6B,GAAK,EAClCuH,EAAUvO,KAAKgH,EAAI,GACnB,MAGVmM,GAFIE,EACF9E,EAAUvO,KAAKgH,GAAKuH,EAAUvO,KAAKgH,EAAI,GAAKuH,EAAUvO,KAAKgH,EAAI,KAE/DoM,GAGN,IAAIE,EAAYH,EAAUC,EAE1B,IAASpM,EAAI,EAAGA,EAAIuH,EAAUvO,KAAKmF,OAAQ6B,GAAK,EAAG,CACjD,IAAIqM,EACF9E,EAAUvO,KAAKgH,GAAKuH,EAAUvO,KAAKgH,EAAI,GAAKuH,EAAUvO,KAAKgH,EAAI,GACrDuH,EAAUvO,KAAKgH,EAAI,GAEnB,KAAOqM,EAAOC,GAExBL,EAAajT,KAAKgH,GAAK,EACvBiM,EAAajT,KAAKgH,EAAI,GAAK,EAC3BiM,EAAajT,KAAKgH,EAAI,GAAK,EAC3BiM,EAAajT,KAAKgH,EAAI,GAAK,IAI3BiM,EAAajT,KAAKgH,GAAK,IACvBiM,EAAajT,KAAKgH,EAAI,GAAK,IAC3BiM,EAAajT,KAAKgH,EAAI,GAAK,IAC3BiM,EAAajT,KAAKgH,EAAI,GAAK,IAE/B,CAEAb,EAAIoN,aAAaN,EAAc,EAAG,EACpC,CA2BQO,CAAiBzN,EACnB,CAAE,MAAO2L,GACP+B,QAAQC,MAAM,sBACdD,QAAQC,MAAMhC,EAAErM,WAClB,CAGF,IAAI1E,EAAYU,EAAY7B,IAAI,aAC5BoB,EAAgBS,EAAY7B,IAAI,iBAChCmU,EAAc3T,EAAK4T,cAAc,SAEjCC,EAAgBlU,KAAKoJ,GAAK,IAC1BrJ,EAAW2B,EAAY7B,IAAI,YAgD/B,SAASsU,EAAiBpC,GACxB,IAAIhG,EAAOgG,EAAEP,OAAOzF,KAChBgG,EAAEP,OAAOpP,OAASV,EAAYK,eAAeC,SAC/C+P,EAAEP,OAAOpP,MAAMW,IAAM8P,EAAS/P,EAAI/C,EAClCgS,EAAEP,OAAOpP,MAAMc,IAAM2P,EAAS5P,EAAIlD,EAClC2B,EAAYK,eAAeC,OACzB+J,EAAK,GACLA,EAAK,GACLA,EAAK,GACLgG,EAAEP,OAAOpP,OAGf,CA3DAuQ,EAAsBvM,EAAQ,CAC5B7F,KAAMF,EACH+T,SAAS,SAAS,SAAUC,EAAOC,GAClC,IAAIjS,EAAYhC,EAAKiC,aAAagS,GAClC,MAAO,CACLjU,EAAKkU,QAAQD,GACbjS,EAAUxC,IAAI,sBAAsB,IAClCL,EAAAA,GAAyB6U,EAAOL,EAAahT,GAC/CsT,EAEJ,IACCE,MAAK,SAAUC,EAAGC,GAEjB,OAAOA,EAAE,GAAKD,EAAE,EAClB,IACFpM,WACE3G,EAAY7B,IAAI,yBAChB6B,EAAY7B,IAAI,kCAChB9B,EAAQ8B,IAAI,wBACdyB,WACEI,EAAY7B,IAAI,yBAChB6B,EAAY7B,IAAI,kCAChB9B,EAAQ8B,IAAI,wBAEdE,SAAUA,EAEVyJ,YAAaqJ,EAAS9R,OAAS8R,EAAS/R,MAExCqI,YAAalI,EAAc,GAAKiT,EAChC7K,YAAapI,EAAc,GAAKiT,EAEhCzL,aAAchI,EAEd8I,YAAa,EAEbrI,aAAcQ,EAAY7B,IAAI,gBAAkBqU,EAEhD/S,eAAgBO,EAAY7B,IAAI,kBAChCuB,YAAaM,EAAY7B,IAAI,eAE7BkJ,gBAAiBrH,EAAY7B,IAAI,mBAEjCyJ,SAAS,EAET5I,MAAOgB,EAAY7B,IAAI,WAiBzBuG,EAAOvB,iBAAiB,iBAAkBsP,GAEtCzS,EAAYK,gBAEdL,EAAYK,eAAesC,UAG7B3C,EAAYK,eAAiB,CAC3BC,OAAQ,KAERqC,QAAS,WACP+B,EAAO8L,oBAAoB,iBAAkBiC,GAE7C/N,EAAOvB,iBAAiB,kBAAkB,SAAUkN,GAElDA,EAAE7F,gBACJ,GACF,EAEJ,GACF,IAEA1M,EAAAA,IAA6B,SAAU3B,GACrC,IAAI8W,GAAU9W,GAAU,CAAC,GAAG8W,QAC3BnV,EAAAA,GAAqBmV,KAAYA,EAASA,EAAS,CAACA,GAAU,IAE/D,IAAIC,EAAU,CAAC,cAAe,aAAc,gBAAiB,iBAW7D,SAASC,EAAgBxT,GACvBA,GACE7B,EAAAA,GAAkBoV,GAAS,SAAUhL,GAC/BvI,EAAUyT,eAAelL,KAC3BvI,EAAU,OAAS7B,EAAAA,GAA4BoK,IAAQvI,EAAUuI,GAErE,GACJ,CAhBApK,EAAAA,GAAkBmV,GAAQ,SAAUI,GAClC,GAAIA,GAAkC,cAApBA,EAAWtX,KAAsB,CACjD,IAAI4D,EAAY0T,EAAW1T,WAAa,CAAC,EAEzCwT,EAAgBxT,EAAU2T,QAC1BH,EAAgBxT,EAAU4T,SAC5B,CACF,GAUF,qCC1JA,IAAIC,EAAoC,WACtC,SAASA,IAAwB,CAYjC,OAXAA,EAAqBvX,UAAUwX,iBAAmB,WAEhD,OADa5X,KAAKM,OACH0Q,KACjB,EAKA2G,EAAqBvX,UAAUyX,iBAAmB,WAElD,EACOF,CACT,CAdwC","sources":["../node_modules/echarts/lib/export/api/helper.js","../node_modules/echarts/lib/export/core.js","../node_modules/echarts/lib/component/dataset/install.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/export/api.js","../node_modules/echarts-wordcloud/src/WordCloudSeries.js","../node_modules/echarts-wordcloud/src/WordCloudView.js","../node_modules/echarts-wordcloud/src/layout.js","../node_modules/echarts-wordcloud/src/wordCloud.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n/**\r\n * This module exposes helper functions for developing extensions.\r\n */\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport createSeriesData from '../../chart/helper/createSeriesData.js';\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport { AxisModelCommonMixin } from '../../coord/axisModelCommonMixin.js';\nimport Model from '../../model/Model.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { enableDataStack, isDimensionStacked, getStackedDimension } from '../../data/helper/dataStackHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle as innerCreateTextStyle } from '../../label/labelStyle.js';\n/**\r\n * Create a multi dimension List structure from seriesModel.\r\n */\nexport function createList(seriesModel) {\n  return createSeriesData(null, seriesModel);\n}\n// export function createGraph(seriesModel) {\n//     let nodes = seriesModel.get('data');\n//     let links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\nexport { getLayoutRect };\nexport { createDimensions } from '../../data/helper/createDimensions.js';\nexport var dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\r\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n * @param {string} symbolDesc\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string} color\r\n */\nexport { createSymbol } from '../../util/symbol.js';\n/**\r\n * Create scale\r\n * @param {Array.<number>} dataExtent\r\n * @param {Object|module:echarts/Model} option If `optoin.type`\r\n *        is secified, it can only be `'value'` currently.\r\n */\nexport function createScale(dataExtent, option) {\n  var axisModel = option;\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    // FIXME\n    // Currently AxisModelCommonMixin has nothing to do with the\n    // the requirements of `axisHelper.createScaleByModel`. For\n    // example the methods `getCategories` and `getOrdinalMeta`\n    // are required for `'category'` axis, and ecModel is required\n    // for `'time'` axis. But occasionally echarts-gl happened\n    // to only use `'value'` axis.\n    // zrUtil.mixin(axisModel, AxisModelCommonMixin);\n  }\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\r\n * Mixin common methods to axis model,\r\n *\r\n * Include methods\r\n * `getFormattedLabels() => Array.<string>`\r\n * `getCategories() => Array.<string>`\r\n * `getMin(origin: boolean) => number`\r\n * `getMax(origin: boolean) => number`\r\n * `getNeedCrossZero() => boolean`\r\n */\nexport function mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, AxisModelCommonMixin);\n}\nexport { getECData };\nexport { enableHoverEmphasis } from '../../util/states.js';\nexport function createTextStyle(textStyleModel, opts) {\n  opts = opts || {};\n  return innerCreateTextStyle(textStyleModel, null, null, opts.state !== 'normal');\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// Core API from echarts/src/echarts\nexport * from '../core/echarts.js';\nexport * from './api.js';\nimport { use } from '../extension.js';\n// Import label layout by default.\n// TODO will be treeshaked.\nimport { installLabelLayout } from '../label/installLabelLayout.js';\nuse(installLabelLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n/**\r\n * This module is imported by echarts directly.\r\n *\r\n * Notice:\r\n * Always keep this file exists for backward compatibility.\r\n * Because before 4.1.0, dataset is an optional component,\r\n * some users may import this module manually.\r\n */\nimport ComponentModel from '../../model/Component.js';\nimport ComponentView from '../../view/Component.js';\nimport { SERIES_LAYOUT_BY_COLUMN } from '../../util/types.js';\nimport { disableTransformOptionMerge, SourceManager } from '../../data/helper/sourceManager.js';\nvar DatasetModel = /** @class */function (_super) {\n  __extends(DatasetModel, _super);\n  function DatasetModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'dataset';\n    return _this;\n  }\n  DatasetModel.prototype.init = function (option, parentModel, ecModel) {\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n    this._sourceManager = new SourceManager(this);\n    disableTransformOptionMerge(this);\n  };\n  DatasetModel.prototype.mergeOption = function (newOption, ecModel) {\n    _super.prototype.mergeOption.call(this, newOption, ecModel);\n    disableTransformOptionMerge(this);\n  };\n  DatasetModel.prototype.optionUpdated = function () {\n    this._sourceManager.dirty();\n  };\n  DatasetModel.prototype.getSourceManager = function () {\n    return this._sourceManager;\n  };\n  DatasetModel.type = 'dataset';\n  DatasetModel.defaultOption = {\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN\n  };\n  return DatasetModel;\n}(ComponentModel);\nexport { DatasetModel };\nvar DatasetView = /** @class */function (_super) {\n  __extends(DatasetView, _super);\n  function DatasetView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'dataset';\n    return _this;\n  }\n  DatasetView.type = 'dataset';\n  return DatasetView;\n}(ComponentView);\nexport function install(registers) {\n  registers.registerComponentModel(DatasetModel);\n  registers.registerComponentView(DatasetView);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport * from './export/core.js';\nimport { use } from './extension.js';\nimport { init } from './core/echarts.js';\nimport { install as CanvasRenderer } from './renderer/installCanvasRenderer.js';\nimport { install as DatasetComponent } from './component/dataset/install.js';\n// Default to have canvas renderer and dataset for compitatble reason.\nuse([CanvasRenderer, DatasetComponent]);\n// TODO: Compatitable with the following code\n// import echarts from 'echarts/lib/echarts.js'\nexport default {\n  init: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable-next-line */\n      console.error(\"\\\"import echarts from 'echarts/lib/echarts.js'\\\" is not supported anymore. Use \\\"import * as echarts from 'echarts/lib/echarts.js'\\\" instead;\");\n    }\n    // @ts-ignore\n    return init.apply(null, arguments);\n  }\n};\n// Import label layout by default.\n// TODO remove\nimport { installLabelLayout } from './label/installLabelLayout.js';\nuse(installLabelLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component.js';\nimport ComponentView from '../view/Component.js';\nimport SeriesModel from '../model/Series.js';\nimport ChartView from '../view/Chart.js';\nimport SeriesData from '../data/SeriesData.js';\nimport * as zrender_1 from 'zrender/lib/zrender.js';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix.js';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector.js';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util.js';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color.js';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle.js';\nimport * as helper_1 from './api/helper.js';\nexport { helper_1 as helper };\nexport { use } from '../extension.js';\nexport { setPlatformAPI } from 'zrender/lib/core/platform.js';\n// --------------------- Helper Methods ---------------------\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson.js';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson.js';\nimport * as number_1 from './api/number.js';\nexport { number_1 as number };\nimport * as time_1 from './api/time.js';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic.js';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format.js';\nexport { format_1 as format };\nimport * as util_1 from './api/util.js';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env.js';\n// --------------------- Export for Extension Usage ---------------------\n// export {SeriesData};\nexport { SeriesData as List }; // TODO: Compatitable with exists echarts-gl code\nexport { default as Model } from '../model/Model.js';\nexport { default as Axis } from '../coord/Axis.js';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView };\n// Only for GL\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic.js';\n// --------------------- Deprecated Extension Methods ---------------------\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { registers.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}","import * as echarts from 'echarts/lib/echarts';\n\necharts.extendSeriesModel({\n  type: 'series.wordCloud',\n\n  visualStyleAccessPath: 'textStyle',\n  visualStyleMapper: function (model) {\n    return {\n      fill: model.get('color')\n    };\n  },\n  visualDrawType: 'fill',\n\n  optionUpdated: function () {\n    var option = this.option;\n    option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n  },\n\n  getInitialData: function (option, ecModel) {\n    var dimensions = echarts.helper.createDimensions(option.data, {\n      coordDimensions: ['value']\n    });\n    var list = new echarts.List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n\n  // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n  defaultOption: {\n    maskImage: null,\n\n    // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n    shape: 'circle',\n    keepAspect: false,\n\n    left: 'center',\n\n    top: 'center',\n\n    width: '70%',\n\n    height: '80%',\n\n    sizeRange: [12, 60],\n\n    rotationRange: [-90, 90],\n\n    rotationStep: 45,\n\n    gridSize: 8,\n\n    drawOutOfBound: false,\n    shrinkToFit: false,\n\n    textStyle: {\n      fontWeight: 'normal'\n    }\n  }\n});\n","import * as echarts from 'echarts/lib/echarts';\n\necharts.extendChartView({\n  type: 'wordCloud',\n\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    var data = seriesModel.getData();\n\n    var gridSize = seriesModel.get('gridSize');\n\n    seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n      var itemModel = data.getItemModel(dataIdx);\n      var textStyleModel = itemModel.getModel('textStyle');\n\n      var textEl = new echarts.graphic.Text({\n        style: echarts.helper.createTextStyle(textStyleModel),\n        scaleX: 1 / drawn.info.mu,\n        scaleY: 1 / drawn.info.mu,\n        x: (drawn.gx + drawn.info.gw / 2) * gridSize,\n        y: (drawn.gy + drawn.info.gh / 2) * gridSize,\n        rotation: drawn.rot\n      });\n      textEl.setStyle({\n        x: drawn.info.fillTextOffsetX,\n        y: drawn.info.fillTextOffsetY + size * 0.5,\n        text: text,\n        verticalAlign: 'middle',\n        fill: data.getItemVisual(dataIdx, 'style').fill,\n        fontSize: size\n      });\n\n      group.add(textEl);\n\n      data.setItemGraphicEl(dataIdx, textEl);\n\n      textEl.ensureState('emphasis').style = echarts.helper.createTextStyle(\n        itemModel.getModel(['emphasis', 'textStyle']),\n        {\n          state: 'emphasis'\n        }\n      );\n      textEl.ensureState('blur').style = echarts.helper.createTextStyle(\n        itemModel.getModel(['blur', 'textStyle']),\n        {\n          state: 'blur'\n        }\n      );\n\n      echarts.helper.enableHoverEmphasis(\n        textEl,\n        itemModel.get(['emphasis', 'focus']),\n        itemModel.get(['emphasis', 'blurScope'])\n      );\n\n      textEl.stateTransition = {\n        duration: seriesModel.get('animation')\n          ? seriesModel.get(['stateAnimation', 'duration'])\n          : 0,\n        easing: seriesModel.get(['stateAnimation', 'easing'])\n      };\n      // TODO\n      textEl.__highDownDispatcher = true;\n    };\n\n    this._model = seriesModel;\n  },\n\n  remove: function () {\n    this.group.removeAll();\n\n    this._model.layoutInstance.dispose();\n  },\n\n  dispose: function () {\n    this._model.layoutInstance.dispose();\n  }\n});\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2019 Tim Guan-tin Chien and contributors.\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return (\n      window.msSetImmediate ||\n      window.webkitSetImmediate ||\n      window.mozSetImmediate ||\n      window.oSetImmediate ||\n      (function setupSetZeroTimeout() {\n        if (!window.postMessage || !window.addEventListener) {\n          return null;\n        }\n\n        var callbacks = [undefined];\n        var message = 'zero-timeout-message';\n\n        // Like setTimeout, but only takes a function argument.  There's\n        // no time argument (always zero) and no arguments (you have to\n        // use a closure).\n        var setZeroTimeout = function setZeroTimeout(callback) {\n          var id = callbacks.length;\n          callbacks.push(callback);\n          window.postMessage(message + id.toString(36), '*');\n\n          return id;\n        };\n\n        window.addEventListener(\n          'message',\n          function setZeroTimeoutMessage(evt) {\n            // Skipping checking event source, retarded IE confused this window\n            // object with another in the presence of iframe\n            if (\n              typeof evt.data !== 'string' ||\n              evt.data.substr(0, message.length) !== message /* ||\n            evt.source !== window */\n            ) {\n              return;\n            }\n\n            evt.stopImmediatePropagation();\n\n            var id = parseInt(evt.data.substr(message.length), 36);\n            if (!callbacks[id]) {\n              return;\n            }\n\n            callbacks[id]();\n            callbacks[id] = undefined;\n          },\n          true\n        );\n\n        /* specify clearImmediate() here since we need the scope */\n        window.clearImmediate = function clearZeroTimeout(id) {\n          if (!callbacks[id]) {\n            return;\n          }\n\n          callbacks[id] = undefined;\n        };\n\n        return setZeroTimeout;\n      })() ||\n      // fallback\n      function setImmediateFallback(fn) {\n        window.setTimeout(fn, 0);\n      }\n    );\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return (\n      window.msClearImmediate ||\n      window.webkitClearImmediate ||\n      window.mozClearImmediate ||\n      window.oClearImmediate ||\n      // \"clearZeroTimeout\" is implement on the previous block ||\n      // fallback\n      function clearImmediateFallback(timer) {\n        window.clearTimeout(timer);\n      }\n    );\n  })();\n}\n\n// Check if WordCloud can run on this browser\nvar isSupported = (function isSupported() {\n  var canvas = document.createElement('canvas');\n  if (!canvas || !canvas.getContext) {\n    return false;\n  }\n\n  var ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return false;\n  }\n  if (!ctx.getImageData) {\n    return false;\n  }\n  if (!ctx.fillText) {\n    return false;\n  }\n\n  if (!Array.prototype.some) {\n    return false;\n  }\n  if (!Array.prototype.push) {\n    return false;\n  }\n\n  return true;\n})();\n\n// Find out if the browser impose minium font size by\n// drawing small texts on a canvas and measure it's width.\nvar minFontSize = (function getMinFontSize() {\n  if (!isSupported) {\n    return;\n  }\n\n  var ctx = document.createElement('canvas').getContext('2d');\n\n  // start from 20\n  var size = 20;\n\n  // two sizes to measure\n  var hanWidth, mWidth;\n\n  while (size) {\n    ctx.font = size.toString(10) + 'px sans-serif';\n    if (\n      ctx.measureText('\\uFF37').width === hanWidth &&\n      ctx.measureText('m').width === mWidth\n    ) {\n      return size + 1;\n    }\n\n    hanWidth = ctx.measureText('\\uFF37').width;\n    mWidth = ctx.measureText('m').width;\n\n    size--;\n  }\n\n  return 0;\n})();\n\nvar getItemExtraData = function (item) {\n  if (Array.isArray(item)) {\n    var itemCopy = item.slice();\n    // remove data we already have (word and weight)\n    itemCopy.splice(0, 2);\n    return itemCopy;\n  } else {\n    return [];\n  }\n};\n\n// Based on http://jsfromhell.com/array/shuffle\nvar shuffleArray = function shuffleArray(arr) {\n  for (var j, x, i = arr.length; i; ) {\n    j = Math.floor(Math.random() * i);\n    x = arr[--i];\n    arr[i] = arr[j];\n    arr[j] = x;\n  }\n  return arr;\n};\n\nvar timer = {};\nvar WordCloud = function WordCloud(elements, options) {\n  if (!isSupported) {\n    return;\n  }\n\n  var timerId = Math.floor(Math.random() * Date.now());\n\n  if (!Array.isArray(elements)) {\n    elements = [elements];\n  }\n\n  elements.forEach(function (el, i) {\n    if (typeof el === 'string') {\n      elements[i] = document.getElementById(el);\n      if (!elements[i]) {\n        throw new Error('The element id specified is not found.');\n      }\n    } else if (!el.tagName && !el.appendChild) {\n      throw new Error(\n        'You must pass valid HTML elements, or ID of the element.'\n      );\n    }\n  });\n\n  /* Default values to be overwritten by options object */\n  var settings = {\n    list: [],\n    fontFamily:\n      '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n      '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n    fontWeight: 'normal',\n    color: 'random-dark',\n    minSize: 0, // 0 to disable\n    weightFactor: 1,\n    clearCanvas: true,\n    backgroundColor: '#fff', // opaque white = rgba(255, 255, 255, 1)\n\n    gridSize: 8,\n    drawOutOfBound: false,\n    shrinkToFit: false,\n    origin: null,\n\n    drawMask: false,\n    maskColor: 'rgba(255,0,0,0.3)',\n    maskGapWidth: 0.3,\n\n    layoutAnimation: true,\n\n    wait: 0,\n    abortThreshold: 0, // disabled\n    abort: function noop() {},\n\n    minRotation: -Math.PI / 2,\n    maxRotation: Math.PI / 2,\n    rotationStep: 0.1,\n\n    shuffle: true,\n    rotateRatio: 0.1,\n\n    shape: 'circle',\n    ellipticity: 0.65,\n\n    classes: null,\n\n    hover: null,\n    click: null\n  };\n\n  if (options) {\n    for (var key in options) {\n      if (key in settings) {\n        settings[key] = options[key];\n      }\n    }\n  }\n\n  /* Convert weightFactor into a function */\n  if (typeof settings.weightFactor !== 'function') {\n    var factor = settings.weightFactor;\n    settings.weightFactor = function weightFactor(pt) {\n      return pt * factor; // in px\n    };\n  }\n\n  /* Convert shape into a function */\n  if (typeof settings.shape !== 'function') {\n    switch (settings.shape) {\n      case 'circle':\n      /* falls through */\n      default:\n        // 'circle' is the default and a shortcut in the code loop.\n        settings.shape = 'circle';\n        break;\n\n      case 'cardioid':\n        settings.shape = function shapeCardioid(theta) {\n          return 1 - Math.sin(theta);\n        };\n        break;\n\n      /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n      case 'diamond':\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n        // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n        // +0+..+2*PI\n        settings.shape = function shapeSquare(theta) {\n          var thetaPrime = theta % ((2 * Math.PI) / 4);\n          return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n        };\n        break;\n\n      case 'square':\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+min(1%2Fabs(cos(t\n        // )),1%2Fabs(sin(t)))),+t+%3D+0+..+2*PI\n        settings.shape = function shapeSquare(theta) {\n          return Math.min(\n            1 / Math.abs(Math.cos(theta)),\n            1 / Math.abs(Math.sin(theta))\n          );\n        };\n        break;\n\n      case 'triangle-forward':\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n        // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n        // %29%29%2C+t+%3D+0+..+2*PI\n        settings.shape = function shapeTriangle(theta) {\n          var thetaPrime = theta % ((2 * Math.PI) / 3);\n          return (\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\n          );\n        };\n        break;\n\n      case 'triangle':\n      case 'triangle-upright':\n        settings.shape = function shapeTriangle(theta) {\n          var thetaPrime = (theta + (Math.PI * 3) / 2) % ((2 * Math.PI) / 3);\n          return (\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\n          );\n        };\n        break;\n\n      case 'pentagon':\n        settings.shape = function shapePentagon(theta) {\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 5);\n          return 1 / (Math.cos(thetaPrime) + 0.726543 * Math.sin(thetaPrime));\n        };\n        break;\n\n      case 'star':\n        settings.shape = function shapeStar(theta) {\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 10);\n          if (\n            ((theta + 0.955) % ((2 * Math.PI) / 5)) - (2 * Math.PI) / 10 >=\n            0\n          ) {\n            return (\n              1 /\n              (Math.cos((2 * Math.PI) / 10 - thetaPrime) +\n                3.07768 * Math.sin((2 * Math.PI) / 10 - thetaPrime))\n            );\n          } else {\n            return 1 / (Math.cos(thetaPrime) + 3.07768 * Math.sin(thetaPrime));\n          }\n        };\n        break;\n    }\n  }\n\n  /* Make sure gridSize is a whole number and is not smaller than 4px */\n  settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n  /* shorthand */\n  var g = settings.gridSize;\n  var maskRectWidth = g - settings.maskGapWidth;\n\n  /* normalize rotation settings */\n  var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n  var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n  var rotationStep = settings.rotationStep;\n\n  /* information/object available to all functions, set when start() */\n  var grid, // 2d array containing filling information\n    ngx,\n    ngy, // width and height of the grid\n    center, // position of the center of the cloud\n    maxRadius;\n\n  /* timestamp for measuring each putWord() action */\n  var escapeTime;\n\n  /* function for getting the color of the text */\n  var getTextColor;\n  function randomHslColor(min, max) {\n    return (\n      'hsl(' +\n      (Math.random() * 360).toFixed() +\n      ',' +\n      (Math.random() * 30 + 70).toFixed() +\n      '%,' +\n      (Math.random() * (max - min) + min).toFixed() +\n      '%)'\n    );\n  }\n  switch (settings.color) {\n    case 'random-dark':\n      getTextColor = function getRandomDarkColor() {\n        return randomHslColor(10, 50);\n      };\n      break;\n\n    case 'random-light':\n      getTextColor = function getRandomLightColor() {\n        return randomHslColor(50, 90);\n      };\n      break;\n\n    default:\n      if (typeof settings.color === 'function') {\n        getTextColor = settings.color;\n      }\n      break;\n  }\n\n  /* function for getting the font-weight of the text */\n  var getTextFontWeight;\n  if (typeof settings.fontWeight === 'function') {\n    getTextFontWeight = settings.fontWeight;\n  }\n\n  /* function for getting the classes of the text */\n  var getTextClasses = null;\n  if (typeof settings.classes === 'function') {\n    getTextClasses = settings.classes;\n  }\n\n  /* Interactive */\n  var interactive = false;\n  var infoGrid = [];\n  var hovered;\n\n  var getInfoGridFromMouseTouchEvent = function getInfoGridFromMouseTouchEvent(\n    evt\n  ) {\n    var canvas = evt.currentTarget;\n    var rect = canvas.getBoundingClientRect();\n    var clientX;\n    var clientY;\n    /** Detect if touches are available */\n    if (evt.touches) {\n      clientX = evt.touches[0].clientX;\n      clientY = evt.touches[0].clientY;\n    } else {\n      clientX = evt.clientX;\n      clientY = evt.clientY;\n    }\n    var eventX = clientX - rect.left;\n    var eventY = clientY - rect.top;\n\n    var x = Math.floor((eventX * (canvas.width / rect.width || 1)) / g);\n    var y = Math.floor((eventY * (canvas.height / rect.height || 1)) / g);\n\n    if (!infoGrid[x]) {\n      return null\n    }\n\n    return infoGrid[x][y];\n  };\n\n  var wordcloudhover = function wordcloudhover(evt) {\n    var info = getInfoGridFromMouseTouchEvent(evt);\n\n    if (hovered === info) {\n      return;\n    }\n\n    hovered = info;\n    if (!info) {\n      settings.hover(undefined, undefined, evt);\n\n      return;\n    }\n\n    settings.hover(info.item, info.dimension, evt);\n  };\n\n  var wordcloudclick = function wordcloudclick(evt) {\n    var info = getInfoGridFromMouseTouchEvent(evt);\n    if (!info) {\n      return;\n    }\n\n    settings.click(info.item, info.dimension, evt);\n    evt.preventDefault();\n  };\n\n  /* Get points on the grid for a given radius away from the center */\n  var pointsAtRadius = [];\n  var getPointsAtRadius = function getPointsAtRadius(radius) {\n    if (pointsAtRadius[radius]) {\n      return pointsAtRadius[radius];\n    }\n\n    // Look for these number of points on each radius\n    var T = radius * 8;\n\n    // Getting all the points at this radius\n    var t = T;\n    var points = [];\n\n    if (radius === 0) {\n      points.push([center[0], center[1], 0]);\n    }\n\n    while (t--) {\n      // distort the radius to put the cloud in shape\n      var rx = 1;\n      if (settings.shape !== 'circle') {\n        rx = settings.shape((t / T) * 2 * Math.PI); // 0 to 1\n      }\n\n      // Push [x, y, t]; t is used solely for getTextColor()\n      points.push([\n        center[0] + radius * rx * Math.cos((-t / T) * 2 * Math.PI),\n        center[1] +\n          radius * rx * Math.sin((-t / T) * 2 * Math.PI) * settings.ellipticity,\n        (t / T) * 2 * Math.PI\n      ]);\n    }\n\n    pointsAtRadius[radius] = points;\n    return points;\n  };\n\n  /* Return true if we had spent too much time */\n  var exceedTime = function exceedTime() {\n    return (\n      settings.abortThreshold > 0 &&\n      new Date().getTime() - escapeTime > settings.abortThreshold\n    );\n  };\n\n  /* Get the deg of rotation according to settings, and luck. */\n  var getRotateDeg = function getRotateDeg() {\n    if (settings.rotateRatio === 0) {\n      return 0;\n    }\n\n    if (Math.random() > settings.rotateRatio) {\n      return 0;\n    }\n\n    if (rotationRange === 0) {\n      return minRotation;\n    }\n\n    return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n  };\n\n  var getTextInfo = function getTextInfo(\n    word,\n    weight,\n    rotateDeg,\n    extraDataArray\n  ) {\n    // calculate the acutal font size\n    // fontSize === 0 means weightFactor function wants the text skipped,\n    // and size < minSize means we cannot draw the text.\n    var debug = false;\n    var fontSize = settings.weightFactor(weight);\n    if (fontSize <= settings.minSize) {\n      return false;\n    }\n\n    // Scale factor here is to make sure fillText is not limited by\n    // the minium font size set by browser.\n    // It will always be 1 or 2n.\n    var mu = 1;\n    if (fontSize < minFontSize) {\n      mu = (function calculateScaleFactor() {\n        var mu = 2;\n        while (mu * fontSize < minFontSize) {\n          mu += 2;\n        }\n        return mu;\n      })();\n    }\n\n    // Get fontWeight that will be used to set fctx.font\n    var fontWeight;\n    if (getTextFontWeight) {\n      fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);\n    } else {\n      fontWeight = settings.fontWeight;\n    }\n\n    var fcanvas = document.createElement('canvas');\n    var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n    fctx.font =\n      fontWeight +\n      ' ' +\n      (fontSize * mu).toString(10) +\n      'px ' +\n      settings.fontFamily;\n\n    // Estimate the dimension of the text with measureText().\n    var fw = fctx.measureText(word).width / mu;\n    var fh =\n      Math.max(\n        fontSize * mu,\n        fctx.measureText('m').width,\n        fctx.measureText('\\uFF37').width\n      ) / mu;\n\n    // Create a boundary box that is larger than our estimates,\n    // so text don't get cut of (it sill might)\n    var boxWidth = fw + fh * 2;\n    var boxHeight = fh * 3;\n    var fgw = Math.ceil(boxWidth / g);\n    var fgh = Math.ceil(boxHeight / g);\n    boxWidth = fgw * g;\n    boxHeight = fgh * g;\n\n    // Calculate the proper offsets to make the text centered at\n    // the preferred position.\n\n    // This is simply half of the width.\n    var fillTextOffsetX = -fw / 2;\n    // Instead of moving the box to the exact middle of the preferred\n    // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n    // vertical centered.\n    var fillTextOffsetY = -fh * 0.4;\n\n    // Calculate the actual dimension of the canvas, considering the rotation.\n    var cgh = Math.ceil(\n      (boxWidth * Math.abs(Math.sin(rotateDeg)) +\n        boxHeight * Math.abs(Math.cos(rotateDeg))) /\n        g\n    );\n    var cgw = Math.ceil(\n      (boxWidth * Math.abs(Math.cos(rotateDeg)) +\n        boxHeight * Math.abs(Math.sin(rotateDeg))) /\n        g\n    );\n    var width = cgw * g;\n    var height = cgh * g;\n\n    fcanvas.setAttribute('width', width);\n    fcanvas.setAttribute('height', height);\n\n    if (debug) {\n      // Attach fcanvas to the DOM\n      document.body.appendChild(fcanvas);\n      // Save it's state so that we could restore and draw the grid correctly.\n      fctx.save();\n    }\n\n    // Scale the canvas with |mu|.\n    fctx.scale(1 / mu, 1 / mu);\n    fctx.translate((width * mu) / 2, (height * mu) / 2);\n    fctx.rotate(-rotateDeg);\n\n    // Once the width/height is set, ctx info will be reset.\n    // Set it again here.\n    fctx.font =\n      fontWeight +\n      ' ' +\n      (fontSize * mu).toString(10) +\n      'px ' +\n      settings.fontFamily;\n\n    // Fill the text into the fcanvas.\n    // XXX: We cannot because textBaseline = 'top' here because\n    // Firefox and Chrome uses different default line-height for canvas.\n    // Please read https://bugzil.la/737852#c6.\n    // Here, we use textBaseline = 'middle' and draw the text at exactly\n    // 0.5 * fontSize lower.\n    fctx.fillStyle = '#000';\n    fctx.textBaseline = 'middle';\n    fctx.fillText(\n      word,\n      fillTextOffsetX * mu,\n      (fillTextOffsetY + fontSize * 0.5) * mu\n    );\n\n    // Get the pixels of the text\n    var imageData = fctx.getImageData(0, 0, width, height).data;\n\n    if (exceedTime()) {\n      return false;\n    }\n\n    if (debug) {\n      // Draw the box of the original estimation\n      fctx.strokeRect(fillTextOffsetX * mu, fillTextOffsetY, fw * mu, fh * mu);\n      fctx.restore();\n    }\n\n    // Read the pixels and save the information to the occupied array\n    var occupied = [];\n    var gx = cgw;\n    var gy, x, y;\n    var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n    while (gx--) {\n      gy = cgh;\n      while (gy--) {\n        y = g;\n        /* eslint no-labels: ['error', { 'allowLoop': true }] */\n        singleGridLoop: while (y--) {\n          x = g;\n          while (x--) {\n            if (imageData[((gy * g + y) * width + (gx * g + x)) * 4 + 3]) {\n              occupied.push([gx, gy]);\n\n              if (gx < bounds[3]) {\n                bounds[3] = gx;\n              }\n              if (gx > bounds[1]) {\n                bounds[1] = gx;\n              }\n              if (gy < bounds[0]) {\n                bounds[0] = gy;\n              }\n              if (gy > bounds[2]) {\n                bounds[2] = gy;\n              }\n\n              if (debug) {\n                fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n              }\n              break singleGridLoop;\n            }\n          }\n        }\n        if (debug) {\n          fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n          fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n        }\n      }\n    }\n\n    if (debug) {\n      fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n      fctx.fillRect(\n        bounds[3] * g,\n        bounds[0] * g,\n        (bounds[1] - bounds[3] + 1) * g,\n        (bounds[2] - bounds[0] + 1) * g\n      );\n    }\n\n    // Return information needed to create the text on the real canvas\n    return {\n      mu: mu,\n      occupied: occupied,\n      bounds: bounds,\n      gw: cgw,\n      gh: cgh,\n      fillTextOffsetX: fillTextOffsetX,\n      fillTextOffsetY: fillTextOffsetY,\n      fillTextWidth: fw,\n      fillTextHeight: fh,\n      fontSize: fontSize\n    };\n  };\n\n  /* Determine if there is room available in the given dimension */\n  var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n    // Go through the occupied points,\n    // return false if the space is not available.\n    var i = occupied.length;\n    while (i--) {\n      var px = gx + occupied[i][0];\n      var py = gy + occupied[i][1];\n\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n        if (!settings.drawOutOfBound) {\n          return false;\n        }\n        continue;\n      }\n\n      if (!grid[px][py]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /* Actually draw the text on the grid */\n  var drawText = function drawText(\n    gx,\n    gy,\n    info,\n    word,\n    weight,\n    distance,\n    theta,\n    rotateDeg,\n    attributes,\n    extraDataArray\n  ) {\n    var fontSize = info.fontSize;\n    var color;\n    if (getTextColor) {\n      color = getTextColor(\n        word,\n        weight,\n        fontSize,\n        distance,\n        theta,\n        extraDataArray\n      );\n    } else {\n      color = settings.color;\n    }\n\n    // get fontWeight that will be used to set ctx.font and font style rule\n    var fontWeight;\n    if (getTextFontWeight) {\n      fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);\n    } else {\n      fontWeight = settings.fontWeight;\n    }\n\n    var classes;\n    if (getTextClasses) {\n      classes = getTextClasses(word, weight, fontSize, extraDataArray);\n    } else {\n      classes = settings.classes;\n    }\n\n    elements.forEach(function (el) {\n      if (el.getContext) {\n        var ctx = el.getContext('2d');\n        var mu = info.mu;\n\n        // Save the current state before messing it\n        ctx.save();\n        ctx.scale(1 / mu, 1 / mu);\n\n        ctx.font =\n          fontWeight +\n          ' ' +\n          (fontSize * mu).toString(10) +\n          'px ' +\n          settings.fontFamily;\n        ctx.fillStyle = color;\n\n        // Translate the canvas position to the origin coordinate of where\n        // the text should be put.\n        ctx.translate((gx + info.gw / 2) * g * mu, (gy + info.gh / 2) * g * mu);\n\n        if (rotateDeg !== 0) {\n          ctx.rotate(-rotateDeg);\n        }\n\n        // Finally, fill the text.\n\n        // XXX: We cannot because textBaseline = 'top' here because\n        // Firefox and Chrome uses different default line-height for canvas.\n        // Please read https://bugzil.la/737852#c6.\n        // Here, we use textBaseline = 'middle' and draw the text at exactly\n        // 0.5 * fontSize lower.\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\n          word,\n          info.fillTextOffsetX * mu,\n          (info.fillTextOffsetY + fontSize * 0.5) * mu\n        );\n\n        // The below box is always matches how <span>s are positioned\n        /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n        // Restore the state.\n        ctx.restore();\n      } else {\n        // drawText on DIV element\n        var span = document.createElement('span');\n        var transformRule = '';\n        transformRule = 'rotate(' + (-rotateDeg / Math.PI) * 180 + 'deg) ';\n        if (info.mu !== 1) {\n          transformRule +=\n            'translateX(-' +\n            info.fillTextWidth / 4 +\n            'px) ' +\n            'scale(' +\n            1 / info.mu +\n            ')';\n        }\n        var styleRules = {\n          position: 'absolute',\n          display: 'block',\n          font:\n            fontWeight + ' ' + fontSize * info.mu + 'px ' + settings.fontFamily,\n          left: (gx + info.gw / 2) * g + info.fillTextOffsetX + 'px',\n          top: (gy + info.gh / 2) * g + info.fillTextOffsetY + 'px',\n          width: info.fillTextWidth + 'px',\n          height: info.fillTextHeight + 'px',\n          lineHeight: fontSize + 'px',\n          whiteSpace: 'nowrap',\n          transform: transformRule,\n          webkitTransform: transformRule,\n          msTransform: transformRule,\n          transformOrigin: '50% 40%',\n          webkitTransformOrigin: '50% 40%',\n          msTransformOrigin: '50% 40%'\n        };\n        if (color) {\n          styleRules.color = color;\n        }\n        span.textContent = word;\n        for (var cssProp in styleRules) {\n          span.style[cssProp] = styleRules[cssProp];\n        }\n        if (attributes) {\n          for (var attribute in attributes) {\n            span.setAttribute(attribute, attributes[attribute]);\n          }\n        }\n        if (classes) {\n          span.className += classes;\n        }\n        el.appendChild(span);\n      }\n    });\n  };\n\n  /* Help function to updateGrid */\n  var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n    if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n      return;\n    }\n\n    grid[x][y] = false;\n\n    if (drawMask) {\n      var ctx = elements[0].getContext('2d');\n      ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n    }\n\n    if (interactive) {\n      infoGrid[x][y] = { item: item, dimension: dimension };\n    }\n  };\n\n  /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n  var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n    var occupied = info.occupied;\n    var drawMask = settings.drawMask;\n    var ctx;\n    if (drawMask) {\n      ctx = elements[0].getContext('2d');\n      ctx.save();\n      ctx.fillStyle = settings.maskColor;\n    }\n\n    var dimension;\n    if (interactive) {\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n    }\n\n    var i = occupied.length;\n    while (i--) {\n      var px = gx + occupied[i][0];\n      var py = gy + occupied[i][1];\n\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n        continue;\n      }\n\n      fillGridAt(px, py, drawMask, dimension, item);\n    }\n\n    if (drawMask) {\n      ctx.restore();\n    }\n  };\n\n  /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n  var putWord = function putWord(item, loopIndex) {\n    if (loopIndex > 20) {\n      return null;\n    }\n\n    var word, weight, attributes;\n    if (Array.isArray(item)) {\n      word = item[0];\n      weight = item[1];\n    } else {\n      word = item.word;\n      weight = item.weight;\n      attributes = item.attributes;\n    }\n    var rotateDeg = getRotateDeg();\n\n    var extraDataArray = getItemExtraData(item);\n\n    // get info needed to put the text onto the canvas\n    var info = getTextInfo(word, weight, rotateDeg, extraDataArray);\n\n    // not getting the info means we shouldn't be drawing this one.\n    if (!info) {\n      return false;\n    }\n\n    if (exceedTime()) {\n      return false;\n    }\n\n    // If drawOutOfBound is set to false,\n    // skip the loop if we have already know the bounding box of\n    // word is larger than the canvas.\n    if (!settings.drawOutOfBound && !settings.shrinkToFit) {\n      var bounds = info.bounds;\n      if (bounds[1] - bounds[3] + 1 > ngx || bounds[2] - bounds[0] + 1 > ngy) {\n        return false;\n      }\n    }\n\n    // Determine the position to put the text by\n    // start looking for the nearest points\n    var r = maxRadius + 1;\n\n    var tryToPutWordAtPoint = function (gxy) {\n      var gx = Math.floor(gxy[0] - info.gw / 2);\n      var gy = Math.floor(gxy[1] - info.gh / 2);\n      var gw = info.gw;\n      var gh = info.gh;\n\n      // If we cannot fit the text at this position, return false\n      // and go to the next position.\n      if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n        return false;\n      }\n\n      // Actually put the text on the canvas\n      drawText(\n        gx,\n        gy,\n        info,\n        word,\n        weight,\n        maxRadius - r,\n        gxy[2],\n        rotateDeg,\n        attributes,\n        extraDataArray\n      );\n\n      // Mark the spaces on the grid as filled\n      updateGrid(gx, gy, gw, gh, info, item);\n\n      return {\n        gx: gx,\n        gy: gy,\n        rot: rotateDeg,\n        info: info\n      };\n    };\n\n    while (r--) {\n      var points = getPointsAtRadius(maxRadius - r);\n\n      if (settings.shuffle) {\n        points = [].concat(points);\n        shuffleArray(points);\n      }\n\n      // Try to fit the words by looking at each point.\n      // array.some() will stop and return true\n      // when putWordAtPoint() returns true.\n      for (var i = 0; i < points.length; i++) {\n        var res = tryToPutWordAtPoint(points[i]);\n        if (res) {\n          return res;\n        }\n      }\n\n      // var drawn = points.some(tryToPutWordAtPoint);\n      // if (drawn) {\n      //   // leave putWord() and return true\n      //   return true;\n      // }\n    }\n\n    if (settings.shrinkToFit) {\n      if (Array.isArray(item)) {\n        item[1] = (item[1] * 3) / 4;\n      } else {\n        item.weight = (item.weight * 3) / 4;\n      }\n      return putWord(item, loopIndex + 1);\n    }\n\n    // we tried all distances but text won't fit, return null\n    return null;\n  };\n\n  /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n  var sendEvent = function sendEvent(type, cancelable, details) {\n    if (cancelable) {\n      return !elements.some(function (el) {\n        var event = new CustomEvent(type, {\n          detail: details || {}\n        });\n        return !el.dispatchEvent(event);\n      }, this);\n    } else {\n      elements.forEach(function (el) {\n        var event = new CustomEvent(type, {\n          detail: details || {}\n        });\n        el.dispatchEvent(event);\n      }, this);\n    }\n  };\n\n  /* Start drawing on a canvas */\n  var start = function start() {\n    // For dimensions, clearCanvas etc.,\n    // we only care about the first element.\n    var canvas = elements[0];\n\n    if (canvas.getContext) {\n      ngx = Math.ceil(canvas.width / g);\n      ngy = Math.ceil(canvas.height / g);\n    } else {\n      var rect = canvas.getBoundingClientRect();\n      ngx = Math.ceil(rect.width / g);\n      ngy = Math.ceil(rect.height / g);\n    }\n\n    // Sending a wordcloudstart event which cause the previous loop to stop.\n    // Do nothing if the event is canceled.\n    if (!sendEvent('wordcloudstart', true)) {\n      return;\n    }\n\n    // Determine the center of the word cloud\n    center = settings.origin\n      ? [settings.origin[0] / g, settings.origin[1] / g]\n      : [ngx / 2, ngy / 2];\n\n    // Maxium radius to look for space\n    maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n    /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n    grid = [];\n\n    var gx, gy, i;\n    if (!canvas.getContext || settings.clearCanvas) {\n      elements.forEach(function (el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          ctx.fillStyle = settings.backgroundColor;\n          ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n        } else {\n          el.textContent = '';\n          el.style.backgroundColor = settings.backgroundColor;\n          el.style.position = 'relative';\n        }\n      });\n\n      /* fill the grid with empty state */\n      gx = ngx;\n      while (gx--) {\n        grid[gx] = [];\n        gy = ngy;\n        while (gy--) {\n          grid[gx][gy] = true;\n        }\n      }\n    } else {\n      /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n      var bctx = document.createElement('canvas').getContext('2d');\n\n      bctx.fillStyle = settings.backgroundColor;\n      bctx.fillRect(0, 0, 1, 1);\n      var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n      /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n      var imageData = canvas\n        .getContext('2d')\n        .getImageData(0, 0, ngx * g, ngy * g).data;\n\n      gx = ngx;\n      var x, y;\n      while (gx--) {\n        grid[gx] = [];\n        gy = ngy;\n        while (gy--) {\n          y = g;\n          /* eslint no-labels: ['error', { 'allowLoop': true }] */\n          singleGridLoop: while (y--) {\n            x = g;\n            while (x--) {\n              i = 4;\n              while (i--) {\n                if (\n                  imageData[((gy * g + y) * ngx * g + (gx * g + x)) * 4 + i] !==\n                  bgPixel[i]\n                ) {\n                  grid[gx][gy] = false;\n                  break singleGridLoop;\n                }\n              }\n            }\n          }\n          if (grid[gx][gy] !== false) {\n            grid[gx][gy] = true;\n          }\n        }\n      }\n\n      imageData = bctx = bgPixel = undefined;\n    }\n\n    // fill the infoGrid with empty state if we need it\n    if (settings.hover || settings.click) {\n      interactive = true;\n\n      /* fill the grid with empty state */\n      gx = ngx + 1;\n      while (gx--) {\n        infoGrid[gx] = [];\n      }\n\n      if (settings.hover) {\n        canvas.addEventListener('mousemove', wordcloudhover);\n      }\n\n      if (settings.click) {\n        canvas.addEventListener('click', wordcloudclick);\n        canvas.addEventListener('touchstart', wordcloudclick);\n        canvas.addEventListener('touchend', function (e) {\n          e.preventDefault();\n        });\n        canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n      }\n\n      canvas.addEventListener('wordcloudstart', function stopInteraction() {\n        canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n        canvas.removeEventListener('mousemove', wordcloudhover);\n        canvas.removeEventListener('click', wordcloudclick);\n        hovered = undefined;\n      });\n    }\n\n    i = 0;\n    var loopingFunction, stoppingFunction;\n    var layouting = true;\n    if (!settings.layoutAnimation) {\n      loopingFunction = function (cb) {\n        cb();\n      };\n      stoppingFunction = function () {\n        layouting = false;\n      };\n    } else if (settings.wait !== 0) {\n      loopingFunction = window.setTimeout;\n      stoppingFunction = window.clearTimeout;\n    } else {\n      loopingFunction = window.setImmediate;\n      stoppingFunction = window.clearImmediate;\n    }\n\n    var addEventListener = function addEventListener(type, listener) {\n      elements.forEach(function (el) {\n        el.addEventListener(type, listener);\n      }, this);\n    };\n\n    var removeEventListener = function removeEventListener(type, listener) {\n      elements.forEach(function (el) {\n        el.removeEventListener(type, listener);\n      }, this);\n    };\n\n    var anotherWordCloudStart = function anotherWordCloudStart() {\n      removeEventListener('wordcloudstart', anotherWordCloudStart);\n      stoppingFunction(timer[timerId]);\n    };\n\n    addEventListener('wordcloudstart', anotherWordCloudStart);\n\n    // At least wait the following code before call the first iteration.\n    timer[timerId] = (settings.layoutAnimation ? loopingFunction : setTimeout)(\n      function loop() {\n        if (!layouting) {\n          return;\n        }\n        if (i >= settings.list.length) {\n          stoppingFunction(timer[timerId]);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          delete timer[timerId];\n          return;\n        }\n        escapeTime = new Date().getTime();\n        var drawn = putWord(settings.list[i], 0);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i],\n          drawn: drawn\n        });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer[timerId]);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer[timerId] = loopingFunction(loop, settings.wait);\n      },\n      settings.wait\n    );\n  };\n\n  // All set, start the drawing\n  start();\n};\n\nWordCloud.isSupported = isSupported;\nWordCloud.minFontSize = minFontSize;\n\nexport default WordCloud;\n","import * as echarts from 'echarts/lib/echarts';\n\nimport './WordCloudSeries';\nimport './WordCloudView';\n\nimport wordCloudLayoutHelper from './layout';\n\nif (!wordCloudLayoutHelper.isSupported) {\n  throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n  var ctx = maskCanvas.getContext('2d');\n  var imageData = ctx.getImageData(0, 0, maskCanvas.width, maskCanvas.height);\n  var newImageData = ctx.createImageData(imageData);\n\n  var toneSum = 0;\n  var toneCnt = 0;\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var alpha = imageData.data[i + 3];\n    if (alpha > 128) {\n      var tone =\n        imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n      toneSum += tone;\n      ++toneCnt;\n    }\n  }\n  var threshold = toneSum / toneCnt;\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var tone =\n      imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n    var alpha = imageData.data[i + 3];\n\n    if (alpha < 128 || tone > threshold) {\n      // Area not to draw\n      newImageData.data[i] = 0;\n      newImageData.data[i + 1] = 0;\n      newImageData.data[i + 2] = 0;\n      newImageData.data[i + 3] = 0;\n    } else {\n      // Area to draw\n      // The color must be same with backgroundColor\n      newImageData.data[i] = 255;\n      newImageData.data[i + 1] = 255;\n      newImageData.data[i + 2] = 255;\n      newImageData.data[i + 3] = 255;\n    }\n  }\n\n  ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n  ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n    var gridRect = echarts.helper.getLayoutRect(\n      seriesModel.getBoxLayoutParams(),\n      {\n        width: api.getWidth(),\n        height: api.getHeight()\n      }\n    );\n\n    var keepAspect = seriesModel.get('keepAspect');\n    var maskImage = seriesModel.get('maskImage');\n    var ratio = maskImage ? maskImage.width / maskImage.height : 1;\n    keepAspect && adjustRectAspect(gridRect, ratio);\n\n    var data = seriesModel.getData();\n\n    var canvas = document.createElement('canvas');\n    canvas.width = gridRect.width;\n    canvas.height = gridRect.height;\n\n    var ctx = canvas.getContext('2d');\n    if (maskImage) {\n      try {\n        ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n        updateCanvasMask(canvas);\n      } catch (e) {\n        console.error('Invalid mask image');\n        console.error(e.toString());\n      }\n    }\n\n    var sizeRange = seriesModel.get('sizeRange');\n    var rotationRange = seriesModel.get('rotationRange');\n    var valueExtent = data.getDataExtent('value');\n\n    var DEGREE_TO_RAD = Math.PI / 180;\n    var gridSize = seriesModel.get('gridSize');\n    wordCloudLayoutHelper(canvas, {\n      list: data\n        .mapArray('value', function (value, idx) {\n          var itemModel = data.getItemModel(idx);\n          return [\n            data.getName(idx),\n            itemModel.get('textStyle.fontSize', true) ||\n              echarts.number.linearMap(value, valueExtent, sizeRange),\n            idx\n          ];\n        })\n        .sort(function (a, b) {\n          // Sort from large to small in case there is no more room for more words\n          return b[1] - a[1];\n        }),\n      fontFamily:\n        seriesModel.get('textStyle.fontFamily') ||\n        seriesModel.get('emphasis.textStyle.fontFamily') ||\n        ecModel.get('textStyle.fontFamily'),\n      fontWeight:\n        seriesModel.get('textStyle.fontWeight') ||\n        seriesModel.get('emphasis.textStyle.fontWeight') ||\n        ecModel.get('textStyle.fontWeight'),\n\n      gridSize: gridSize,\n\n      ellipticity: gridRect.height / gridRect.width,\n\n      minRotation: rotationRange[0] * DEGREE_TO_RAD,\n      maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n      clearCanvas: !maskImage,\n\n      rotateRatio: 1,\n\n      rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n      drawOutOfBound: seriesModel.get('drawOutOfBound'),\n      shrinkToFit: seriesModel.get('shrinkToFit'),\n\n      layoutAnimation: seriesModel.get('layoutAnimation'),\n\n      shuffle: false,\n\n      shape: seriesModel.get('shape')\n    });\n\n    function onWordCloudDrawn(e) {\n      var item = e.detail.item;\n      if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n        e.detail.drawn.gx += gridRect.x / gridSize;\n        e.detail.drawn.gy += gridRect.y / gridSize;\n        seriesModel.layoutInstance.ondraw(\n          item[0],\n          item[1],\n          item[2],\n          e.detail.drawn\n        );\n      }\n    }\n\n    canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n    if (seriesModel.layoutInstance) {\n      // Dispose previous\n      seriesModel.layoutInstance.dispose();\n    }\n\n    seriesModel.layoutInstance = {\n      ondraw: null,\n\n      dispose: function () {\n        canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n        // Abort\n        canvas.addEventListener('wordclouddrawn', function (e) {\n          // Prevent default to cancle the event and stop the loop\n          e.preventDefault();\n        });\n      }\n    };\n  });\n});\n\necharts.registerPreprocessor(function (option) {\n  var series = (option || {}).series;\n  !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n  var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n  echarts.util.each(series, function (seriesItem) {\n    if (seriesItem && seriesItem.type === 'wordCloud') {\n      var textStyle = seriesItem.textStyle || {};\n\n      compatTextStyle(textStyle.normal);\n      compatTextStyle(textStyle.emphasis);\n    }\n  });\n\n  function compatTextStyle(textStyle) {\n    textStyle &&\n      echarts.util.each(compats, function (key) {\n        if (textStyle.hasOwnProperty(key)) {\n          textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n        }\n      });\n  }\n});\n\nfunction adjustRectAspect(gridRect, aspect) {\n  // var outerWidth = gridRect.width + gridRect.x * 2;\n  // var outerHeight = gridRect.height + gridRect.y * 2;\n  var width = gridRect.width;\n  var height = gridRect.height;\n  if (width > height * aspect) {\n    gridRect.x += (width - height * aspect) / 2;\n    gridRect.width = height * aspect;\n  } else {\n    gridRect.y += (height - width / aspect) / 2;\n    gridRect.height = width / aspect;\n  }\n}\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar AxisModelCommonMixin = /** @class */function () {\n  function AxisModelCommonMixin() {}\n  AxisModelCommonMixin.prototype.getNeedCrossZero = function () {\n    var option = this.option;\n    return !option.scale;\n  };\n  /**\r\n   * Should be implemented by each axis model if necessary.\r\n   * @return coordinate system model\r\n   */\n  AxisModelCommonMixin.prototype.getCoordSysModel = function () {\n    return;\n  };\n  return AxisModelCommonMixin;\n}();\nexport { AxisModelCommonMixin };"],"names":["isDimensionStacked","enableDataStack","getStackedDimension","createTextStyle","textStyleModel","opts","innerCreateTextStyle","state","use","installLabelLayout","DatasetModel","_super","_this","apply","this","arguments","type","__extends","prototype","init","option","parentModel","ecModel","call","_sourceManager","SourceManager","disableTransformOptionMerge","mergeOption","newOption","optionUpdated","dirty","getSourceManager","defaultOption","seriesLayoutBy","SERIES_LAYOUT_BY_COLUMN","ComponentModel","DatasetView","ComponentView","CanvasRenderer","registers","registerComponentModel","registerComponentView","proto","Model","SeriesModel","extend","registerClass","echarts","visualStyleAccessPath","visualStyleMapper","model","fill","get","visualDrawType","gridSize","Math","max","floor","getInitialData","dimensions","data","coordDimensions","list","initData","maskImage","shape","keepAspect","left","top","width","height","sizeRange","rotationRange","rotationStep","drawOutOfBound","shrinkToFit","textStyle","fontWeight","View","ChartView","render","seriesModel","api","group","removeAll","getData","layoutInstance","ondraw","text","size","dataIdx","drawn","itemModel","getItemModel","getModel","textEl","style","scaleX","info","mu","scaleY","x","gx","gw","y","gy","gh","rotation","rot","setStyle","fillTextOffsetX","fillTextOffsetY","verticalAlign","getItemVisual","fontSize","add","setItemGraphicEl","ensureState","stateTransition","duration","easing","__highDownDispatcher","_model","remove","dispose","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","addEventListener","callbacks","undefined","message","evt","substr","stopImmediatePropagation","id","parseInt","clearImmediate","callback","length","push","toString","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","isSupported","canvas","document","createElement","getContext","ctx","getImageData","fillText","Array","some","minFontSize","hanWidth","mWidth","font","measureText","shuffleArray","arr","j","i","random","WordCloud","elements","options","timerId","Date","now","isArray","forEach","el","getElementById","Error","tagName","appendChild","settings","fontFamily","color","minSize","weightFactor","clearCanvas","backgroundColor","origin","drawMask","maskColor","maskGapWidth","layoutAnimation","wait","abortThreshold","abort","minRotation","PI","maxRotation","shuffle","rotateRatio","ellipticity","classes","hover","click","key","factor","pt","theta","sin","thetaPrime","cos","min","abs","sqrt","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","getTextFontWeight","g","maskRectWidth","randomHslColor","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","eventY","wordcloudhover","item","dimension","wordcloudclick","preventDefault","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","getTime","fillGridAt","fillRect","putWord","loopIndex","word","weight","attributes","rotateDeg","round","extraDataArray","itemCopy","slice","splice","getItemExtraData","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","cgh","cgw","setAttribute","scale","translate","rotate","fillStyle","textBaseline","imageData","occupied","bounds","singleGridLoop","fillTextWidth","fillTextHeight","getTextInfo","r","tryToPutWordAtPoint","gxy","px","py","canFitText","distance","save","restore","span","transformRule","styleRules","position","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","attribute","className","drawText","w","h","updateGrid","concat","res","sendEvent","cancelable","details","event","CustomEvent","detail","dispatchEvent","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","e","webkitTapHighlightColor","stopInteraction","removeEventListener","layouting","cb","listener","anotherWordCloudStart","loop","canceled","start","toFixed","wordCloudLayoutHelper","eachSeriesByType","gridRect","getBoxLayoutParams","getWidth","getHeight","ratio","aspect","adjustRectAspect","drawImage","maskCanvas","newImageData","createImageData","toneSum","toneCnt","tone","threshold","putImageData","updateCanvasMask","console","error","valueExtent","getDataExtent","DEGREE_TO_RAD","onWordCloudDrawn","mapArray","value","idx","getName","sort","a","b","series","compats","compatTextStyle","hasOwnProperty","seriesItem","normal","emphasis","AxisModelCommonMixin","getNeedCrossZero","getCoordSysModel"],"sourceRoot":""}