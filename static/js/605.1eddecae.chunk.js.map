{"version":3,"file":"static/js/605.1eddecae.chunk.js","mappings":"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","sources":["components/Card/index.tsx","components/Category/index.tsx","components/MDRenderer/index.tsx","components/PageTitle/index.tsx","components/Tag/index.tsx","pages/Post/TOC/index.tsx","pages/Post/LockCard/index.tsx","pages/Post/index.tsx"],"sourcesContent":["// import {useState, useEffect} from 'react'\r\n// import store from '../../redux/store'\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n  scale?:boolean,\r\n  className?:\"aside-card\"|\"card\"\r\n  children?:React.ReactNode,\r\n  bgImage?:string,\r\n  opacity?:number,\r\n  background?:string,\r\n  darkMode:boolean,\r\n}\r\n\r\nexport default function Card({scale=false,children,className=\"card\",bgImage,opacity=1,background,darkMode}: Props) {\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n\r\n  // useEffect(()=>{\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {darkMode}=store.getState();\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n\r\n  return (\r\n    <div \r\n    className={`${scale?'card-main-scale':'card-main'} ${className} ${darkMode?'card-main-dark':\"\"}`}\r\n    style={{\r\n      backgroundImage:`url(${bgImage})`,\r\n      opacity:`${opacity}`,\r\n      background:`${background}`\r\n    }}\r\n    >\r\n      {/* <div className='card-main-text-container'>\r\n      </div> */}\r\n      {children}\r\n    </div>\r\n  )\r\n}","import { NavLink } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n    category:string,\r\n}\r\n\r\nexport default function Category({category}: Props) {\r\n  return (\r\n    <div className='category-main'>\r\n      <NavLink to={`/categories/${category}`} style={{ textDecoration: \"none\" }}>\r\n        <div className='category-container'>\r\n          <FontAwesomeIcon icon={faBookmark}/>\r\n          <span style={{marginLeft:\"5px\"}}>{category}</span>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","import {useEffect, useState} from 'react'\r\nimport { Marked } from 'marked'\r\nimport { markedHighlight } from 'marked-highlight'\r\nimport hljs from 'highlight.js'\r\nimport markedKatex from 'marked-katex-extension'\r\n\r\nimport \"highlight.js/scss/atom-one-dark.scss\"\r\nimport \"./index.scss\"\r\n// import store from '../../redux/store'\r\n// import { saveSelectedPostHtml } from '../../redux/actions'\r\n// import './hljs.scss'\r\n\r\ntype Props = {\r\n  markdown: string,\r\n  limit?:number,\r\n  showLimitContent:boolean,\r\n  darkMode:boolean,\r\n}\r\n\r\nconst marked = new Marked(\r\n  markedHighlight({\r\n    langPrefix: 'hljs language-',\r\n    highlight(code, lang, info) {\r\n      const language = hljs.getLanguage(lang) ? lang : 'plaintext';\r\n      const highlightedCode= hljs.highlight(code, { language }).value;\r\n      // return `<pre data-lang=\"${language}\"><code class=\"hljs ${language}\">${highlightedCode}</code></pre>`;\r\n      // return `<code class=\"hljs ${language}>${highlightedCode}</code>`\r\n      return highlightedCode;\r\n    }\r\n  }),\r\n);\r\nmarked.use(markedKatex());\r\n\r\n// 用于自定义目录跳转，使用markdown-navbar可删\r\n// let headerIndex = 0;\r\n// marked.use({\r\n//   extensions:[\r\n//     {\r\n//       name:\"heading\",\r\n//       renderer(token){\r\n//         return `<h${token.depth} id=\"heading-${headerIndex++}\">${token.text}</h${token.depth}>`\r\n//       }\r\n//     },\r\n//   ]\r\n// })\r\n\r\nexport default function MDRenderer({ markdown,limit=100,showLimitContent,darkMode }: Props) {\r\n  const [content, setContent] = useState<any>('');\r\n\r\n  useEffect(() => {\r\n    // 去掉 yaml front matter\r\n    let cleanedMarkdown: string = markdown.replace(/^-{3}[\\s\\S]*?-{3}/, '');\r\n    \r\n    if (showLimitContent && markdown!=='') {\r\n      // 移除 HTML 标签\r\n      let plainText = cleanedMarkdown.replace(/<[^>]*>/g, '');\r\n      // console.log(plainText);\r\n\r\n      if (plainText.length > limit) {\r\n        plainText = plainText.substring(0, limit) + '...';\r\n        // console.log(plainText);\r\n        \r\n      }\r\n      setContent(plainText);\r\n    } else {\r\n      // pre标签添加hljs标签，匹配自定义hljs样式\r\n      // let html = marked.parse(cleanedMarkdown).toString().replace(/<pre>/g,\"<pre id='hljs'>\");\r\n      \r\n      let html = marked.parse(cleanedMarkdown) as string;\r\n      // console.log(html);\r\n\r\n      //如果自实现目录取消注释\r\n      // store.dispatch(saveSelectedPostHtml(html));\r\n      \r\n      setContent(html);\r\n    }\r\n  }, [markdown, limit, showLimitContent]);\r\n\r\n  return (\r\n    <div className={showLimitContent?\"\":`${darkMode?'markdown-body-dark':'markdown-body'}`}>\r\n      {showLimitContent ? (\r\n        <div>{content}</div> \r\n      ) : (\r\n        <div dangerouslySetInnerHTML={{ __html: content }} /> \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./index.scss\"\r\n\r\ntype Props = {\r\n  title: string\r\n}\r\n\r\nexport default function PageTitle({ title }: Props) {\r\n  return (\r\n    <>\r\n      <div className='page-title'>\r\n        {title}\r\n      </div>\r\n    </>\r\n  )\r\n}","import {useEffect, useState} from 'react'\r\n\r\nimport \"./index.scss\"\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ntype Props = {\r\n  tag: string,\r\n  reload?:boolean,\r\n}\r\n\r\nexport default function Tag({ tag,reload=false }: Props) {\r\n  const [bgColor,setBgColor]=useState<number>(0)\r\n\r\n  useEffect(()=>{\r\n    let color=Math.floor(Math.random()*3);\r\n    // console.log(color);\r\n    setBgColor(color)\r\n    \r\n  },[])\r\n\r\n  const colorChooser=(color:number):string=>{\r\n    let style=\"tag-bg-color-\";\r\n    return style+color;\r\n  }\r\n\r\n  const reloadPage=()=>{\r\n    if(reload){\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"tag-main\">\r\n      <NavLink onClick={reloadPage} to={`/tags/${tag}`} style={{ textDecoration: \"none\" }}>\r\n        <div className={colorChooser(bgColor)}>\r\n          {tag}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","// import { useEffect, useRef, useState } from 'react'\r\nimport Card from '../../../components/Card'\r\n// import store from '../../../redux/store'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n// import { TOC_HEADING_CONFIG, MAX_TOC_HEADING } from '../../../utils/constants'\r\nimport MarkdownNavbar from 'markdown-navbar'\r\nimport { ConfigProvider, Drawer } from 'antd'\r\nimport { useEffect, useState } from 'react'\r\nimport { MOBILE_MAX_WIDTH } from '../../../utils/constants'\r\nimport store from '../../../redux/store'\r\nimport { useAppSelector } from '../../../redux/hooks'\r\n\r\nimport \"./index.scss\"\r\n\r\n//#region 手动实现有bug\r\n// type Props={\r\n//   markdown:'';\r\n// }\r\n\r\n// type TOCItem={\r\n//   level: number,\r\n//   text: string,\r\n//   anchor: string,\r\n// }\r\n\r\n// export default function TOC() {\r\n//   const [TOCItems,setTOCItems]=useState<TOCItem[]>([]);\r\n//   const [activeId,setActiveId]=useState<string>();\r\n//   // const {activeId}=useHeadingObserver();\r\n\r\n//   const generateToc=(html:string)=>{\r\n//     const parser=new DOMParser();\r\n//     const doc=parser.parseFromString(html,\"text/html\");\r\n//     // console.log(doc);\r\n//     const headings=doc.querySelectorAll(TOC_HEADING_CONFIG);\r\n//     const toc:TOCItem[]=[];\r\n//     headings.forEach(heading=>{\r\n//       const level=parseInt(heading.tagName[1]);\r\n//       const text=heading.textContent || '';\r\n//       const anchor=heading.id;\r\n//       toc.push({level,text,anchor});\r\n//     })\r\n//     // console.log(headings);\r\n//     return toc;\r\n//   }\r\n\r\n//   useEffect(()=>{\r\n//     //调用两次防止bug\r\n//     const {selectedPostHtmlReducer}=store.getState();\r\n//     const toc=generateToc(selectedPostHtmlReducer);\r\n//     setTOCItems(toc);\r\n    \r\n//     const unsubscribe=store.subscribe(()=>{\r\n//       const {selectedPostHtmlReducer}=store.getState();\r\n//       if(selectedPostHtmlReducer!==''){\r\n//         const toc=generateToc(selectedPostHtmlReducer);\r\n//         setTOCItems(toc);\r\n//       }\r\n//     })\r\n\r\n//     return ()=>{\r\n//       unsubscribe();\r\n//     }\r\n//   },[])\r\n\r\n//   useEffect(() => {\r\n//     const observer = new IntersectionObserver(entries => {\r\n//       const visibleEntries = entries.filter(entry => entry.isIntersecting);\r\n//       if (visibleEntries.length > 0) {\r\n//         // Sort by intersection ratio\r\n//         visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\r\n//         console.log(visibleEntries);\r\n        \r\n//         setActiveId(visibleEntries[0].target.id);\r\n//       }\r\n//     }, { \r\n//       threshold: [0.1,0.5,1.0],\r\n//      });\r\n\r\n//     if (TOCItems.length > 0) {\r\n//       TOCItems.forEach(item => {\r\n//         const element = document.getElementById(item.anchor);\r\n//         if (element) {\r\n//           observer.observe(element);\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       TOCItems.forEach(item => {\r\n//         const element = document.getElementById(item.anchor);\r\n//         if (element) {\r\n//           observer.unobserve(element);\r\n//         }\r\n//       });\r\n//     };\r\n//   }, [TOCItems]);\r\n\r\n//   const scrollToHeading=(id:string)=>{\r\n//     let element=document.getElementById(id);\r\n//     element?.scrollIntoView({behavior:\"smooth\"});\r\n//     setActiveId(id);\r\n//   }\r\n\r\n//   const createTOC=()=>{\r\n//     if(TOCItems.length!==0){\r\n//       return TOCItems.map(item=>{\r\n//         return (\r\n//           <li key={item.anchor} style={{marginLeft: (item.level-MAX_TOC_HEADING)*10}}>\r\n//             <p \r\n//             onClick={()=>scrollToHeading(item.anchor)}\r\n//             className={activeId===item.anchor?\"active\":\"\"}\r\n//             >\r\n//               {item.text}\r\n//             </p>          \r\n//           </li>\r\n//         )\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <Card className=\"aside-card\">\r\n//       <div className='toc-header'>\r\n//         <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n//         <hr/>\r\n//       </div>\r\n//       <div className='toc-content'>\r\n//         <ul>\r\n//           {createTOC()}\r\n//         </ul>\r\n//       </div>\r\n\r\n\r\n//     </Card>\r\n//   )\r\n// }\r\n//#endregion\r\n\r\ntype Props={\r\n  markdown:string;\r\n  showDrawer:boolean,\r\n  callbackOnClose:Function,\r\n}\r\n\r\nexport default function TOC({markdown, showDrawer,callbackOnClose}:Props) {\r\n  const [open,setOpen]=useState<boolean>(showDrawer);\r\n  const [drawerVisible,setDrawerVisible]=useState<boolean>(window.innerWidth<=MOBILE_MAX_WIDTH);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  useEffect(()=>{\r\n    setOpen(showDrawer);\r\n  },[showDrawer])\r\n  \r\n  const onClose=()=>{\r\n    setOpen(false);\r\n    callbackOnClose();\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // })\r\n\r\n    const handleResize=()=>{\r\n      setDrawerVisible(window.innerWidth<=MOBILE_MAX_WIDTH);\r\n    }\r\n\r\n    window.addEventListener(\"resize\",handleResize);\r\n\r\n    return ()=>{\r\n      // unsubscribe();\r\n      window.removeEventListener(\"resize\",handleResize);\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n\r\n  },[darkMode])\r\n\r\n  const getColorBgElevated=():string=>{\r\n    return darkMode?\"#1c1c2c99\":\"#ffffffcc\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !drawerVisible ?(\r\n        <Card className=\"aside-card\" darkMode={darkMode}>\r\n          <div className={darkMode?\"toc-header-dark\":'toc-header'}>\r\n            <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n            <hr/>\r\n          </div>\r\n          <div className={darkMode?\"toc-content-dark\":'toc-content'}>\r\n              <MarkdownNavbar \r\n              // onNavItemClick={(event,element,hash)=>handleClick(event,element,hash)} \r\n              source={markdown} \r\n              headingTopOffset={60}\r\n              ordered={true}\r\n              />\r\n          </div>\r\n\r\n        </Card>):(\r\n          <div className='toc-drawer-block'>\r\n          <ConfigProvider\r\n          theme={{\r\n            token:{\r\n              padding:0,\r\n              paddingLG:0,\r\n              paddingXS:0,\r\n              colorBgElevated:getColorBgElevated()\r\n            }\r\n          }}\r\n          >\r\n            <Drawer\r\n            className={darkMode?\"toc-drawer-dark\":'toc-drawer'}\r\n            placement=\"right\"\r\n            open={open}\r\n            onClose={onClose}\r\n            width={250}\r\n            closeIcon={null}\r\n            // destroyOnClose  //不加此项测试运行手机端不显示目录时滑动过快报错，正式运行不影响，但性能会受损 \r\n            >\r\n              <div className={darkMode?\"toc-header-dark\":'toc-header'}>\r\n                <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n                <hr/>\r\n              </div>\r\n              <div className='toc-content'>\r\n                <MarkdownNavbar \r\n                // onNavItemClick={(event,element,hash)=>handleClick(event,element,hash)} \r\n                source={markdown} \r\n                headingTopOffset={60}\r\n                ordered={true}\r\n                />\r\n              </div>\r\n\r\n            </Drawer>\r\n          </ConfigProvider>\r\n        </div>)\r\n      }\r\n    </>\r\n  )\r\n}","import { Button, ConfigProvider, Input, message, Space } from \"antd\"\r\nimport Card from \"../../../components/Card\"\r\nimport { useRef, useState, useEffect } from \"react\"\r\n\r\nimport \"./index.scss\"\r\nimport store from \"../../../redux/store\"\r\nimport { useAppSelector } from \"../../../redux/hooks\"\r\n\r\ntype Props = {\r\n  onClose:Function\r\n  password:string\r\n}\r\n\r\nexport default function LockCard({onClose,password}: Props) {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  const inputRef=useRef<any>(null);\r\n\r\n  const verifyPassword=()=>{\r\n    const inputContent=inputRef.current?.input.value;\r\n    if(inputContent==password){\r\n      onClose();\r\n    }else{\r\n      messageApi.open({\r\n        type:\"error\",\r\n        content:\"密码错误！\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const getToken=()=>{\r\n    if(darkMode){\r\n      return ({\r\n        colorPrimary:'#393958',\r\n      })\r\n    }else{\r\n      return ({\r\n        colorPrimary:\"#4086db\"\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card darkMode={darkMode}>\r\n      <div className=\"lock-card-main\">\r\n        <div className={darkMode?\"lock-card-title-dark\":\"lock-card-title\"}>\r\n          请输入密码\r\n        </div>\r\n\r\n        <div className=\"wave-divider\"/>\r\n\r\n        <div className=\"lock-card-input-line\">\r\n          <ConfigProvider\r\n          theme={{\r\n            components:{\r\n              Input:{\r\n                activeBg:\"#f6f6f6aa\"\r\n              },\r\n              Message:{\r\n                contentBg:\"#ffffffda\"\r\n              }\r\n            },\r\n            token:getToken()\r\n          }}\r\n          >\r\n            {contextHolder}\r\n            <Space.Compact style={{width:\"100%\"}}>\r\n              <Input ref={inputRef} type=\"password\" placeholder=\"password\"/>\r\n              <Button onClick={verifyPassword} type=\"primary\">Submit</Button>\r\n            </Space.Compact>\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Card from '../../components/Card';\r\nimport MDRenderer from '../../components/MDRenderer';\r\n// import store from '../../redux/store';\r\nimport { ConfigProvider, FloatButton, Skeleton, message } from 'antd';\r\nimport { PostConfig } from '../../utils/types';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport { \r\n  UserOutlined, \r\n  ClockCircleOutlined, \r\n  FileWordOutlined,\r\n  CopyrightOutlined, \r\n  LinkOutlined, \r\n  CopyFilled,\r\n  UnorderedListOutlined, } from '@ant-design/icons';\r\nimport Tag from '../../components/Tag';\r\nimport Category from '../../components/Category';\r\nimport { AUTHOR, DEFAULT_SHOW_TOC } from '../../utils/constants';\r\nimport TOC from './TOC';\r\nimport { clearSelectedPostConfig, clearSelectedPostHtml } from '../../redux/actions';\r\nimport LockCard from './LockCard';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport store from '../../redux/store';\r\nimport './index.scss'\r\n\r\nexport default function Post() {\r\n  const {id}=useParams();\r\n  const [markdown,setMarkdown]=useState<string>(\"\");\r\n  const [postConfig,setPostConfig]=useState<PostConfig>(store.getState().selectedPostConfig as PostConfig);\r\n  const [mdLen,setMdLen]=useState<number>(0);\r\n  const [locked,setLocked]=useState<boolean>(false);\r\n  const [showTOC,setShowTOC]=useState<boolean>(DEFAULT_SHOW_TOC);\r\n  //显示移动端TOC Drawer\r\n  const [showTOCDrawer,setShowTOCDrawer]=useState<boolean>(false);\r\n\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [url,setUrl]=useState<string>(window.location.href);\r\n\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n  const dispatch=useAppDispatch();\r\n\r\n  const navigate=useNavigate();\r\n\r\n  useEffect(()=>{\r\n    if(!id){\r\n      navigate('/');\r\n    }\r\n\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // })\r\n\r\n    axios.get(`/posts/${id}.md`)\r\n    .then(response=>{\r\n      // console.log(response);\r\n      setMarkdown(response.data);\r\n      setMdLen(response.data.length);\r\n      \r\n      const {postList}=store.getState();\r\n      let initPostConfig={} as PostConfig;\r\n      for(let pc of postList){\r\n        if(pc.id===id){\r\n          initPostConfig=pc;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      setLocked(initPostConfig.lock);\r\n      setPostConfig(initPostConfig);\r\n    })\r\n    .catch(err=>{\r\n      console.log(\"Post: 文章获取失败\",err);\r\n      console.log(window.location.pathname);\r\n      \r\n      navigate(`/articles/${id}`);\r\n    });\r\n\r\n    //处理因锚点导致的复制链接出错的问题\r\n    const url=window.location.href;\r\n    const hashIndex=url.indexOf('#');\r\n    if(hashIndex!==-1){\r\n      const newUrl=url.substring(0,hashIndex);\r\n      setUrl(newUrl);\r\n    }\r\n\r\n    return ()=>{\r\n      // unsubscribe();\r\n      dispatch(clearSelectedPostConfig());\r\n      dispatch(clearSelectedPostHtml());\r\n    }\r\n\r\n  },[])\r\n\r\n  const createTags=()=>{\r\n    if(postConfig){\r\n      const {tags=[]}=postConfig;\r\n      return tags.map((item,index)=>{\r\n        return(\r\n          <div key={index} className='post-page-card-header-symbol-tag-block'>\r\n            <Tag tag={item} />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const createCategories=()=>{\r\n    if(postConfig){\r\n      const {categories=[]}=postConfig;\r\n      return categories.map((item,index)=>{\r\n        return(\r\n          <div key={index} className='post-page-card-header-symbol-category-block'>\r\n            <Category category={item} />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const copyLink=async ()=>{\r\n    const link=url;\r\n    try{\r\n      if(navigator.clipboard && navigator.clipboard.writeText){\r\n        await navigator.clipboard.writeText(link);\r\n        messageApi.open({\r\n          type:\"success\",\r\n          content:\"已复制到剪贴板\",\r\n        })\r\n      }else{\r\n        const textArea = document.createElement(\"textarea\");\r\n        textArea.value = link;\r\n        \r\n        textArea.style.position = \"fixed\"; \r\n        textArea.style.top = \"-9999px\";\r\n        textArea.style.left = \"-9999px\";\r\n        \r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        \r\n        try {\r\n          const successful = document.execCommand(\"copy\");\r\n          if (successful) {\r\n            messageApi.open({\r\n              type: \"success\",\r\n              content: \"已复制到剪贴板\",\r\n            });\r\n          } else {\r\n            throw new Error(\"复制失败\");\r\n          }\r\n        } catch (err) {\r\n          message.error(\"复制链接出错\");\r\n          console.log(\"复制链接出错\", err);\r\n        }\r\n  \r\n        document.body.removeChild(textArea);\r\n      }\r\n      \r\n    }catch(e){\r\n      message.error(\"复制链接出错\");\r\n      console.log(\"复制链接出错\",e);\r\n    }\r\n  }\r\n\r\n  const handleShowTOC=()=>{\r\n    setShowTOC(!showTOC);\r\n    setShowTOCDrawer(!showTOCDrawer);\r\n  }\r\n\r\n  const callbackCloseDrawer=()=>{\r\n    setShowTOCDrawer(false);\r\n  }\r\n\r\n  const getTocBtnToken=()=>{\r\n    let colorBgElevated=darkMode?'#46466c7b':'#ffffff7b';\r\n    let colorFillContent=darkMode?'#686894bb':'#ffffffbb';\r\n    let colorText='#ffffff99';\r\n    let token:any={\r\n      colorBgElevated,\r\n      colorFillContent\r\n    };\r\n    if(darkMode){\r\n      if(!token.hasOwnProperty('colorText')){\r\n        token['colorText']=colorText;\r\n      }\r\n    }\r\n    return token;\r\n  }\r\n\r\n  return (\r\n    <div className='post-page-main'>\r\n      <ConfigProvider\r\n      theme={{\r\n        token:{\r\n          colorBgElevated:\"#ffffff80\",\r\n          colorFillContent:\"#ffffffbb\",\r\n        },\r\n        components:{\r\n          Message:{\r\n            contentBg:\"#ffffffda\"\r\n          }\r\n        }\r\n      }}\r\n      >\r\n      {contextHolder}\r\n      {\r\n        postConfig ?\r\n        <>\r\n          <div className='post-page-title'>\r\n            <PageTitle title={postConfig.title}/>\r\n          </div>\r\n\r\n          <div className='post-page-body'>\r\n            {\r\n              !locked?\r\n              <>\r\n                <div className={showTOC?\"post-page-body-content-container-showtoc\":'post-page-body-content-container'}>\r\n                  <Card darkMode={darkMode}>\r\n                    <div className='post-page-card-header'>\r\n                      <div className='post-page-card-header-symbol'>\r\n                        <div className='post-page-card-header-symbol-tags'>\r\n                          {createTags()}\r\n                        </div>\r\n\r\n                        <div className='post-page-card-header-symbol-categories'>\r\n                          {createCategories()}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='post-page-card-header-info'>\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                          <span style={{fontWeight:\"bolder\"}}><UserOutlined/>&nbsp;作者：</span>\r\n                          {postConfig.author}\r\n                        </div>\r\n\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                        <span style={{fontWeight:\"bold\"}}><ClockCircleOutlined/>&nbsp;发布时间：</span>\r\n                          {postConfig.time}\r\n                        </div>\r\n\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                        <span style={{fontWeight:\"bold\"}}><FileWordOutlined />&nbsp;文章字数：</span>\r\n                          {mdLen}\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    \r\n                    <hr className='hr-twill'/>\r\n                    \r\n                    <div className={'post-page-card-container'}>\r\n                      <MDRenderer darkMode={darkMode} markdown={markdown} showLimitContent={false} />\r\n                    </div>\r\n\r\n                    <hr className='hr-twill'/>\r\n\r\n                    <div className={darkMode?'post-page-card-footer-dark':'post-page-card-footer'}>\r\n                      <div style={{marginBottom:\"5px\"}}>\r\n                        <span style={{fontWeight:\"bold\"}}>\r\n                          <LinkOutlined/>文章链接：\r\n                          <CopyFilled className={darkMode?'copy-button-dark':'copy-button'} onClick={copyLink}/>\r\n                        </span>\r\n                        <a href={url}>{url}</a>\r\n                      </div>\r\n                      <div style={{marginBottom:\"5px\"}}>\r\n                        <span style={{fontWeight:\"bold\"}}>\r\n                          <CopyrightOutlined />\r\n                          版权声明：本博客所有文章除特別声明外，均采用 <a href='https://creativecommons.org/licenses/by-nc-sa/4.0/'>CC BY-NC-SA 4.0</a> 许可协议。转载请注明来源 <a href='/'>{AUTHOR}</a> !\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                \r\n                <div \r\n                className={`toc-container ${showTOC?'fade-in':'fade-out'}`} \r\n                // style={showTOC?{}:{display:\"none\"}}\r\n                >\r\n                  <TOC \r\n                  showDrawer={showTOCDrawer} \r\n                  markdown={markdown}\r\n                  callbackOnClose={callbackCloseDrawer}\r\n                  />\r\n                </div>\r\n              </>:<LockCard \r\n                  onClose={()=>{setLocked(false)}}\r\n                  password={postConfig.password}\r\n                  />\r\n            }\r\n          </div>\r\n        </>:(\r\n          <div className='post-page-body'>\r\n            <Card darkMode={darkMode}>\r\n              <Skeleton active/>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        !locked &&\r\n        <ConfigProvider\r\n        theme={{\r\n          token:getTocBtnToken()\r\n        }}\r\n        >\r\n          <FloatButton \r\n          className='toc-btn' \r\n          icon={<UnorderedListOutlined/>}\r\n          onClick={handleShowTOC}\r\n          />\r\n        </ConfigProvider>\r\n      }\r\n      </ConfigProvider>\r\n    </div>\r\n  )\r\n}"],"names":["Card","_ref","scale","children","className","bgImage","opacity","background","darkMode","_jsx","concat","style","backgroundImage","Category","category","NavLink","to","textDecoration","_jsxs","FontAwesomeIcon","icon","faBookmark","marginLeft","marked","Marked","markedHighlight","langPrefix","highlight","code","lang","info","language","hljs","getLanguage","value","MDRenderer","markdown","limit","showLimitContent","content","setContent","useState","useEffect","cleanedMarkdown","replace","plainText","length","substring","html","parse","dangerouslySetInnerHTML","__html","use","markedKatex","PageTitle","title","_Fragment","Tag","tag","reload","bgColor","setBgColor","color","Math","floor","random","onClick","reloadPage","window","location","TOC","showDrawer","callbackOnClose","open","setOpen","drawerVisible","setDrawerVisible","innerWidth","MOBILE_MAX_WIDTH","useAppSelector","state","handleResize","addEventListener","removeEventListener","ConfigProvider","theme","token","padding","paddingLG","paddingXS","colorBgElevated","Drawer","placement","onClose","width","closeIcon","faList","MarkdownNavbar","source","headingTopOffset","ordered","LockCard","password","messageApi","contextHolder","message","useMessage","inputRef","useRef","components","Input","activeBg","Message","contentBg","colorPrimary","Space","Compact","ref","type","placeholder","Button","verifyPassword","_inputRef$current","current","input","Post","id","useParams","setMarkdown","postConfig","setPostConfig","store","getState","selectedPostConfig","mdLen","setMdLen","locked","setLocked","showTOC","setShowTOC","DEFAULT_SHOW_TOC","showTOCDrawer","setShowTOCDrawer","url","setUrl","href","dispatch","useAppDispatch","navigate","useNavigate","axios","get","then","response","data","postList","initPostConfig","pc","lock","catch","err","console","log","pathname","hashIndex","indexOf","newUrl","clearSelectedPostConfig","clearSelectedPostHtml","colorFillContent","createTags","tags","map","item","index","createCategories","categories","fontWeight","UserOutlined","author","ClockCircleOutlined","time","FileWordOutlined","marginBottom","LinkOutlined","CopyFilled","async","link","navigator","clipboard","writeText","textArea","document","createElement","position","top","left","body","appendChild","focus","select","execCommand","Error","error","removeChild","e","CopyrightOutlined","AUTHOR","callbackCloseDrawer","Skeleton","active","getTocBtnToken","hasOwnProperty","FloatButton","UnorderedListOutlined","handleShowTOC"],"sourceRoot":""}