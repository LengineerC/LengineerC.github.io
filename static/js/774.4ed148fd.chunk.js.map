{"version":3,"file":"static/js/774.4ed148fd.chunk.js","mappings":"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","sources":["pages/Archives/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { ConfigProvider, Timeline } from \"antd\"\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  CalendarComponent,\n  TooltipComponent,\n  VisualMapComponent\n} from 'echarts/components';\nimport { HeatmapChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport PageTitle from \"../../components/PageTitle\"\nimport Card from \"../../components/Card\"\nimport store from \"../../redux/store\";\n// import { PostConfig } from \"../../utils/types\";\nimport { GITHUB_REPO } from \"../../utils/constants\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\n\nimport \"./index.scss\"\n\necharts.use([\n  TitleComponent,\n  CalendarComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  HeatmapChart,\n  CanvasRenderer\n]);\n\nexport default function Archives() {\n  const heatMapRef=useRef(null);\n  const [currentDate]=useState<Date>(new Date());\n  // const [postList,setPostList]=useState<PostConfig[]>([]);\n  const [githubRepoCommits,setGithubRepoCommits]=useState<[]>([]);\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\n  const darkMode=useAppSelector(state=>state.darkMode);\n  const postList=useAppSelector(state=>state.postList);\n\n  const dispatch=useAppDispatch();\n\n  const getFormatData=(year:string)=>{\n    const date=+echarts.time.parse(year+'-01-01');\n    const end=+echarts.time.parse(+year+1+'-01-01');\n    const dayTime=3600*24*1000;\n    const data:[string,number][]=[];\n\n    for(let time=date;time<end;time+=dayTime){\n      data.push([\n        echarts.time.format(time,'{yyyy}-{MM}-{dd}',false),\n        0\n      ])\n    }\n\n    if(postList.length>0){\n      const postDateArr:[string,number][]=[];\n      const postTimeHash:any={};\n\n      postList.map(post=>{\n        const postTime=post.time.split(' ');\n        if(postTime[0].slice(0,4)===currentDate.getFullYear().toString()){\n          if(!postTimeHash.hasOwnProperty(postTime[0])){\n            postTimeHash[postTime[0]]=1;\n          }else{\n            postTimeHash[postTime[0]]++;\n          }\n        }\n      });\n\n      Object.keys(postTimeHash).map(key=>{\n        postDateArr.push([key,postTimeHash[key]]);\n      });\n\n      return [...data, ...postDateArr];\n    }\n    return data;\n  }\n\n  const formatCommitData=(rawDataArr:any)=>{\n    const githubRepoCommits=rawDataArr.map((item:any,index:number)=>{\n      const {commit:{message},commit:{committer:{date}}}=item;\n      let color='grey';\n      if(index===0) color=\"green\";\n      if(index===rawDataArr.length-1) color=\"blue\";\n\n      let dateArr=date.split(\"T\");\n      dateArr[1]=dateArr[1].substring(0,dateArr[1].length-1);\n      const dateStr=dateArr.join(' ');\n      return({\n        children:`${dateStr}\\t${message}`,\n        color:color,\n      })\n    })\n    setGithubRepoCommits(githubRepoCommits);\n  }\n\n  useEffect(()=>{\n    const {githubRepoCommits}=store.getState();\n    // const unsubscribe=store.subscribe(()=>{\n    //   const {darkMode}=store.getState();\n    //   setIsDarkMode(darkMode);\n    // })\n\n    if(githubRepoCommits || githubRepoCommits.length===0){\n      dispatch({\n        type:\"getGithubRepoCommits\",\n        payload:GITHUB_REPO,\n        callback:(data:any)=>{\n          formatCommitData(data);\n        }\n      })\n    }else{\n      formatCommitData(githubRepoCommits);\n    }\n\n    // return ()=>{\n    //   unsubscribe();\n    // }\n  },[])\n\n  // useEffect(()=>{\n    \n  //   const {postList}=store.getState();\n  //   setPostList(postList);\n\n  //   const unsubscribe=store.subscribe(()=>{\n  //     const {postList}=store.getState();\n  //     setPostList(postList);\n  //   })\n\n  //   return ()=>{\n  //     unsubscribe();\n  //   }\n\n  // },[postList])\n\n  useEffect(()=>{\n    const heatMap=echarts.init(heatMapRef.current);\n    renderHeatMap(heatMap);\n\n  },[darkMode,postList])\n\n  const renderHeatMap=(heatMap:any)=>{\n    let title={\n      top:10,\n      left:\"center\",\n      text:\"文章日历\",\n      textStyle:{\n        fontFamily:\"CustomFont1\",\n        color:`${darkMode?\"#ffffffaa\":\"#001447aa\"}`,\n        fontWeight:'bold',\n      },\n    }\n\n    const option={\n      title:title,\n      visualMap:{\n        min:0,\n        max:100,\n        type: 'piecewise',\n        selectedMode:false,\n        // tooltip: {\n        //   renderMode: 'richText' ,\n        //   position: 'top',\n        //   formatter: function (params:any) {\n        //     return `${params.value[0]}: ${params.value[1]}`;\n        //   }\n        // },\n        // categories: ['0', '1', '2', '3'],\n        // inRange:{\n        //   color:['#cdd8db','#80cbe0','#2986d2','#0943b7'],\n        // },\n        textStyle:{\n          color: `${darkMode?\"#ffffffaa\":\"#001447aa\"}`,\n          fontFamily:\"CustomFont1\",\n          fontWeight:\"bold\",\n        },\n        pieces: [\n          {min: 4, label: '4+', color: `${darkMode?'#216e39':'#0943b7'}`},\n          {min: 3, max: 3, label: '3', color: `${darkMode?'#30a14e':'#2986d2'}`},\n          {min: 2, max: 2, label: '2', color: `${darkMode?'#40c463':'#80cbe0'}`},\n          {min: 1, max: 1, label: '1', color: `${darkMode?'#9be9a8':'#cdd8db'}`},\n          {min: 0, max: 0, label: '0', color: `${darkMode?'#333333':'#f6f6f6'}`}\n        ],\n        orient: 'horizontal',\n        left: 'center',\n        top:45,\n        percision:0,\n      },\n      calendar: {\n        top: 100,\n        left: 30,\n        right: 30,\n        cellSize: 15,\n        range: currentDate.getFullYear(),\n        splitLine:{\n          lineStyle:{\n            type:'solid',\n            width:2,\n            color:'#001447aa',\n          },\n          show:true,\n        },\n        itemStyle: {\n          borderWidth: 2,\n          // borderColor:\"#aaaaaa99\"\n          borderColor:`${darkMode?'#aaaaaa99':'#ccc'}`\n        },\n        dayLabel:{\n          color: `${darkMode?\"#ffffffaa\":\"#001447aa\"}`,\n          fontFamily:\"CustomFont1\",\n          fontWeight:\"bold\",\n        },\n        monthLabel:{\n          color: `${darkMode?\"#ffffffaa\":\"#001447aa\"}`,\n          fontFamily:\"CustomFont1\",\n          fontWeight:\"bold\",\n        },\n        yearLabel:{\n          color: `${darkMode?\"#ffffffaa\":\"#001447aa\"}`,\n          fontFamily:\"CustomFont1\",\n          fontWeight:\"bold\",\n        },\n      },\n      series: {\n        type: 'heatmap',\n        coordinateSystem: 'calendar',\n        data: getFormatData(currentDate.getFullYear().toString()),\n        itemStyle:{\n          borderRadius: 2,\n          borderColor:`${darkMode?'#aaaaaa99':'#ccc'}`\n\n        },\n      }\n    }\n    \n    heatMap.setOption(option);\n\n  }\n\n  return (\n    <div className=\"page-main\">\n\n      <div className=\"page-main-title\">\n        <PageTitle title=\"Archives\"/>\n      </div>\n\n      <div className=\"page-main-content\">\n        <Card\n        className=\"card\"\n        darkMode={darkMode}\n        >\n          <div ref={heatMapRef} className=\"calender-heatmap-block\" />\n\n          <div className=\"time-line-block\">\n            <ConfigProvider\n            theme={{\n              components:{\n                Timeline:{\n                  tailColor:`${darkMode?\"#ffffff66\":\"rgb(0, 20, 71)\"}`,\n                }\n              },\n              token:{\n                fontFamily:\"CustomFont1\",\n                fontSize:17,\n                colorText:`${darkMode?\"#ffffffcc\":\"#001447cc\"}`\n              }\n            }}\n            >\n              <Timeline \n              mode=\"alternate\"\n              // items={[\n              //   {\n              //     children:\"构建中\",\n              //     color:\"red\"\n              //   },\n              //   {\n              //     children:\"立项 2024-06-08\",\n              //     color:\"green\"\n              //   },\n              // ]}\n              items={githubRepoCommits}\n              />\n            </ConfigProvider>\n          </div>\n        </Card>\n      </div>\n\n    </div>\n  )\n}"],"names":["Archives","heatMapRef","useRef","currentDate","useState","Date","githubRepoCommits","setGithubRepoCommits","darkMode","useAppSelector","state","postList","dispatch","useAppDispatch","getFormatData","year","date","echarts","end","data","time","push","length","postDateArr","postTimeHash","map","post","postTime","split","slice","getFullYear","toString","hasOwnProperty","Object","keys","key","formatCommitData","rawDataArr","item","index","commit","message","committer","color","dateArr","substring","dateStr","join","children","concat","useEffect","store","getState","type","payload","GITHUB_REPO","callback","heatMap","current","renderHeatMap","option","title","top","left","text","textStyle","fontFamily","fontWeight","visualMap","min","max","selectedMode","pieces","label","orient","percision","calendar","right","cellSize","range","splitLine","lineStyle","width","show","itemStyle","borderWidth","borderColor","dayLabel","monthLabel","yearLabel","series","coordinateSystem","borderRadius","setOption","_jsxs","className","_jsx","PageTitle","Card","ref","ConfigProvider","theme","components","Timeline","tailColor","token","fontSize","colorText","mode","items","TitleComponent","CalendarComponent","TooltipComponent","VisualMapComponent","HeatmapChart","CanvasRenderer"],"sourceRoot":""}