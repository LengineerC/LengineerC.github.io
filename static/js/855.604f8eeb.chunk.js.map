{"version":3,"file":"static/js/855.604f8eeb.chunk.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/helper/createSeriesDataSimply.js","../node_modules/echarts/lib/chart/radar/radarLayout.js","../node_modules/echarts/lib/chart/radar/backwardCompat.js","../node_modules/echarts/lib/chart/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/RadarSeries.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/coord/radar/RadarModel.js","../node_modules/echarts/lib/component/radar/RadarView.js","../node_modules/echarts/lib/coord/axisTickLabelBuilder.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/echarts/lib/coord/axisAlignTicks.js","../node_modules/echarts/lib/coord/radar/Radar.js","../node_modules/echarts/lib/component/radar/install.js","../node_modules/echarts/lib/chart/radar/install.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/visual/LegendVisualProvider.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport { extend, isArray } from 'zrender/lib/core/util.js';\n/**\r\n * [Usage]:\r\n * (1)\r\n * createListSimply(seriesModel, ['value']);\r\n * (2)\r\n * createListSimply(seriesModel, {\r\n *     coordDimensions: ['value'],\r\n *     dimensionsCount: 5\r\n * });\r\n */\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({\n    encodeDefine: seriesModel.getEncode()\n  }, opt);\n  var source = seriesModel.getSource();\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\n  var list = new SeriesData(dimensions, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function radarLayout(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n    if (!coordSys) {\n      return;\n    }\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    });\n    // Close polygon\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys);\n      // Copy the first actual point to the end of the array\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// @ts-nocheck\n// Backward compat for radar chart in 2\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function radarBackwardCompat(option) {\n  var polarOptArr = option.polar;\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n    var polarNotRadar_1 = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n        option.radar = option.radar || [];\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar_1.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar_1;\n  }\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as symbolUtil from '../../util/symbol.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar RadarView = /** @class */function (_super) {\n  __extends(RadarView, _super);\n  function RadarView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = RadarView.type;\n    return _this;\n  }\n  RadarView.prototype.render = function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      if (symbolType === 'none') {\n        return;\n      }\n      var symbolSize = symbolUtil.normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2);\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scaleX: symbolSize[0] / 2,\n        scaleY: symbolSize[1] / 2,\n        rotation: symbolRotate * Math.PI / 180 || 0\n      });\n      return symbolPath;\n    }\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n          if (oldPoints[i]) {\n            symbolPath.setPosition(oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              x: newPoints[i][0],\n              y: newPoints[i][1]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.setPosition(newPoints[i]);\n          }\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n      if (!points) {\n        return;\n      }\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n      if (!target.shape.points) {\n        return;\n      }\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      saveOldStyle(polygon);\n      saveOldStyle(polyline);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      // Radar uses the visual encoded from itemStyle.\n      var itemStyle = data.getItemVisual(idx, 'style');\n      var color = itemStyle.fill;\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      setStatesStylesFromModel(polyline, itemModel, 'lineStyle');\n      setStatesStylesFromModel(polygon, itemModel, 'areaStyle');\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      polygon.ignore = polygonIgnore;\n      zrUtil.each(['emphasis', 'select', 'blur'], function (stateName) {\n        var stateModel = itemModel.getModel([stateName, 'areaStyle']);\n        var stateIgnore = stateModel.isEmpty() && stateModel.parentModel.isEmpty();\n        // Won't be ignore if normal state is not ignore.\n        polygon.ensureState(stateName).ignore = stateIgnore && polygonIgnore;\n      });\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7,\n        decal: itemStyle.decal\n      }));\n      var emphasisModel = itemModel.getModel('emphasis');\n      var itemHoverStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n      symbolGroup.eachChild(function (symbolPath) {\n        if (symbolPath instanceof ZRImage) {\n          var pathStyle = symbolPath.style;\n          symbolPath.useStyle(zrUtil.extend({\n            // TODO other properties like x, y ?\n            image: pathStyle.image,\n            x: pathStyle.x,\n            y: pathStyle.y,\n            width: pathStyle.width,\n            height: pathStyle.height\n          }, itemStyle));\n        } else {\n          symbolPath.useStyle(itemStyle);\n          symbolPath.setColor(color);\n          symbolPath.style.strokeNoScale = true;\n        }\n        var pathEmphasisState = symbolPath.ensureState('emphasis');\n        pathEmphasisState.style = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.getStore().get(data.getDimensionIndex(symbolPath.__dimIdx), idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        setLabelStyle(symbolPath, getLabelStatesModels(itemModel), {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          inheritColor: color,\n          defaultOpacity: itemStyle.opacity\n        });\n      });\n      toggleHoverEmphasis(itemGroup, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    this._data = data;\n  };\n  RadarView.prototype.remove = function () {\n    this.group.removeAll();\n    this._data = null;\n  };\n  RadarView.type = 'radar';\n  return RadarView;\n}(ChartView);\nexport default RadarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider.js';\nimport { createTooltipMarkup, retrieveVisualColorForTooltipMarker } from '../../component/tooltip/tooltipMarkup.js';\nvar RadarSeriesModel = /** @class */function (_super) {\n  __extends(RadarSeriesModel, _super);\n  function RadarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = RadarSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n  // Overwrite\n  RadarSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments);\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  };\n  RadarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesDataSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  };\n  RadarSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    var nameToDisplay = name === '' ? this.name : name;\n    var markerColor = retrieveVisualColorForTooltipMarker(this, dataIndex);\n    return createTooltipMarkup('section', {\n      header: nameToDisplay,\n      sortBlocks: true,\n      blocks: zrUtil.map(indicatorAxes, function (axis) {\n        var val = data.get(data.mapDimension(axis.dim), dataIndex);\n        return createTooltipMarkup('nameValue', {\n          markerType: 'subItem',\n          markerColor: markerColor,\n          name: axis.name,\n          value: val,\n          sortParam: val\n        });\n      })\n    });\n  };\n  RadarSeriesModel.prototype.getTooltipPosition = function (dataIndex) {\n    if (dataIndex != null) {\n      var data_1 = this.getData();\n      var coordSys = this.coordinateSystem;\n      var values = data_1.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data_1.mapDimension(dim);\n      }), dataIndex);\n      for (var i = 0, len = values.length; i < len; i++) {\n        if (!isNaN(values[i])) {\n          var indicatorAxes = coordSys.getIndicatorAxes();\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\n        }\n      }\n    }\n  };\n  RadarSeriesModel.type = 'series.radar';\n  RadarSeriesModel.dependencies = ['radar'];\n  RadarSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    colorBy: 'data',\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid',\n      join: 'round'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbolSize: 8\n    // symbolRotate: null\n  };\n  return RadarSeriesModel;\n}(SeriesModel);\nexport default RadarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nvar defaultOption = {\n  show: true,\n  // zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By default auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#6E7079',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    showMinLine: true,\n    showMaxLine: true,\n    lineStyle: {\n      color: ['#E0E6F1'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.2)', 'rgba(210,219,238,0.2)']\n    }\n  }\n};\nvar categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\nvar valueAxis = zrUtil.merge({\n  boundaryGap: [0, 0],\n  axisLine: {\n    // Not shown when other axis is categoryAxis in cartesian\n    show: 'auto'\n  },\n  axisTick: {\n    // Not shown when other axis is categoryAxis in cartesian\n    show: 'auto'\n  },\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  splitNumber: 5,\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Length of minor tick\n    length: 3,\n    // Line style\n    lineStyle: {\n      // Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#F4F7FD',\n      width: 1\n    }\n  }\n}, defaultOption);\nvar timeAxis = zrUtil.merge({\n  splitNumber: 6,\n  axisLabel: {\n    // To eliminate labels that are not nice\n    showMinLabel: false,\n    showMaxLabel: false,\n    rich: {\n      primary: {\n        fontWeight: 'bold'\n      }\n    }\n  },\n  splitLine: {\n    show: false\n  }\n}, valueAxis);\nvar logAxis = zrUtil.defaults({\n  logBase: 10\n}, valueAxis);\nexport default {\n  category: categoryAxis,\n  value: valueAxis,\n  time: timeAxis,\n  log: logAxis\n};","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport axisDefault from '../axisDefault.js';\nimport Model from '../../model/Model.js';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin.js';\nimport ComponentModel from '../../model/Component.js';\nvar valueAxisDefault = axisDefault.value;\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\nvar RadarModel = /** @class */function (_super) {\n  __extends(RadarModel, _super);\n  function RadarModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = RadarModel.type;\n    return _this;\n  }\n  RadarModel.prototype.optionUpdated = function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    // let axisType = this.get('axisType');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('axisName');\n    var showName = this.get(['axisName', 'show']);\n    var nameFormatter = this.get(['axisName', 'formatter']);\n    var nameGap = this.get('axisNameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n      var iNameTextStyle = nameTextStyle;\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      }\n      // Use same configuration\n      var innerIndicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        // axisType: axisType,\n        axisLabel: axisLabel,\n        // Compatible with 2 and use text\n        name: indicatorOpt.text,\n        showName: showName,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n      if (zrUtil.isString(nameFormatter)) {\n        var indName = innerIndicatorOpt.name;\n        innerIndicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (zrUtil.isFunction(nameFormatter)) {\n        innerIndicatorOpt.name = nameFormatter(innerIndicatorOpt.name, innerIndicatorOpt);\n      }\n      var model = new Model(innerIndicatorOpt, null, this.ecModel);\n      zrUtil.mixin(model, AxisModelCommonMixin.prototype);\n      // For triggerEvent.\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n    this._indicatorModels = indicatorModels;\n  };\n  RadarModel.prototype.getIndicatorModels = function () {\n    return this._indicatorModels;\n  };\n  RadarModel.type = 'radar';\n  RadarModel.defaultOption = {\n    // zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    axisName: {\n      show: true\n      // formatter: null\n      // textStyle: {}\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    axisNameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    // axisType: 'value',\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  };\n  return RadarModel;\n}(ComponentModel);\nexport default RadarModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\nimport * as graphic from '../../util/graphic.js';\nimport ComponentView from '../../view/Component.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar RadarView = /** @class */function (_super) {\n  __extends(RadarView, _super);\n  function RadarView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = RadarView.type;\n    return _this;\n  }\n  RadarView.prototype.render = function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    this._buildAxes(radarModel);\n    this._buildSplitLineAndArea(radarModel);\n  };\n  RadarView.prototype._buildAxes = function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisName = indicatorAxis.model.get('showName') ? indicatorAxis.name : ''; // hide name\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        axisName: axisName,\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  };\n  RadarView.prototype._buildSplitLineAndArea = function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    if (!indicatorAxes.length) {\n      return;\n    }\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    var splitLineColorsArr = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    var splitAreaColorsArr = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    }\n    // Polyyon\n    else {\n      var realSplitNumber_1;\n      var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n        var ticksCoords = indicatorAxis.getTicksCoords();\n        realSplitNumber_1 = realSplitNumber_1 == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber_1);\n        return zrUtil.map(ticksCoords, function (tickCoord) {\n          return radar.coordToPoint(tickCoord.coord, idx);\n        });\n      });\n      var prevPoints = [];\n      for (var i = 0; i <= realSplitNumber_1; i++) {\n        var points = [];\n        for (var j = 0; j < indicatorAxes.length; j++) {\n          points.push(axesTicksPoints[j][i]);\n        }\n        // Close\n        if (points[0]) {\n          points.push(points[0].slice());\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error('Can\\'t draw value axis ' + i);\n          }\n        }\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\n          splitLines[colorIndex].push(new graphic.Polyline({\n            shape: {\n              points: points\n            }\n          }));\n        }\n        if (showSplitArea && prevPoints) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i - 1);\n          splitAreas[colorIndex].push(new graphic.Polygon({\n            shape: {\n              points: points.concat(prevPoints)\n            }\n          }));\n        }\n        prevPoints = points.slice().reverse();\n      }\n    }\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle();\n    // Add splitArea before splitLine\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColorsArr[idx % splitAreaColorsArr.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColorsArr[idx % splitLineColorsArr.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  };\n  RadarView.type = 'radar';\n  return RadarView;\n}(ComponentView);\nexport default RadarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as textContain from 'zrender/lib/contain/text.js';\nimport { makeInner } from '../util/model.js';\nimport { makeLabelFormatter, getOptionCategoryInterval, shouldShowAllLabels } from './axisHelper.js';\nvar inner = makeInner();\nfunction tickValuesToNumbers(axis, values) {\n  var nums = zrUtil.map(values, function (val) {\n    return axis.scale.parse(val);\n  });\n  if (axis.type === 'time' && nums.length > 0) {\n    // Time axis needs duplicate first/last tick (see TimeScale.getTicks())\n    // The first and last tick/label don't get drawn\n    nums.sort();\n    nums.unshift(nums[0]);\n    nums.push(nums[nums.length - 1]);\n  }\n  return nums;\n}\nexport function createAxisLabels(axis) {\n  var custom = axis.getLabelModel().get('customValues');\n  if (custom) {\n    var labelFormatter_1 = makeLabelFormatter(axis);\n    var extent_1 = axis.scale.getExtent();\n    var tickNumbers = tickValuesToNumbers(axis, custom);\n    var ticks = zrUtil.filter(tickNumbers, function (val) {\n      return val >= extent_1[0] && val <= extent_1[1];\n    });\n    return {\n      labels: zrUtil.map(ticks, function (numval) {\n        var tick = {\n          value: numval\n        };\n        return {\n          formattedLabel: labelFormatter_1(tick),\n          rawLabel: axis.scale.getLabel(tick),\n          tickValue: numval\n        };\n      })\n    };\n  }\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\r\n * @param {module:echats/coord/Axis} axis\r\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\r\n * @return {Object} {\r\n *     ticks: Array.<number>\r\n *     tickCategoryInterval: number\r\n * }\r\n */\nexport function createAxisTicks(axis, tickModel) {\n  var custom = axis.getTickModel().get('customValues');\n  if (custom) {\n    var extent_2 = axis.scale.getExtent();\n    var tickNumbers = tickValuesToNumbers(axis, custom);\n    return {\n      ticks: zrUtil.filter(tickNumbers, function (val) {\n        return val >= extent_2[0] && val <= extent_2[1];\n      })\n    };\n  }\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: zrUtil.map(axis.scale.getTicks(), function (tick) {\n      return tick.value;\n    })\n  };\n}\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n  if (result) {\n    return result;\n  }\n  var labels;\n  var numericLabelInterval;\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  }\n  // Cache to avoid calling interval function repeatedly.\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n  if (result) {\n    return result;\n  }\n  var ticks;\n  var tickCategoryInterval;\n  // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  }\n  // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n    var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n    tickCategoryInterval = labelsResult.labelCategoryInterval;\n    ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n      return labelItem.tickValue;\n    });\n  } else {\n    tickCategoryInterval = optionTickInterval;\n    ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n  }\n  // Cache to avoid calling interval function repeatedly.\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tick, idx) {\n      return {\n        level: tick.level,\n        formattedLabel: labelFormatter(tick, idx),\n        rawLabel: axis.scale.getLabel(tick),\n        tickValue: tick.value\n      };\n    })\n  };\n}\nfunction getListCache(axis, prop) {\n  // Because key can be a function, and cache size always is small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\r\n * Calculate interval for category axis ticks and labels.\r\n * To get precise result, at least one of `getRotate` and `isHorizontal`\r\n * should be implemented in axis.\r\n */\nexport function calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n  var tickCount = ordinalScale.count();\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n  var step = 1;\n  // Simple optimization. Empirical value: tick count should less than 40.\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0;\n  // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0;\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n    var rect = textContain.getBoundingRect(labelFormatter({\n      value: tickValue\n    }), params.font, 'center', 'top');\n    // Magic number\n    width = rect.width * 1.3;\n    height = rect.height * 1.3;\n    // Min size, void long loop.\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n  var dw = maxW / unitW;\n  var dh = maxH / unitH;\n  // 0/0 is NaN, 1/0 is Infinity.\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var axisExtent = axis.getExtent();\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount;\n  // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n  // For example, if all of the axis labels are `a, b, c, d, e, f, g`.\n  // The jitter will cause that sometimes the displayed labels are\n  // `a, d, g` (interval: 2) sometimes `a, c, e`(interval: 1).\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1\n  // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval\n  // If the axis change is caused by chart resize, the cache should not\n  // be used. Otherwise some hidden labels might not be shown again.\n  && cache.axisExtent0 === axisExtent[0] && cache.axisExtent1 === axisExtent[1]) {\n    interval = lastAutoInterval;\n  }\n  // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n    cache.lastTickCount = tickCount;\n    cache.lastAutoInterval = interval;\n    cache.axisExtent0 = axisExtent[0];\n    cache.axisExtent1 = axisExtent[1];\n  }\n  return interval;\n}\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = [];\n  // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count();\n  // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  }\n  // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n  var showAllLabel = shouldShowAllLabels(axis);\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  }\n  // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n  var tickValue = startTick;\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n  if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n  function addItem(tickValue) {\n    var tickObj = {\n      value: tickValue\n    };\n    result.push(onlyTick ? tickValue : {\n      formattedLabel: labelFormatter(tickObj),\n      rawLabel: ordinalScale.getLabel(tickObj),\n      tickValue: tickValue\n    });\n  }\n  return result;\n}\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tick) {\n    var rawLabel = ordinalScale.getLabel(tick);\n    var tickValue = tick.value;\n    if (categoryInterval(tick.value, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tick),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { each, map } from 'zrender/lib/core/util.js';\nimport { linearMap, getPixelPrecision, round } from '../util/number.js';\nimport { createAxisTicks, createAxisLabels, calculateCategoryInterval } from './axisTickLabelBuilder.js';\nvar NORMALIZED_EXTENT = [0, 1];\n/**\r\n * Base class of Axis.\r\n */\nvar Axis = /** @class */function () {\n  function Axis(dim, scale, extent) {\n    this.onBand = false;\n    this.inverse = false;\n    this.dim = dim;\n    this.scale = scale;\n    this._extent = extent || [0, 0];\n  }\n  /**\r\n   * If axis extent contain given coord\r\n   */\n  Axis.prototype.contain = function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  };\n  /**\r\n   * If axis extent contain given data\r\n   */\n  Axis.prototype.containData = function (data) {\n    return this.scale.contain(data);\n  };\n  /**\r\n   * Get coord extent.\r\n   */\n  Axis.prototype.getExtent = function () {\n    return this._extent.slice();\n  };\n  /**\r\n   * Get precision used for formatting\r\n   */\n  Axis.prototype.getPixelPrecision = function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  };\n  /**\r\n   * Set coord extent\r\n   */\n  Axis.prototype.setExtent = function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  };\n  /**\r\n   * Convert data to coord. Data is the rank if it has an ordinal scale\r\n   */\n  Axis.prototype.dataToCoord = function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  };\n  /**\r\n   * Convert coord to data. Data is the rank if it has an ordinal scale\r\n   */\n  Axis.prototype.coordToData = function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  };\n  /**\r\n   * Convert pixel point to data in axis\r\n   */\n  Axis.prototype.pointToData = function (point, clamp) {\n    // Should be implemented in derived class if necessary.\n    return;\n  };\n  /**\r\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\r\n   * `axis.getTicksCoords` considers `onBand`, which is used by\r\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\r\n   * @param opt.tickModel default: axis.model.getModel('axisTick')\r\n   * @param opt.clamp If `true`, the first and the last\r\n   *        tick must be at the axis end points. Otherwise, clip ticks\r\n   *        that outside the axis extent.\r\n   */\n  Axis.prototype.getTicksCoords = function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickVal) {\n      return {\n        coord: this.dataToCoord(this.scale.type === 'ordinal' ? this.scale.getRawOrdinalNumber(tickVal) : tickVal),\n        tickValue: tickVal\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  };\n  Axis.prototype.getMinorTicksCoords = function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber');\n    // Protection.\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  };\n  Axis.prototype.getViewLabels = function () {\n    return createAxisLabels(this).labels;\n  };\n  Axis.prototype.getLabelModel = function () {\n    return this.model.getModel('axisLabel');\n  };\n  /**\r\n   * Notice here we only get the default tick model. For splitLine\r\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\r\n   * manually when calling `getTicksCoords`.\r\n   * In GL, this method may be overridden to:\r\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\r\n   */\n  Axis.prototype.getTickModel = function () {\n    return this.model.getModel('axisTick');\n  };\n  /**\r\n   * Get width of band\r\n   */\n  Axis.prototype.getBandWidth = function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n    // Fix #2728, avoid NaN when only one data.\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  };\n  /**\r\n   * Only be called in category axis.\r\n   * Can be overridden, consider other axes like in 3D.\r\n   * @return Auto interval for cateogry axis tick and label\r\n   */\n  Axis.prototype.calculateCategoryInterval = function () {\n    return calculateCategoryInterval(this);\n  };\n  return Axis;\n}();\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n// If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[1],\n      tickValue: ticksCoords[0].tickValue\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift_1 = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift_1 / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift_1 * diffSize,\n      tickValue: dataExtent[1] + 1\n    };\n    ticksCoords.push(last);\n  }\n  var inverse = axisExtent[0] > axisExtent[1];\n  // Handling clamp.\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unnecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\nexport default Axis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis.js';\nvar IndicatorAxis = /** @class */function (_super) {\n  __extends(IndicatorAxis, _super);\n  function IndicatorAxis(dim, scale, radiusExtent) {\n    var _this = _super.call(this, dim, scale, radiusExtent) || this;\n    _this.type = 'value';\n    _this.angle = 0;\n    _this.name = '';\n    return _this;\n  }\n  return IndicatorAxis;\n}(Axis);\nexport default IndicatorAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { getPrecisionSafe, round } from '../util/number.js';\nimport IntervalScale from '../scale/Interval.js';\nimport { getScaleExtent } from './axisHelper.js';\nimport { warn } from '../util/log.js';\nimport { increaseInterval, isValueNice } from '../scale/helper.js';\nvar mathLog = Math.log;\nexport function alignScaleTicks(scale, axisModel, alignToScale) {\n  var intervalScaleProto = IntervalScale.prototype;\n  // NOTE: There is a precondition for log scale  here:\n  // In log scale we store _interval and _extent of exponent value.\n  // So if we use the method of InternalScale to set/get these data.\n  // It process the exponent value, which is linear and what we want here.\n  var alignToTicks = intervalScaleProto.getTicks.call(alignToScale);\n  var alignToNicedTicks = intervalScaleProto.getTicks.call(alignToScale, true);\n  var alignToSplitNumber = alignToTicks.length - 1;\n  var alignToInterval = intervalScaleProto.getInterval.call(alignToScale);\n  var scaleExtent = getScaleExtent(scale, axisModel);\n  var rawExtent = scaleExtent.extent;\n  var isMinFixed = scaleExtent.fixMin;\n  var isMaxFixed = scaleExtent.fixMax;\n  if (scale.type === 'log') {\n    var logBase = mathLog(scale.base);\n    rawExtent = [mathLog(rawExtent[0]) / logBase, mathLog(rawExtent[1]) / logBase];\n  }\n  scale.setExtent(rawExtent[0], rawExtent[1]);\n  scale.calcNiceExtent({\n    splitNumber: alignToSplitNumber,\n    fixMin: isMinFixed,\n    fixMax: isMaxFixed\n  });\n  var extent = intervalScaleProto.getExtent.call(scale);\n  // Need to update the rawExtent.\n  // Because value in rawExtent may be not parsed. e.g. 'dataMin', 'dataMax'\n  if (isMinFixed) {\n    rawExtent[0] = extent[0];\n  }\n  if (isMaxFixed) {\n    rawExtent[1] = extent[1];\n  }\n  var interval = intervalScaleProto.getInterval.call(scale);\n  var min = rawExtent[0];\n  var max = rawExtent[1];\n  if (isMinFixed && isMaxFixed) {\n    // User set min, max, divide to get new interval\n    interval = (max - min) / alignToSplitNumber;\n  } else if (isMinFixed) {\n    max = rawExtent[0] + interval * alignToSplitNumber;\n    // User set min, expand extent on the other side\n    while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1])) {\n      interval = increaseInterval(interval);\n      max = rawExtent[0] + interval * alignToSplitNumber;\n    }\n  } else if (isMaxFixed) {\n    // User set max, expand extent on the other side\n    min = rawExtent[1] - interval * alignToSplitNumber;\n    while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0])) {\n      interval = increaseInterval(interval);\n      min = rawExtent[1] - interval * alignToSplitNumber;\n    }\n  } else {\n    var nicedSplitNumber = scale.getTicks().length - 1;\n    if (nicedSplitNumber > alignToSplitNumber) {\n      interval = increaseInterval(interval);\n    }\n    var range = interval * alignToSplitNumber;\n    max = Math.ceil(rawExtent[1] / interval) * interval;\n    min = round(max - range);\n    // Not change the result that crossing zero.\n    if (min < 0 && rawExtent[0] >= 0) {\n      min = 0;\n      max = round(range);\n    } else if (max > 0 && rawExtent[1] <= 0) {\n      max = 0;\n      min = -round(range);\n    }\n  }\n  // Adjust min, max based on the extent of alignTo. When min or max is set in alignTo scale\n  var t0 = (alignToTicks[0].value - alignToNicedTicks[0].value) / alignToInterval;\n  var t1 = (alignToTicks[alignToSplitNumber].value - alignToNicedTicks[alignToSplitNumber].value) / alignToInterval;\n  // NOTE: Must in setExtent -> setInterval -> setNiceExtent order.\n  intervalScaleProto.setExtent.call(scale, min + interval * t0, max + interval * t1);\n  intervalScaleProto.setInterval.call(scale, interval);\n  if (t0 || t1) {\n    intervalScaleProto.setNiceExtent.call(scale, min + interval, max - interval);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    var ticks = intervalScaleProto.getTicks.call(scale);\n    if (ticks[1] && (!isValueNice(interval) || getPrecisionSafe(ticks[1].value) > getPrecisionSafe(interval))) {\n      warn(\n      // eslint-disable-next-line\n      \"The ticks may be not readable when set min: \" + axisModel.get('min') + \", max: \" + axisModel.get('max') + \" and alignTicks: true\");\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// TODO clockwise\nimport IndicatorAxis from './IndicatorAxis.js';\nimport IntervalScale from '../../scale/Interval.js';\nimport * as numberUtil from '../../util/number.js';\nimport { map, each, isString, isNumber } from 'zrender/lib/core/util.js';\nimport { alignScaleTicks } from '../axisAlignTicks.js';\nvar Radar = /** @class */function () {\n  function Radar(radarModel, ecModel, api) {\n    /**\r\n     *\r\n     * Radar dimensions\r\n     */\n    this.dimensions = [];\n    this._model = radarModel;\n    this._indicatorAxes = map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n      var dim = 'indicator_' + idx;\n      var indicatorAxis = new IndicatorAxis(dim, new IntervalScale()\n      // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()\n      );\n      indicatorAxis.name = indicatorModel.get('name');\n      // Inject model and axis\n      indicatorAxis.model = indicatorModel;\n      indicatorModel.axis = indicatorAxis;\n      this.dimensions.push(dim);\n      return indicatorAxis;\n    }, this);\n    this.resize(radarModel, api);\n  }\n  Radar.prototype.getIndicatorAxes = function () {\n    return this._indicatorAxes;\n  };\n  Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\n    return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n  };\n  // TODO: API should be coordToPoint([coord, indicatorIndex])\n  Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\n    var angle = indicatorAxis.angle;\n    var x = this.cx + coord * Math.cos(angle);\n    var y = this.cy - coord * Math.sin(angle);\n    return [x, y];\n  };\n  Radar.prototype.pointToData = function (pt) {\n    var dx = pt[0] - this.cx;\n    var dy = pt[1] - this.cy;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx);\n    // Find the closest angle\n    // FIXME index can calculated directly\n    var minRadianDiff = Infinity;\n    var closestAxis;\n    var closestAxisIdx = -1;\n    for (var i = 0; i < this._indicatorAxes.length; i++) {\n      var indicatorAxis = this._indicatorAxes[i];\n      var diff = Math.abs(radian - indicatorAxis.angle);\n      if (diff < minRadianDiff) {\n        closestAxis = indicatorAxis;\n        closestAxisIdx = i;\n        minRadianDiff = diff;\n      }\n    }\n    return [closestAxisIdx, +(closestAxis && closestAxis.coordToData(radius))];\n  };\n  Radar.prototype.resize = function (radarModel, api) {\n    var center = radarModel.get('center');\n    var viewWidth = api.getWidth();\n    var viewHeight = api.getHeight();\n    var viewSize = Math.min(viewWidth, viewHeight) / 2;\n    this.cx = numberUtil.parsePercent(center[0], viewWidth);\n    this.cy = numberUtil.parsePercent(center[1], viewHeight);\n    this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n    // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n    var radius = radarModel.get('radius');\n    if (isString(radius) || isNumber(radius)) {\n      radius = [0, radius];\n    }\n    this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n    this.r = numberUtil.parsePercent(radius[1], viewSize);\n    each(this._indicatorAxes, function (indicatorAxis, idx) {\n      indicatorAxis.setExtent(this.r0, this.r);\n      var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length;\n      // Normalize to [-PI, PI]\n      angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n      indicatorAxis.angle = angle;\n    }, this);\n  };\n  Radar.prototype.update = function (ecModel, api) {\n    var indicatorAxes = this._indicatorAxes;\n    var radarModel = this._model;\n    each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.setExtent(Infinity, -Infinity);\n    });\n    ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n      if (radarSeries.get('coordinateSystem') !== 'radar'\n      // @ts-ignore\n      || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n        return;\n      }\n      var data = radarSeries.getData();\n      each(indicatorAxes, function (indicatorAxis) {\n        indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n      });\n    }, this);\n    var splitNumber = radarModel.get('splitNumber');\n    var dummyScale = new IntervalScale();\n    dummyScale.setExtent(0, splitNumber);\n    dummyScale.setInterval(1);\n    // Force all the axis fixing the maxSplitNumber.\n    each(indicatorAxes, function (indicatorAxis, idx) {\n      alignScaleTicks(indicatorAxis.scale, indicatorAxis.model, dummyScale);\n    });\n  };\n  Radar.prototype.convertToPixel = function (ecModel, finder, value) {\n    console.warn('Not implemented.');\n    return null;\n  };\n  Radar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    console.warn('Not implemented.');\n    return null;\n  };\n  Radar.prototype.containPoint = function (point) {\n    console.warn('Not implemented.');\n    return false;\n  };\n  Radar.create = function (ecModel, api) {\n    var radarList = [];\n    ecModel.eachComponent('radar', function (radarModel) {\n      var radar = new Radar(radarModel, ecModel, api);\n      radarList.push(radar);\n      radarModel.coordinateSystem = radar;\n    });\n    ecModel.eachSeriesByType('radar', function (radarSeries) {\n      if (radarSeries.get('coordinateSystem') === 'radar') {\n        // Inject coordinate system\n        // @ts-ignore\n        radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n      }\n    });\n    return radarList;\n  };\n  /**\r\n   * Radar dimensions is based on the data\r\n   */\n  Radar.dimensions = [];\n  return Radar;\n}();\nexport default Radar;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport RadarModel from '../../coord/radar/RadarModel.js';\nimport RadarView from './RadarView.js';\nimport Radar from '../../coord/radar/Radar.js';\nexport function install(registers) {\n  registers.registerCoordinateSystem('radar', Radar);\n  registers.registerComponentModel(RadarModel);\n  registers.registerComponentView(RadarView);\n  registers.registerVisual({\n    seriesType: 'radar',\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      // itemVisual symbol is for selected data\n      data.each(function (idx) {\n        data.setItemVisual(idx, 'legendIcon', 'roundRect');\n      });\n      // visual is for unselected data\n      data.setVisual('legendIcon', 'roundRect');\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { use } from '../../extension.js';\nimport radarLayout from '../radar/radarLayout.js';\nimport dataFilter from '../../processor/dataFilter.js';\nimport backwardCompat from '../radar/backwardCompat.js';\nimport RadarView from './RadarView.js';\nimport RadarSeriesModel from './RadarSeries.js';\nimport { install as installRadarComponent } from '../../component/radar/install.js';\nexport function install(registers) {\n  use(installRadarComponent);\n  registers.registerChartView(RadarView);\n  registers.registerSeriesModel(RadarSeriesModel);\n  registers.registerLayout(radarLayout);\n  registers.registerProcessor(dataFilter('radar'));\n  registers.registerPreprocessor(backwardCompat);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport default function dataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx);\n        // If in any legend component the status is not selected.\n        for (var i = 0; i < legendModels.length; i++) {\n          // @ts-ignore FIXME: LegendModel\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n/**\r\n * LegendVisualProvider is an bridge that pick encoded color from data and\r\n * provide to the legend component.\r\n */\nvar LegendVisualProvider = /** @class */function () {\n  function LegendVisualProvider(\n  // Function to get data after filtered. It stores all the encoding info\n  getDataWithEncodedVisual,\n  // Function to get raw data before filtered.\n  getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData();\n    // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n    return rawData.mapArray(rawData.getName);\n  };\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n    return rawData.indexOfName(name) >= 0;\n  };\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n  return LegendVisualProvider;\n}();\nexport default LegendVisualProvider;"],"names":["createSeriesDataSimply","seriesModel","opt","nameList","isArray","coordDimensions","extend","encodeDefine","getEncode","source","getSource","dimensions","prepareSeriesDataSchema","list","SeriesData","initData","radarLayout","ecModel","eachSeriesByType","data","getData","points","coordSys","coordinateSystem","axes","getIndicatorAxes","zrUtil","axis","axisIndex","each","mapDimension","dim","val","dataIndex","point","dataToPoint","isValidPoint","getValueMissingPoint","idx","firstPoint","push","slice","setItemLayout","isNaN","cx","cy","radarBackwardCompat","option","polarOptArr","polar","polarNotRadar_1","polarOpt","indicator","type","shape","radar","series","seriesOpt","polarIndex","radarIndex","_super","RadarView","_this","apply","this","arguments","__extends","prototype","render","api","group","oldData","_data","createSymbol","symbolType","getItemVisual","symbolSize","symbolUtil","symbolPath","symbolRotate","attr","style","strokeNoScale","z2","scaleX","scaleY","rotation","Math","PI","updateSymbols","oldPoints","newPoints","symbolGroup","isInit","removeAll","i","length","__dimIdx","setPosition","graphic","x","y","add","getInitialPoints","pt","diff","getItemLayout","polygon","polyline","target","itemGroup","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","childAt","saveOldStyle","remove","execute","eachItemGraphicEl","itemModel","getItemModel","itemStyle","color","fill","useStyle","getModel","getLineStyle","stroke","setStatesStylesFromModel","areaStyleModel","polygonIgnore","isEmpty","parentModel","ignore","stateName","stateModel","stateIgnore","ensureState","getAreaStyle","opacity","decal","emphasisModel","itemHoverStyle","getItemStyle","eachChild","ZRImage","pathStyle","image","width","height","setColor","defaultText","getStore","get","getDimensionIndex","setLabelStyle","getLabelStatesModels","labelFetcher","hostModel","labelDataIndex","labelDimIndex","inheritColor","defaultOpacity","toggleHoverEmphasis","ChartView","RadarSeriesModel","hasSymbolVisual","init","legendVisualProvider","LegendVisualProvider","getRawData","getInitialData","generateCoord","generateCoordCount","Infinity","formatTooltip","multipleSeries","dataType","indicatorAxes","name","getName","nameToDisplay","markerColor","retrieveVisualColorForTooltipMarker","createTooltipMarkup","header","sortBlocks","blocks","markerType","value","sortParam","getTooltipPosition","data_1","values","getValues","len","coordToPoint","dataToCoord","dependencies","defaultOption","z","colorBy","legendHoverLink","lineStyle","join","label","position","SeriesModel","show","inverse","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","silent","triggerEvent","tooltip","axisPointer","axisLine","onZero","onZeroAxisIndex","symbol","axisTick","inside","axisLabel","rotate","showMinLabel","showMaxLabel","margin","fontSize","splitLine","showMinLine","showMaxLine","splitArea","areaStyle","categoryAxis","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","minorTick","minorSplitLine","category","time","rich","primary","fontWeight","log","logBase","valueAxisDefault","axisDefault","defaultsShow","RadarModel","optionUpdated","scale","showName","nameFormatter","indicatorModels","indicatorOpt","max","min","iNameTextStyle","innerIndicatorOpt","text","indName","replace","model","Model","AxisModelCommonMixin","mainType","componentIndex","_indicatorModels","getIndicatorModels","center","radius","startAngle","axisName","axisNameGap","ComponentModel","axisBuilderAttrs","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","AxisBuilder","angle","labelDirection","tickDirection","nameDirection","axisBuilder","getGroup","splitLineModel","splitAreaModel","lineStyleModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLineColorsArr","splitAreaColorsArr","splitLines","splitAreas","ticksRadius","getTicksCoords","getColorIndex","r","coord","r0","realSplitNumber_1","axesTicksPoints","ticksCoords","tickCoord","prevPoints","j","concat","reverse","mergePath","areaOrLine","areaOrLineColorList","colorIndex","ComponentView","inner","makeInner","tickValuesToNumbers","nums","parse","sort","unshift","createAxisLabels","custom","getLabelModel","labelFormatter_1","makeLabelFormatter","extent_1","getExtent","tickNumbers","ticks","labels","numval","tick","formattedLabel","rawLabel","getLabel","tickValue","labelModel","result","makeCategoryLabelsActually","isBlank","labelCategoryInterval","makeCategoryLabels","getTicks","labelFormatter","level","makeRealNumberLabels","createAxisTicks","tickModel","getTickModel","extent_2","tickCategoryInterval","ticksCache","getListCache","optionTickInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","labelsResult","labelItem","makeLabelsByNumericCategoryInterval","listCacheSet","makeCategoryTicks","numericLabelInterval","labelsCache","optionLabelInterval","autoInterval","calculateCategoryInterval","makeAutoCategoryInterval","prop","cache","key","categoryInterval","onlyTick","ordinalScale","ordinalExtent","step","startTick","tickCount","count","round","ceil","showAllLabel","shouldShowAllLabels","includeMinLabel","includeMaxLabel","addItem","tickObj","NORMALIZED_EXTENT","fixExtentWithBands","extent","nTick","IndicatorAxis","radiusExtent","call","Axis","onBand","_extent","contain","containData","getPixelPrecision","dataExtent","setExtent","start","end","clamp","normalize","linearMap","coordToData","t","pointToData","map","tickVal","getRawOrdinalNumber","ticksLen","last","diffSize","axisExtent","crossLen","shift_1","ticksItem","littleThan","shift","pop","a","b","fixOnBandTicksCoords","getMinorTicksCoords","minorTicks","getMinorTicks","minorTicksGroup","getViewLabels","getBandWidth","size","abs","params","axisRotate","getRotate","isHorizontal","labelRotate","font","getFont","fetchAutoCategoryIntervalCalculationParams","floor","unitSpan","unitW","cos","unitH","sin","maxW","maxH","rect","textContain","dw","dh","lastAutoInterval","lastTickCount","axisExtent0","axisExtent1","mathLog","Radar","_model","_indicatorAxes","indicatorModel","IntervalScale","resize","indicatorIndex","dx","dy","sqrt","closestAxis","radian","atan2","minRadianDiff","closestAxisIdx","viewWidth","getWidth","viewHeight","getHeight","viewSize","numberUtil","isString","isNumber","radarSeries","getComponent","unionExtentFromData","dummyScale","setInterval","axisModel","alignToScale","intervalScaleProto","alignToTicks","alignToNicedTicks","alignToSplitNumber","alignToInterval","getInterval","scaleExtent","getScaleExtent","rawExtent","isMinFixed","fixMin","isMaxFixed","fixMax","base","calcNiceExtent","isFinite","increaseInterval","range","t0","t1","setNiceExtent","alignScaleTicks","convertToPixel","finder","console","warn","convertFromPixel","pixel","containPoint","create","radarList","eachComponent","install","registers","registerCoordinateSystem","registerComponentModel","registerComponentView","registerVisual","seriesType","reset","setItemVisual","setVisual","use","installRadarComponent","registerChartView","registerSeriesModel","registerLayout","registerProcessor","dataFilter","registerPreprocessor","backwardCompat","legendModels","findComponents","filterSelf","isSelected","getDataWithEncodedVisual","_getDataWithEncodedVisual","_getRawData","getAllNames","rawData","mapArray","containName","indexOfName"],"sourceRoot":""}