{"version":3,"file":"static/js/301.f3e9bcaa.chunk.js","mappings":"8LAUe,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,GAAUD,EAAAA,EAAAA,SAAgB,GAE1BE,GAASC,EAAAA,EAAAA,IAAeC,GAAOA,EAAMF,WAiC3C,OA7BAG,EAAAA,EAAAA,YAAU,KAKR,GAAGJ,EAAUK,QAAS,OAEtB,IAAIC,EAAoB,KACxB,MAAMC,EAAuBA,KACvBT,EAAWO,SAAYP,EAAmBO,QAAQG,QACpDF,EAAmBR,EAAmBO,QAAQG,QAG9CC,WAAWF,EAAsB,IACnC,EAMF,OAHAA,IACAP,EAAUK,SAAQ,EAEX,KAEFC,GACAA,EAAwBI,UAE3BV,EAAUK,SAAQ,CAAK,CACxB,GACA,KAGDM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,MAAM,aAEnBF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAAChB,SAAUA,EAASY,UACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAWX,EAAS,mBAAmB,cAAcY,SAAC,4DAG3DC,EAAAA,EAAAA,KAAA,OAAKF,UAAWX,EAAS,8BAA8B,yBAAyBY,UAC9EC,EAAAA,EAAAA,KAAA,aACEI,IAAKpB,EACLqB,KAAMC,EAAAA,GACNC,MAAM,UACNC,OAAQ,GACRC,QAASC,EAAAA,QAIbV,EAAAA,EAAAA,KAAA,OAAKF,UAAWX,EAAS,mBAAmB,cAAcY,SAAC,0CAG3DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,UACEW,IAAKC,EAAAA,GACLC,UAAU,KACVC,YAAY,KACZC,iBAAiB,eASjC,C","sources":["pages/Media/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport Card from '../../components/Card';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport { BILIBILI_VIDEO_URL, IRC_TYPE, MUSIC_URL } from '../../utils/constants';\r\n// import { useLocation } from 'react-router-dom';\r\n// import store from '../../redux/store';\r\n\r\nimport './index.scss';\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\nexport default function Media() {\r\n  const aplayerRef=useRef(null);\r\n  // const aplayerInstanceRef = useRef(null)\r\n  const effectRan=useRef<boolean>(false);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  // const location=useLocation();\r\n\r\n  useEffect(() => {\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // })\r\n    if(effectRan.current) return;\r\n\r\n    let aplayerInstance:any=null;\r\n    const checkAPlayerInstance = () => {\r\n      if (aplayerRef.current && (aplayerRef as any).current.aplayer) {\r\n        aplayerInstance = (aplayerRef as any).current.aplayer;\r\n        \r\n      } else {\r\n        setTimeout(checkAPlayerInstance, 100);\r\n      }\r\n    };\r\n\r\n    checkAPlayerInstance();\r\n    effectRan.current=true;\r\n\r\n    return () => {\r\n      // unsubscribe();\r\n      if(aplayerInstance){\r\n        (aplayerInstance as any).destroy();\r\n      }\r\n      effectRan.current=false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page-main\">\r\n      <div className=\"page-main-title\">\r\n        <PageTitle title=\"Media\" />\r\n      </div>\r\n      <div className=\"page-main-content\">\r\n        <Card darkMode={darkMode}>\r\n          <div className=\"media-card-main\">\r\n            <div className={darkMode?'media-title-dark':'media-title'}>\r\n              üé∂Á©¢„Çå„Å™„ÅçÈü≥Ê•ΩÂÆ§\r\n            </div>\r\n            <div className={darkMode?'media-card-main-player-dark':\"media-card-main-player\"}>\r\n              <meting-js \r\n                ref={aplayerRef}\r\n                auto={MUSIC_URL}\r\n                theme=\"#67abff\"\r\n                volume={0.5}\r\n                IrcType={IRC_TYPE}\r\n              />\r\n            </div>\r\n\r\n            <div className={darkMode?'media-title-dark':'media-title'}>\r\n              üì∫ËøúÂè§ËßÜÈ¢ë\r\n            </div>\r\n            <div className='media-card-main-video'>\r\n              <iframe \r\n                src={BILIBILI_VIDEO_URL}\r\n                scrolling=\"no\" \r\n                frameBorder=\"no\" \r\n                allowFullScreen={true}\r\n                >\r\n              </iframe>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Media","aplayerRef","useRef","effectRan","darkMode","useAppSelector","state","useEffect","current","aplayerInstance","checkAPlayerInstance","aplayer","setTimeout","destroy","_jsxs","className","children","_jsx","PageTitle","title","Card","ref","auto","MUSIC_URL","theme","volume","IrcType","IRC_TYPE","src","BILIBILI_VIDEO_URL","scrolling","frameBorder","allowFullScreen"],"sourceRoot":""}