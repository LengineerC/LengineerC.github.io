{"version":3,"file":"static/js/738.6fe76471.chunk.js","mappings":"4HAce,SAASA,EAAIC,GAAwF,IAAvF,MAACC,GAAM,EAAK,SAACC,EAAQ,UAACC,EAAU,OAAM,QAACC,EAAO,QAACC,EAAQ,EAAC,WAACC,EAAU,SAACC,GAAgBP,EAc/G,OACEQ,EAAAA,EAAAA,KAAA,OACAL,UAAS,GAAAM,OAAKR,EAAM,kBAAkB,YAAW,KAAAQ,OAAIN,EAAS,KAAAM,OAAIF,EAAS,iBAAiB,IAC5FG,MAAO,CACLC,gBAAgB,OAADF,OAAQL,EAAO,KAC9BC,QAAQ,GAADI,OAAIJ,GACXC,WAAW,GAADG,OAAIH,IACdJ,SAICA,GAGP,C,gHCvBA,MAAMU,EAAS,IAAIC,EAAAA,IACjBC,EAAAA,EAAAA,GAAgB,CACdC,WAAY,iBACZC,SAAAA,CAAUC,EAAMC,EAAMC,GACpB,MAAMC,EAAWC,EAAAA,EAAKC,YAAYJ,GAAQA,EAAO,YAIjD,OAHuBG,EAAAA,EAAKL,UAAUC,EAAM,CAAEG,aAAYG,KAI5D,KAkBW,SAASC,EAAUxB,GAA2D,IAA1D,SAAEyB,EAAQ,MAACC,EAAM,IAAG,iBAACC,EAAgB,SAACpB,GAAiBP,EACxF,MAAO4B,EAASC,IAAcC,EAAAA,EAAAA,UAAc,IA+B5C,OA7BAC,EAAAA,EAAAA,YAAU,KAER,IAAIC,EAA0BP,EAASQ,QAAQ,oBAAqB,IAEpE,GAAIN,GAA+B,KAAXF,EAAe,CAErC,IAAIS,EAAYF,EAAgBC,QAAQ,WAAY,IAGhDC,EAAUC,OAAST,IACrBQ,EAAYA,EAAUE,UAAU,EAAGV,GAAS,OAI9CG,EAAWK,EACb,KAAO,CAIL,IAAIG,EAAOzB,EAAO0B,MAAMN,GAMxBH,EAAWQ,EACb,IACC,CAACZ,EAAUC,EAAOC,KAGnBnB,EAAAA,EAAAA,KAAA,OAAKL,UAAWwB,EAAiB,GAAG,GAADlB,OAAIF,EAAS,qBAAqB,iBAAkBL,SACpFyB,GACCnB,EAAAA,EAAAA,KAAA,OAAAN,SAAM0B,KAENpB,EAAAA,EAAAA,KAAA,OAAK+B,wBAAyB,CAAEC,OAAQZ,MAIhD,CAxDAhB,EAAO6B,KAAIC,EAAAA,EAAAA,K,kDCzBI,SAASC,EAAS3C,GAAoB,IAAnB,MAAE4C,GAAc5C,EAChD,OACEQ,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAA3C,UACEM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYD,SACxB0C,KAIT,C,iSCgBe,SAASE,IACtB,MAAOrB,EAASsB,IAAajB,EAAAA,EAAAA,UAAiB,IACxCkB,GAAYC,EAAAA,EAAAA,QAAuB,MAEnC1C,GAAS2C,EAAAA,EAAAA,IAAeC,GAAOA,EAAM5C,WACrC6C,GAAeF,EAAAA,EAAAA,IAAeC,GAAOA,EAAMC,kBAejDrB,EAAAA,EAAAA,YAAU,KAMRsB,EAAAA,EAAMC,IAAI,eACTC,MAAKC,IACJ,MAAM,KAACC,GAAMD,EACbT,EAAYU,EAAK,IAChBC,OAAMC,IACPC,QAAQC,IAAIF,EAAI,IAOlB,MAAMG,EAAYd,EAAYe,QACxBC,EAASC,EAAAA,GAAaH,GAI5BI,EAAeF,EAAS,GAMxB,IAEF,MAAME,EAAgBF,IACpB,IAEIG,EAAO,CACTC,QAAQ,CACNC,OAAO,OACPC,UAAU,CACRC,WAAW,gBAOfC,OAAQ,CACN,CACEC,KAAM,aACNC,KAAM,MACNC,OAAQ,MACRlB,KA/DsBmB,MAC5B,IAAInB,EAAK,GAST,OANAA,EAAKoB,OAAOC,KAAK1B,GAAgB2B,KAAIC,IAC5B,CACLP,KAAKO,EACLzD,MAAM6B,EAAe4B,GAAK7C,WAGvBsB,CAAI,EAmCQmB,GAmBbK,MAAM,CACJC,MAAM,GAADzE,OAAIF,EAAS,YAAY,aAC9BgE,WAAW,cACXY,WAAW,OACXC,SAAS,MAEXC,SAAU,CACRC,UAAW,CACTC,WAAY,GACZC,cAAe,EACfC,YAAa,0BAMvBzB,EAAS0B,UAAUvB,EAAO,EAG5B,OACEwB,EAAAA,EAAAA,MAAA,OAAKxF,UAAU,YAAWD,SAAA,EACxBM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBD,UAC9BM,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CAACC,MAAM,aAGnBpC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAoBO,MAAO,CAACkF,UAAU,QAAQ1F,UAC3DM,EAAAA,EAAAA,KAACT,EAAAA,EAAI,CAACQ,SAAUA,EAASL,UACvByF,EAAAA,EAAAA,MAAA,OAAKxF,UAAU,aAAYD,SAAA,EACzBM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcD,UAC3BM,EAAAA,EAAAA,KAAA,OAAKqF,IAAKC,OAGZH,EAAAA,EAAAA,MAAA,OAAKxF,UAAU,gBAAeD,SAAA,EAC5BM,EAAAA,EAAAA,KAAA,OAAKL,UAAWI,EAAS,2BAA2B,sBAAsBL,SACvE6F,EAAAA,MAGHvF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qBAAoBD,UACjCM,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CACXjB,SAAUA,EACVkB,SAAUA,EACVE,kBAAkB,OAIpBnB,EAAAA,EAAAA,KAAA,OAAKL,UAAWI,EAAS,yBAAyB,oBAAoBL,SAAC,0CAIvEM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,cAAaD,UAC1BM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAmB6F,IAAKhD,kBAQvD,CA1IAiB,EAAAA,EAAY,CACVgC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,G","sources":["components/Card/index.tsx","components/MDRenderer/index.tsx","components/PageTitle/index.tsx","pages/About/index.tsx"],"sourcesContent":["// import {useState, useEffect} from 'react'\r\n// import store from '../../redux/store'\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n  scale?:boolean,\r\n  className?:\"aside-card\"|\"card\"\r\n  children?:React.ReactNode,\r\n  bgImage?:string,\r\n  opacity?:number,\r\n  background?:string,\r\n  darkMode:boolean,\r\n}\r\n\r\nexport default function Card({scale=false,children,className=\"card\",bgImage,opacity=1,background,darkMode}: Props) {\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n\r\n  // useEffect(()=>{\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {darkMode}=store.getState();\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n\r\n  return (\r\n    <div \r\n    className={`${scale?'card-main-scale':'card-main'} ${className} ${darkMode?'card-main-dark':\"\"}`}\r\n    style={{\r\n      backgroundImage:`url(${bgImage})`,\r\n      opacity:`${opacity}`,\r\n      background:`${background}`\r\n    }}\r\n    >\r\n      {/* <div className='card-main-text-container'>\r\n      </div> */}\r\n      {children}\r\n    </div>\r\n  )\r\n}","import {useEffect, useState} from 'react'\r\nimport { Marked } from 'marked'\r\nimport { markedHighlight } from 'marked-highlight'\r\nimport hljs from 'highlight.js'\r\nimport markedKatex from 'marked-katex-extension'\r\n\r\nimport \"highlight.js/scss/atom-one-dark.scss\"\r\nimport \"./index.scss\"\r\n// import store from '../../redux/store'\r\n// import { saveSelectedPostHtml } from '../../redux/actions'\r\n// import './hljs.scss'\r\n\r\ntype Props = {\r\n  markdown: string,\r\n  limit?:number,\r\n  showLimitContent:boolean,\r\n  darkMode:boolean,\r\n}\r\n\r\nconst marked = new Marked(\r\n  markedHighlight({\r\n    langPrefix: 'hljs language-',\r\n    highlight(code, lang, info) {\r\n      const language = hljs.getLanguage(lang) ? lang : 'plaintext';\r\n      const highlightedCode= hljs.highlight(code, { language }).value;\r\n      // return `<pre data-lang=\"${language}\"><code class=\"hljs ${language}\">${highlightedCode}</code></pre>`;\r\n      // return `<code class=\"hljs ${language}>${highlightedCode}</code>`\r\n      return highlightedCode;\r\n    }\r\n  }),\r\n);\r\nmarked.use(markedKatex());\r\n\r\n// 用于自定义目录跳转，使用markdown-navbar可删\r\n// let headerIndex = 0;\r\n// marked.use({\r\n//   extensions:[\r\n//     {\r\n//       name:\"heading\",\r\n//       renderer(token){\r\n//         return `<h${token.depth} id=\"heading-${headerIndex++}\">${token.text}</h${token.depth}>`\r\n//       }\r\n//     },\r\n//   ]\r\n// })\r\n\r\nexport default function MDRenderer({ markdown,limit=100,showLimitContent,darkMode }: Props) {\r\n  const [content, setContent] = useState<any>('');\r\n\r\n  useEffect(() => {\r\n    // 去掉 yaml front matter\r\n    let cleanedMarkdown: string = markdown.replace(/^-{3}[\\s\\S]*?-{3}/, '');\r\n    \r\n    if (showLimitContent && markdown!=='') {\r\n      // 移除 HTML 标签\r\n      let plainText = cleanedMarkdown.replace(/<[^>]*>/g, '');\r\n      // console.log(plainText);\r\n\r\n      if (plainText.length > limit) {\r\n        plainText = plainText.substring(0, limit) + '...';\r\n        // console.log(plainText);\r\n        \r\n      }\r\n      setContent(plainText);\r\n    } else {\r\n      // pre标签添加hljs标签，匹配自定义hljs样式\r\n      // let html = marked.parse(cleanedMarkdown).toString().replace(/<pre>/g,\"<pre id='hljs'>\");\r\n      \r\n      let html = marked.parse(cleanedMarkdown) as string;\r\n      // console.log(html);\r\n\r\n      //如果自实现目录取消注释\r\n      // store.dispatch(saveSelectedPostHtml(html));\r\n      \r\n      setContent(html);\r\n    }\r\n  }, [markdown, limit, showLimitContent]);\r\n\r\n  return (\r\n    <div className={showLimitContent?\"\":`${darkMode?'markdown-body-dark':'markdown-body'}`}>\r\n      {showLimitContent ? (\r\n        <div>{content}</div> \r\n      ) : (\r\n        <div dangerouslySetInnerHTML={{ __html: content }} /> \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./index.scss\"\r\n\r\ntype Props = {\r\n  title: string\r\n}\r\n\r\nexport default function PageTitle({ title }: Props) {\r\n  return (\r\n    <>\r\n      <div className='page-title'>\r\n        {title}\r\n      </div>\r\n    </>\r\n  )\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle\"\r\nimport Card from \"../../components/Card\"\r\nimport avatar from \"../../assets/image/avatar.webp\";\r\nimport { AUTHOR } from \"../../utils/constants\";\r\nimport axios from \"axios\";\r\n// import store from \"../../redux/store\";\r\nimport MDRenderer from \"../../components/MDRenderer\";\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent\r\n} from 'echarts/components';\r\nimport { PieChart } from 'echarts/charts';\r\nimport { LabelLayout } from 'echarts/features';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\n\r\nimport \"./index.scss\"\r\n\r\necharts.use([\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  PieChart,\r\n  CanvasRenderer,\r\n  LabelLayout\r\n]);\r\n\r\nexport default function About() {\r\n  const [markdown,setMarkdown]=useState<string>('');\r\n  const pieChartRef=useRef<HTMLDivElement>(null);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n  const categoriesList=useAppSelector(state=>state.categoriesList);\r\n\r\n  const getFormatCategoriesData=()=>{\r\n    let data=[];\r\n    // const {categoriesList}=store.getState();\r\n\r\n    data=Object.keys(categoriesList).map(key=>{\r\n      return({\r\n        name:key,\r\n        value:categoriesList[key].length,\r\n      })\r\n    });\r\n    return data;\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // })\r\n\r\n    axios.get('/aboutme.md')\r\n    .then(res=>{\r\n      const {data}=res;\r\n      setMarkdown(data);\r\n    }).catch(err=>{\r\n      console.log(err);\r\n    });\r\n\r\n    // console.log(categoriesData);\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   categoriesData=getFormatCategoriesData();\r\n    // });\r\n    const pieChartDom=pieChartRef.current;\r\n    const pieChart=echarts.init(pieChartDom);\r\n    // window.addEventListener('resize',()=>{\r\n    //   pieChart.resize();\r\n    // })\r\n    renderPieChart(pieChart);\r\n    \r\n    // return ()=>{\r\n    //   unsubscribe();\r\n    // }\r\n\r\n  },[])\r\n\r\n  const renderPieChart=(pieChart:any)=>{\r\n    let categoriesData=getFormatCategoriesData();\r\n\r\n    let option={\r\n      tooltip:{\r\n        triger:\"item\",\r\n        textStyle:{\r\n          fontFamily:\"CustomFont1\",\r\n        }\r\n      },\r\n      // legend: {\r\n      //   orient: 'vertical',\r\n      //   left: 'left'\r\n      // },\r\n      series: [\r\n        {\r\n          name: 'Categories',\r\n          type: 'pie',\r\n          radius: '80%',\r\n          data: categoriesData,\r\n          label:{\r\n            color:`${darkMode?\"#ffffffaa\":\"#000000aa\"}`,\r\n            fontFamily:\"CustomFont1\",\r\n            fontWeight:'bold',\r\n            fontSize:\"15\"\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    pieChart.setOption(option);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-main\">\r\n      <div className=\"page-main-title\">\r\n        <PageTitle title=\"About\" />\r\n      </div>\r\n\r\n      <div className=\"page-main-content\" style={{marginTop:\"15vh\"}}>\r\n        <Card darkMode={darkMode}>\r\n          <div className=\"about-main\">\r\n            <div className=\"about-avatar\">\r\n              <img src={avatar}/>\r\n            </div>\r\n\r\n            <div className=\"about-content\">\r\n              <div className={darkMode?\"about-content-title-dark\":\"about-content-title\"}>\r\n                {AUTHOR}\r\n              </div>\r\n\r\n              <div className=\"about-content-text\">\r\n                <MDRenderer\r\n                darkMode={darkMode}\r\n                markdown={markdown}\r\n                showLimitContent={false}\r\n                />\r\n              </div>\r\n\r\n              <div className={darkMode?\"about-chart-title-dark\":\"about-chart-title\"}>\r\n                文章数据列表\r\n              </div>\r\n\r\n              <div className=\"about-chart\">\r\n                <div className=\"about-chart-item\" ref={pieChartRef}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":["Card","_ref","scale","children","className","bgImage","opacity","background","darkMode","_jsx","concat","style","backgroundImage","marked","Marked","markedHighlight","langPrefix","highlight","code","lang","info","language","hljs","getLanguage","value","MDRenderer","markdown","limit","showLimitContent","content","setContent","useState","useEffect","cleanedMarkdown","replace","plainText","length","substring","html","parse","dangerouslySetInnerHTML","__html","use","markedKatex","PageTitle","title","_Fragment","About","setMarkdown","pieChartRef","useRef","useAppSelector","state","categoriesList","axios","get","then","res","data","catch","err","console","log","pieChartDom","current","pieChart","echarts","renderPieChart","option","tooltip","triger","textStyle","fontFamily","series","name","type","radius","getFormatCategoriesData","Object","keys","map","key","label","color","fontWeight","fontSize","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","_jsxs","marginTop","src","avatar","AUTHOR","ref","TitleComponent","TooltipComponent","LegendComponent","PieChart","CanvasRenderer","LabelLayout"],"sourceRoot":""}