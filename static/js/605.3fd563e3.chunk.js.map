{"version":3,"file":"static/js/605.3fd563e3.chunk.js","mappings":"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","sources":["components/Category/index.tsx","components/MDRenderer/index.tsx","components/Tag/index.tsx","pages/Post/TOC/index.tsx","pages/Post/LockCard/index.tsx","pages/Post/index.tsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n    category:string,\r\n}\r\n\r\nexport default function Category({category}: Props) {\r\n  return (\r\n    <div className='category-main'>\r\n      <NavLink to={`/categories/${category}`} style={{ textDecoration: \"none\" }}>\r\n        <div className='category-container'>\r\n          <FontAwesomeIcon icon={faBookmark}/>\r\n          <span style={{marginLeft:\"5px\"}}>{category}</span>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","import {useEffect, useState} from 'react'\r\nimport { Marked } from 'marked'\r\nimport { markedHighlight } from 'marked-highlight'\r\nimport hljs from 'highlight.js'\r\nimport markedKatex from 'marked-katex-extension'\r\n\r\nimport \"highlight.js/scss/atom-one-dark.scss\"\r\nimport \"./index.scss\"\r\n// import store from '../../redux/store'\r\n// import { saveSelectedPostHtml } from '../../redux/actions'\r\n// import './hljs.scss'\r\n\r\ntype Props = {\r\n  markdown: string,\r\n  limit?:number,\r\n  showLimitContent:boolean,\r\n  darkMode:boolean,\r\n}\r\n\r\nconst marked = new Marked(\r\n  markedHighlight({\r\n    langPrefix: 'hljs language-',\r\n    highlight(code, lang, info) {\r\n      const language = hljs.getLanguage(lang) ? lang : 'plaintext';\r\n      const highlightedCode= hljs.highlight(code, { language }).value;\r\n      // return `<pre data-lang=\"${language}\"><code class=\"hljs ${language}\">${highlightedCode}</code></pre>`;\r\n      // return `<code class=\"hljs ${language}>${highlightedCode}</code>`\r\n      return highlightedCode;\r\n    }\r\n  }),\r\n);\r\nmarked.use(markedKatex());\r\n\r\n// 用于自定义目录跳转，使用markdown-navbar可删\r\n// let headerIndex = 0;\r\n// marked.use({\r\n//   extensions:[\r\n//     {\r\n//       name:\"heading\",\r\n//       renderer(token){\r\n//         return `<h${token.depth} id=\"heading-${headerIndex++}\">${token.text}</h${token.depth}>`\r\n//       }\r\n//     },\r\n//   ]\r\n// })\r\n\r\nexport default function MDRenderer({ markdown,limit=100,showLimitContent,darkMode }: Props) {\r\n  const [content, setContent] = useState<any>('');\r\n\r\n  useEffect(() => {\r\n    // 去掉 yaml front matter\r\n    let cleanedMarkdown: string = markdown.replace(/^-{3}[\\s\\S]*?-{3}/, '');\r\n    \r\n    if (showLimitContent && markdown!=='') {\r\n      // 移除 HTML 标签\r\n      let plainText = cleanedMarkdown.replace(/<[^>]*>/g, '');\r\n      // console.log(plainText);\r\n\r\n      if (plainText.length > limit) {\r\n        plainText = plainText.substring(0, limit) + '...';\r\n        // console.log(plainText);\r\n        \r\n      }\r\n      setContent(plainText);\r\n    } else {\r\n      // pre标签添加hljs标签，匹配自定义hljs样式\r\n      // let html = marked.parse(cleanedMarkdown).toString().replace(/<pre>/g,\"<pre id='hljs'>\");\r\n      \r\n      let html = marked.parse(cleanedMarkdown) as string;\r\n      // console.log(html);\r\n\r\n      //如果自实现目录取消注释\r\n      // store.dispatch(saveSelectedPostHtml(html));\r\n      \r\n      setContent(html);\r\n    }\r\n  }, [markdown, limit, showLimitContent]);\r\n\r\n  return (\r\n    <div className={showLimitContent?\"\":`${darkMode?'markdown-body-dark':'markdown-body'}`}>\r\n      {showLimitContent ? (\r\n        <div>{content}</div> \r\n      ) : (\r\n        <div dangerouslySetInnerHTML={{ __html: content }} /> \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nimport \"./index.scss\"\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ntype Props = {\r\n  tag: string,\r\n  reload?:boolean,\r\n}\r\n\r\nexport default function Tag({ tag,reload=false }: Props) {\r\n  const [bgColor,setBgColor]=useState<number>(0)\r\n\r\n  useEffect(()=>{\r\n    let color=Math.floor(Math.random()*3);\r\n    // console.log(color);\r\n    setBgColor(color)\r\n    \r\n  },[])\r\n\r\n  const colorChooser=(color:number):string=>{\r\n    let style=\"tag-bg-color-\";\r\n    return style+color;\r\n  }\r\n\r\n  const reloadPage=()=>{\r\n    if(reload){\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"tag-main\">\r\n      <NavLink onClick={reloadPage} to={`/tags/${tag}`} style={{ textDecoration: \"none\" }}>\r\n        <div className={colorChooser(bgColor)}>\r\n          {tag}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","// import { useEffect, useRef, useState } from 'react'\r\nimport Card from '../../../components/Card'\r\n// import store from '../../../redux/store'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n// import { TOC_HEADING_CONFIG, MAX_TOC_HEADING } from '../../../utils/constants'\r\nimport MarkdownNavbar from 'markdown-navbar'\r\nimport { ConfigProvider, Drawer } from 'antd'\r\nimport { useEffect, useState } from 'react'\r\nimport { MOBILE_MAX_WIDTH } from '../../../utils/constants'\r\nimport store from '../../../redux/store'\r\nimport { useAppSelector } from '../../../redux/hooks'\r\n\r\nimport \"./index.scss\"\r\n\r\n//#region 手动实现有bug\r\n// type Props={\r\n//   markdown:'';\r\n// }\r\n\r\n// type TOCItem={\r\n//   level: number,\r\n//   text: string,\r\n//   anchor: string,\r\n// }\r\n\r\n// export default function TOC() {\r\n//   const [TOCItems,setTOCItems]=useState<TOCItem[]>([]);\r\n//   const [activeId,setActiveId]=useState<string>();\r\n//   // const {activeId}=useHeadingObserver();\r\n\r\n//   const generateToc=(html:string)=>{\r\n//     const parser=new DOMParser();\r\n//     const doc=parser.parseFromString(html,\"text/html\");\r\n//     // console.log(doc);\r\n//     const headings=doc.querySelectorAll(TOC_HEADING_CONFIG);\r\n//     const toc:TOCItem[]=[];\r\n//     headings.forEach(heading=>{\r\n//       const level=parseInt(heading.tagName[1]);\r\n//       const text=heading.textContent || '';\r\n//       const anchor=heading.id;\r\n//       toc.push({level,text,anchor});\r\n//     })\r\n//     // console.log(headings);\r\n//     return toc;\r\n//   }\r\n\r\n//   useEffect(()=>{\r\n//     //调用两次防止bug\r\n//     const {selectedPostHtmlReducer}=store.getState();\r\n//     const toc=generateToc(selectedPostHtmlReducer);\r\n//     setTOCItems(toc);\r\n    \r\n//     const unsubscribe=store.subscribe(()=>{\r\n//       const {selectedPostHtmlReducer}=store.getState();\r\n//       if(selectedPostHtmlReducer!==''){\r\n//         const toc=generateToc(selectedPostHtmlReducer);\r\n//         setTOCItems(toc);\r\n//       }\r\n//     })\r\n\r\n//     return ()=>{\r\n//       unsubscribe();\r\n//     }\r\n//   },[])\r\n\r\n//   useEffect(() => {\r\n//     const observer = new IntersectionObserver(entries => {\r\n//       const visibleEntries = entries.filter(entry => entry.isIntersecting);\r\n//       if (visibleEntries.length > 0) {\r\n//         // Sort by intersection ratio\r\n//         visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\r\n//         console.log(visibleEntries);\r\n        \r\n//         setActiveId(visibleEntries[0].target.id);\r\n//       }\r\n//     }, { \r\n//       threshold: [0.1,0.5,1.0],\r\n//      });\r\n\r\n//     if (TOCItems.length > 0) {\r\n//       TOCItems.forEach(item => {\r\n//         const element = document.getElementById(item.anchor);\r\n//         if (element) {\r\n//           observer.observe(element);\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     return () => {\r\n//       TOCItems.forEach(item => {\r\n//         const element = document.getElementById(item.anchor);\r\n//         if (element) {\r\n//           observer.unobserve(element);\r\n//         }\r\n//       });\r\n//     };\r\n//   }, [TOCItems]);\r\n\r\n//   const scrollToHeading=(id:string)=>{\r\n//     let element=document.getElementById(id);\r\n//     element?.scrollIntoView({behavior:\"smooth\"});\r\n//     setActiveId(id);\r\n//   }\r\n\r\n//   const createTOC=()=>{\r\n//     if(TOCItems.length!==0){\r\n//       return TOCItems.map(item=>{\r\n//         return (\r\n//           <li key={item.anchor} style={{marginLeft: (item.level-MAX_TOC_HEADING)*10}}>\r\n//             <p \r\n//             onClick={()=>scrollToHeading(item.anchor)}\r\n//             className={activeId===item.anchor?\"active\":\"\"}\r\n//             >\r\n//               {item.text}\r\n//             </p>          \r\n//           </li>\r\n//         )\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <Card className=\"aside-card\">\r\n//       <div className='toc-header'>\r\n//         <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n//         <hr/>\r\n//       </div>\r\n//       <div className='toc-content'>\r\n//         <ul>\r\n//           {createTOC()}\r\n//         </ul>\r\n//       </div>\r\n\r\n\r\n//     </Card>\r\n//   )\r\n// }\r\n//#endregion\r\n\r\ntype Props={\r\n  markdown:string;\r\n  showDrawer:boolean,\r\n  callbackOnClose:Function,\r\n}\r\n\r\nexport default function TOC({markdown, showDrawer,callbackOnClose}:Props) {\r\n  const [open,setOpen]=useState<boolean>(showDrawer);\r\n  const [drawerVisible,setDrawerVisible]=useState<boolean>(window.innerWidth<=MOBILE_MAX_WIDTH);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  useEffect(()=>{\r\n    setOpen(showDrawer);\r\n  },[showDrawer])\r\n  \r\n  const onClose=()=>{\r\n    setOpen(false);\r\n    callbackOnClose();\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // const unsubscribe=store.subscribe(()=>{\r\n    //   const {darkMode}=store.getState();\r\n    //   setIsDarkMode(darkMode);\r\n    // })\r\n\r\n    const handleResize=()=>{\r\n      setDrawerVisible(window.innerWidth<=MOBILE_MAX_WIDTH);\r\n    }\r\n\r\n    window.addEventListener(\"resize\",handleResize);\r\n\r\n    return ()=>{\r\n      // unsubscribe();\r\n      window.removeEventListener(\"resize\",handleResize);\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n\r\n  },[darkMode])\r\n\r\n  const getColorBgElevated=():string=>{\r\n    return darkMode?\"#1c1c2c99\":\"#ffffffcc\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !drawerVisible ?(\r\n        <Card className=\"aside-card\" darkMode={darkMode}>\r\n          <div className={darkMode?\"toc-header-dark\":'toc-header'}>\r\n            <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n            <hr/>\r\n          </div>\r\n          <div className={darkMode?\"toc-content-dark\":'toc-content'}>\r\n              <MarkdownNavbar \r\n              // onNavItemClick={(event,element,hash)=>handleClick(event,element,hash)} \r\n              source={markdown} \r\n              headingTopOffset={60}\r\n              ordered={true}\r\n              />\r\n          </div>\r\n\r\n        </Card>):(\r\n          <div className='toc-drawer-block'>\r\n          <ConfigProvider\r\n          theme={{\r\n            token:{\r\n              padding:0,\r\n              paddingLG:0,\r\n              paddingXS:0,\r\n              colorBgElevated:getColorBgElevated()\r\n            }\r\n          }}\r\n          >\r\n            <Drawer\r\n            className={darkMode?\"toc-drawer-dark\":'toc-drawer'}\r\n            placement=\"right\"\r\n            open={open}\r\n            onClose={onClose}\r\n            width={250}\r\n            closeIcon={null}\r\n            // destroyOnClose  //不加此项测试运行手机端不显示目录时滑动过快报错，正式运行不影响，但性能会受损 \r\n            >\r\n              <div className={darkMode?\"toc-header-dark\":'toc-header'}>\r\n                <FontAwesomeIcon icon={faList} />&nbsp;目录\r\n                <hr/>\r\n              </div>\r\n              <div className='toc-content'>\r\n                <MarkdownNavbar \r\n                // onNavItemClick={(event,element,hash)=>handleClick(event,element,hash)} \r\n                source={markdown} \r\n                headingTopOffset={60}\r\n                ordered={true}\r\n                />\r\n              </div>\r\n\r\n            </Drawer>\r\n          </ConfigProvider>\r\n        </div>)\r\n      }\r\n    </>\r\n  )\r\n}","import { Button, ConfigProvider, Input, message, Space } from \"antd\"\r\nimport Card from \"../../../components/Card\"\r\nimport { useRef, useState, useEffect } from \"react\"\r\n\r\nimport \"./index.scss\"\r\nimport store from \"../../../redux/store\"\r\nimport { useAppSelector } from \"../../../redux/hooks\"\r\n\r\ntype Props = {\r\n  onClose:Function\r\n  password:string\r\n}\r\n\r\nexport default function LockCard({onClose,password}: Props) {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  const inputRef=useRef<any>(null);\r\n\r\n  const verifyPassword=()=>{\r\n    const inputContent=inputRef.current?.input.value;\r\n    if(inputContent==password){\r\n      onClose();\r\n    }else{\r\n      messageApi.open({\r\n        type:\"error\",\r\n        content:\"密码错误！\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const getToken=()=>{\r\n    if(darkMode){\r\n      return ({\r\n        colorPrimary:'#393958',\r\n      })\r\n    }else{\r\n      return ({\r\n        colorPrimary:\"#4086db\"\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card darkMode={darkMode}>\r\n      <div className=\"lock-card-main\">\r\n        <div className={darkMode?\"lock-card-title-dark\":\"lock-card-title\"}>\r\n          请输入密码\r\n        </div>\r\n\r\n        <div className=\"wave-divider\"/>\r\n\r\n        <div className=\"lock-card-input-line\">\r\n          <ConfigProvider\r\n          theme={{\r\n            components:{\r\n              Input:{\r\n                activeBg:\"#f6f6f6aa\"\r\n              },\r\n              Message:{\r\n                contentBg:\"#ffffffda\"\r\n              }\r\n            },\r\n            token:getToken()\r\n          }}\r\n          >\r\n            {contextHolder}\r\n            <Space.Compact style={{width:\"100%\"}}>\r\n              <Input ref={inputRef} type=\"password\" placeholder=\"password\"/>\r\n              <Button onClick={verifyPassword} type=\"primary\">Submit</Button>\r\n            </Space.Compact>\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Card from '../../components/Card';\r\nimport MDRenderer from '../../components/MDRenderer';\r\n// import store from '../../redux/store';\r\nimport { ConfigProvider, FloatButton, Skeleton, message } from 'antd';\r\nimport { PostConfig } from '../../utils/types';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport { \r\n  UserOutlined, \r\n  ClockCircleOutlined, \r\n  FileWordOutlined,\r\n  CopyrightOutlined, \r\n  LinkOutlined, \r\n  CopyFilled,\r\n  UnorderedListOutlined, } from '@ant-design/icons';\r\nimport Tag from '../../components/Tag';\r\nimport Category from '../../components/Category';\r\nimport { AUTHOR, DEFAULT_SHOW_TOC, DEPLOY_ON_GITHUB_PAGES } from '../../utils/constants';\r\nimport TOC from './TOC';\r\nimport { clearSelectedPostConfig, clearSelectedPostHtml } from '../../redux/actions';\r\nimport LockCard from './LockCard';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport store from '../../redux/store';\r\nimport './index.scss'\r\n\r\nexport default function Post() {\r\n  const {id}=useParams();\r\n  const [markdown,setMarkdown]=useState<string>(\"\");\r\n  const [postConfig,setPostConfig]=useState<PostConfig>();\r\n  const [mdLen,setMdLen]=useState<number>(0);\r\n  const [locked,setLocked]=useState<boolean>(false);\r\n  const [showTOC,setShowTOC]=useState<boolean>(DEFAULT_SHOW_TOC);\r\n  //显示移动端TOC Drawer\r\n  const [showTOCDrawer,setShowTOCDrawer]=useState<boolean>(false);\r\n\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [url,setUrl]=useState<string>(window.location.href);\r\n\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n  const dispatch=useAppDispatch();\r\n  const selectedPostConfig=useAppSelector(state=>state.selectedPostConfig);\r\n\r\n  const navigate=useNavigate();\r\n\r\n  useEffect(()=>{\r\n    setPostConfig(selectedPostConfig as PostConfig);\r\n\r\n  },[selectedPostConfig])\r\n\r\n  useEffect(()=>{\r\n    if(!id){\r\n      navigate('/');\r\n    }\r\n\r\n    axios.get(`/posts/${id}.md`)\r\n    .then(response=>{\r\n      // console.log(response);\r\n      setMarkdown(response.data);\r\n      setMdLen(response.data.length);\r\n      \r\n      const {postList}=store.getState();\r\n      let initPostConfig={} as PostConfig;\r\n      for(let pc of postList){\r\n        if(pc.id===id){\r\n          initPostConfig=pc;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      setLocked(initPostConfig.lock);\r\n      setPostConfig(initPostConfig);\r\n    })\r\n    .catch(err=>{\r\n      console.log(\"Post: 文章获取失败\",err);\r\n      console.log(window.location.pathname);\r\n      \r\n      navigate(`/articles/${id}`);\r\n    });\r\n\r\n    //处理因锚点导致的复制链接出错的问题\r\n    if(!DEPLOY_ON_GITHUB_PAGES){\r\n      const url=window.location.href;\r\n      const hashIndex=url.indexOf('#');\r\n      if(hashIndex!==-1){\r\n        const newUrl=url.substring(0,hashIndex);\r\n        setUrl(newUrl);\r\n      }\r\n    }\r\n\r\n    return ()=>{\r\n      // unsubscribe();\r\n      dispatch(clearSelectedPostConfig());\r\n      dispatch(clearSelectedPostHtml());\r\n    }\r\n\r\n  },[])\r\n\r\n  const createTags=()=>{\r\n    if(postConfig){\r\n      const {tags=[]}=postConfig;\r\n      return tags.map((item,index)=>{\r\n        return(\r\n          <div key={index} className='post-page-card-header-symbol-tag-block'>\r\n            <Tag tag={item} />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const createCategories=()=>{\r\n    if(postConfig){\r\n      const {categories=[]}=postConfig;\r\n      return categories.map((item,index)=>{\r\n        return(\r\n          <div key={index} className='post-page-card-header-symbol-category-block'>\r\n            <Category category={item} />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const copyLink=async ()=>{\r\n    const link=url;\r\n    try{\r\n      if(navigator.clipboard && navigator.clipboard.writeText){\r\n        await navigator.clipboard.writeText(link);\r\n        messageApi.open({\r\n          type:\"success\",\r\n          content:\"已复制到剪贴板\",\r\n        })\r\n      }else{\r\n        const textArea = document.createElement(\"textarea\");\r\n        textArea.value = link;\r\n        \r\n        textArea.style.position = \"fixed\"; \r\n        textArea.style.top = \"-9999px\";\r\n        textArea.style.left = \"-9999px\";\r\n        \r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        \r\n        try {\r\n          const successful = document.execCommand(\"copy\");\r\n          if (successful) {\r\n            messageApi.open({\r\n              type: \"success\",\r\n              content: \"已复制到剪贴板\",\r\n            });\r\n          } else {\r\n            throw new Error(\"复制失败\");\r\n          }\r\n        } catch (err) {\r\n          message.error(\"复制链接出错\");\r\n          console.log(\"复制链接出错\", err);\r\n        }\r\n  \r\n        document.body.removeChild(textArea);\r\n      }\r\n      \r\n    }catch(e){\r\n      message.error(\"复制链接出错\");\r\n      console.log(\"复制链接出错\",e);\r\n    }\r\n  }\r\n\r\n  const handleShowTOC=()=>{\r\n    setShowTOC(!showTOC);\r\n    setShowTOCDrawer(!showTOCDrawer);\r\n  }\r\n\r\n  const callbackCloseDrawer=()=>{\r\n    setShowTOCDrawer(false);\r\n  }\r\n\r\n  const getTocBtnToken=()=>{\r\n    let colorBgElevated=darkMode?'#46466c7b':'#ffffff7b';\r\n    let colorFillContent=darkMode?'#686894bb':'#ffffffbb';\r\n    let colorText='#ffffff99';\r\n    let token:any={\r\n      colorBgElevated,\r\n      colorFillContent\r\n    };\r\n    if(darkMode){\r\n      if(!token.hasOwnProperty('colorText')){\r\n        token['colorText']=colorText;\r\n      }\r\n    }\r\n    return token;\r\n  }\r\n\r\n  return (\r\n    <div className='post-page-main'>\r\n      <ConfigProvider\r\n      theme={{\r\n        token:{\r\n          colorBgElevated:\"#ffffff80\",\r\n          colorFillContent:\"#ffffffbb\",\r\n        },\r\n        components:{\r\n          Message:{\r\n            contentBg:\"#ffffffda\"\r\n          }\r\n        }\r\n      }}\r\n      >\r\n      {contextHolder}\r\n      {\r\n        postConfig ?\r\n        <>\r\n          <div className='post-page-title'>\r\n            <PageTitle title={postConfig.title}/>\r\n          </div>\r\n\r\n          <div className='post-page-body'>\r\n            {\r\n              !locked?\r\n              <>\r\n                <div className={showTOC?\"post-page-body-content-container-showtoc\":'post-page-body-content-container'}>\r\n                  <Card darkMode={darkMode}>\r\n                    <div className='post-page-card-header'>\r\n                      <div className='post-page-card-header-symbol'>\r\n                        <div className='post-page-card-header-symbol-tags'>\r\n                          {createTags()}\r\n                        </div>\r\n\r\n                        <div className='post-page-card-header-symbol-categories'>\r\n                          {createCategories()}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='post-page-card-header-info'>\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                          <span style={{fontWeight:\"bolder\"}}><UserOutlined/>&nbsp;作者：</span>\r\n                          {postConfig?.author}\r\n                        </div>\r\n\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                        <span style={{fontWeight:\"bold\"}}><ClockCircleOutlined/>&nbsp;发布时间：</span>\r\n                          {postConfig?.time}\r\n                        </div>\r\n\r\n                        <div style={darkMode?{color:\"#ffffffcc\"}:{}}>\r\n                        <span style={{fontWeight:\"bold\"}}><FileWordOutlined />&nbsp;文章字数：</span>\r\n                          {mdLen}\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    \r\n                    <hr className='hr-twill'/>\r\n                    \r\n                    <div className={'post-page-card-container'}>\r\n                      <MDRenderer darkMode={darkMode} markdown={markdown} showLimitContent={false} />\r\n                    </div>\r\n\r\n                    <hr className='hr-twill'/>\r\n\r\n                    <div className={darkMode?'post-page-card-footer-dark':'post-page-card-footer'}>\r\n                      <div style={{marginBottom:\"5px\"}}>\r\n                        <span style={{fontWeight:\"bold\"}}>\r\n                          <LinkOutlined/>文章链接：\r\n                          <CopyFilled className={darkMode?'copy-button-dark':'copy-button'} onClick={copyLink}/>\r\n                        </span>\r\n                        <a href={url}>{url}</a>\r\n                      </div>\r\n                      <div style={{marginBottom:\"5px\"}}>\r\n                        <span style={{fontWeight:\"bold\"}}>\r\n                          <CopyrightOutlined />\r\n                          版权声明：本博客所有文章除特別声明外，均采用 <a href='https://creativecommons.org/licenses/by-nc-sa/4.0/'>CC BY-NC-SA 4.0</a> 许可协议。转载请注明来源 <a href='/'>{AUTHOR}</a> !\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                \r\n                <div \r\n                className={`toc-container ${showTOC?'fade-in':'fade-out'}`} \r\n                // style={showTOC?{}:{display:\"none\"}}\r\n                >\r\n                  <TOC \r\n                  showDrawer={showTOCDrawer} \r\n                  markdown={markdown}\r\n                  callbackOnClose={callbackCloseDrawer}\r\n                  />\r\n                </div>\r\n              </>:<LockCard \r\n                  onClose={()=>{setLocked(false)}}\r\n                  password={postConfig?.password}\r\n                  />\r\n            }\r\n          </div>\r\n        </>:(\r\n          <div className='post-page-body'>\r\n            <Card darkMode={darkMode}>\r\n              <Skeleton active/>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        !locked &&\r\n        <ConfigProvider\r\n        theme={{\r\n          token:getTocBtnToken()\r\n        }}\r\n        >\r\n          <FloatButton \r\n          className='toc-btn' \r\n          icon={<UnorderedListOutlined/>}\r\n          onClick={handleShowTOC}\r\n          />\r\n        </ConfigProvider>\r\n      }\r\n      </ConfigProvider>\r\n    </div>\r\n  )\r\n}"],"names":["Category","_ref","category","_jsx","className","children","NavLink","to","concat","style","textDecoration","_jsxs","FontAwesomeIcon","icon","faBookmark","marginLeft","marked","Marked","markedHighlight","langPrefix","highlight","code","lang","info","language","hljs","getLanguage","value","MDRenderer","markdown","limit","showLimitContent","darkMode","content","setContent","useState","useEffect","cleanedMarkdown","replace","plainText","length","substring","html","parse","dangerouslySetInnerHTML","__html","use","markedKatex","Tag","tag","reload","bgColor","setBgColor","color","Math","floor","random","onClick","reloadPage","window","location","TOC","showDrawer","callbackOnClose","open","setOpen","drawerVisible","setDrawerVisible","innerWidth","MOBILE_MAX_WIDTH","useAppSelector","state","handleResize","addEventListener","removeEventListener","_Fragment","ConfigProvider","theme","token","padding","paddingLG","paddingXS","colorBgElevated","Drawer","placement","onClose","width","closeIcon","faList","MarkdownNavbar","source","headingTopOffset","ordered","Card","LockCard","password","messageApi","contextHolder","message","useMessage","inputRef","useRef","components","Input","activeBg","Message","contentBg","colorPrimary","Space","Compact","ref","type","placeholder","Button","verifyPassword","_inputRef$current","current","input","Post","id","useParams","setMarkdown","postConfig","setPostConfig","mdLen","setMdLen","locked","setLocked","showTOC","setShowTOC","DEFAULT_SHOW_TOC","showTOCDrawer","setShowTOCDrawer","url","setUrl","href","dispatch","useAppDispatch","selectedPostConfig","navigate","useNavigate","axios","get","then","response","data","postList","store","getState","initPostConfig","pc","lock","catch","err","console","log","pathname","DEPLOY_ON_GITHUB_PAGES","hashIndex","indexOf","newUrl","clearSelectedPostConfig","clearSelectedPostHtml","colorFillContent","PageTitle","title","createTags","tags","map","item","index","createCategories","categories","fontWeight","UserOutlined","author","ClockCircleOutlined","time","FileWordOutlined","marginBottom","LinkOutlined","CopyFilled","async","link","navigator","clipboard","writeText","textArea","document","createElement","position","top","left","body","appendChild","focus","select","execCommand","Error","error","removeChild","e","CopyrightOutlined","AUTHOR","callbackCloseDrawer","Skeleton","active","getTocBtnToken","hasOwnProperty","FloatButton","UnorderedListOutlined","handleShowTOC"],"sourceRoot":""}