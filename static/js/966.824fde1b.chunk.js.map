{"version":3,"file":"static/js/966.824fde1b.chunk.js","mappings":"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","sources":["components/Card/index.tsx","components/Category/index.tsx","components/PageTitle/index.tsx","pages/CategoriesPage/index.tsx"],"sourcesContent":["// import {useState, useEffect} from 'react'\r\n// import store from '../../redux/store'\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n  scale?:boolean,\r\n  className?:\"aside-card\"|\"card\"\r\n  children?:React.ReactNode,\r\n  bgImage?:string,\r\n  opacity?:number,\r\n  background?:string,\r\n  darkMode:boolean,\r\n}\r\n\r\nexport default function Card({scale=false,children,className=\"card\",bgImage,opacity=1,background,darkMode}: Props) {\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n\r\n  // useEffect(()=>{\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {darkMode}=store.getState();\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n\r\n  return (\r\n    <div \r\n    className={`${scale?'card-main-scale':'card-main'} ${className} ${darkMode?'card-main-dark':\"\"}`}\r\n    style={{\r\n      backgroundImage:`url(${bgImage})`,\r\n      opacity:`${opacity}`,\r\n      background:`${background}`\r\n    }}\r\n    >\r\n      {/* <div className='card-main-text-container'>\r\n      </div> */}\r\n      {children}\r\n    </div>\r\n  )\r\n}","import { NavLink } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport \"./index.scss\"\r\n\r\ntype Props = {\r\n    category:string,\r\n}\r\n\r\nexport default function Category({category}: Props) {\r\n  return (\r\n    <div className='category-main'>\r\n      <NavLink to={`/categories/${category}`} style={{ textDecoration: \"none\" }}>\r\n        <div className='category-container'>\r\n          <FontAwesomeIcon icon={faBookmark}/>\r\n          <span style={{marginLeft:\"5px\"}}>{category}</span>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}","import \"./index.scss\"\r\n\r\ntype Props = {\r\n  title: string\r\n}\r\n\r\nexport default function PageTitle({ title }: Props) {\r\n  return (\r\n    <>\r\n      <div className='page-title'>\r\n        {title}\r\n      </div>\r\n    </>\r\n  )\r\n}","import Card from \"../../components/Card\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { useEffect, useRef } from \"react\";\r\n// import store from \"../../redux/store\";\r\nimport * as echarts from 'echarts/core';\r\nimport 'echarts-wordcloud';\r\nimport Category from \"../../components/Category\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function CategoriesPage() {\r\n  // const [categories,setCategories]=useState<any>();\r\n  const categories=useAppSelector(state=>state.categoriesList);\r\n  const postCount=useAppSelector(state=>state.postList).length || 0;\r\n  // const [postCount,setPostCount]=useState<number>(0);\r\n  // const [isDarkMode,setIsDarkMode]=useState<boolean>(store.getState().darkMode);\r\n  const darkMode=useAppSelector(state=>state.darkMode);\r\n\r\n  const chartRef=useRef(null);\r\n  \r\n  // useEffect(()=>{\r\n  //   const {categoriesList,postList}=store.getState();\r\n  //   setCategories(categoriesList);\r\n  //   setPostCount(postList.length);\r\n\r\n\r\n  //   const unsubscribe=store.subscribe(()=>{\r\n  //     const {categoriesList={},postList,darkMode}=store.getState();\r\n  //     setCategories(categoriesList);\r\n  //     setPostCount(postList.length);\r\n  //     setIsDarkMode(darkMode);\r\n  //   })\r\n\r\n  //   return ()=>{\r\n  //     unsubscribe();\r\n  //   }\r\n  // },[])\r\n  \r\n  useEffect(()=>{\r\n    // console.log(categories,postCount);\r\n    if(categories && Object.keys(categories).length>0 && postCount!==0){\r\n      createRadarChart();\r\n    }\r\n      \r\n  },[categories,postCount])\r\n\r\n  useEffect(()=>{\r\n    if(categories && Object.keys(categories).length>0 && postCount!==0){\r\n      createRadarChart();\r\n    }\r\n  },[darkMode])\r\n\r\n  const createRadarChart=()=>{\r\n    const radarChart=echarts.init(chartRef.current);\r\n    let textStyle={\r\n      fontFamily:\"CustomFont1\",\r\n      fontSize:15,\r\n      color:`${darkMode?'#ffffffcc':'#000000c0'}`\r\n    };\r\n    let itemStyle={\r\n      color: `${darkMode?'#42cf52':'#67abff'}`\r\n    }\r\n    let axisName={\r\n      fontFamily:\"CustomFont1\",\r\n      fontSize:15,\r\n      color:`${darkMode?'#ffffffcc':'#000000c0'}`,\r\n      fontWeight:'bold'\r\n    }\r\n\r\n    let max=0;\r\n    const getMaxCount=()=>{\r\n      Object.keys(categories).forEach(item=>{\r\n        if(item.length>max){\r\n          max=item.length;\r\n        }\r\n      })\r\n    }\r\n    getMaxCount();\r\n\r\n    const option = {\r\n      backgroundColor:\"\",\r\n      radar: {\r\n        indicator: Object.keys(categories).map(categoryName=>({\r\n          name:categoryName,\r\n          max:max,\r\n        })),\r\n        name: {\r\n          textStyle: textStyle\r\n        },\r\n        axisName,\r\n        center:[\"50%\",\"65%\"],\r\n        radius:\"100%\"\r\n      },\r\n      series: [\r\n        {\r\n          areaStyle:{opacity:\"0.25\"},\r\n          label:{show:\"true\"},\r\n          type: 'radar',\r\n          data: [\r\n            {\r\n              value: Object.keys(categories).map(catagoryName=>{\r\n                const category=categories[catagoryName];\r\n                return category?category.length:0;\r\n              }),\r\n              itemStyle:itemStyle,\r\n              label: {\r\n                show: true, \r\n                fontSize: 13, \r\n                position: 'right', \r\n                color:`${darkMode?'#ffffff':\"#000000\"}`,\r\n                fontWeight:\"bold\",\r\n                fontFamily:\"CustomFont1\",\r\n                // shadowColor:`${isDarkMode?\"#000000aa\":\"#ffffffaa\"}`,\r\n                // shadowBlur:5,\r\n                // shadowOffsetX:1,\r\n                // shadowOffsetY:5,\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n\r\n    radarChart.setOption(option);\r\n  }\r\n\r\n  const createCategories=():React.ReactNode=>{\r\n    if(categories){\r\n      return Object.keys(categories).map((categories:any)=>{\r\n        return (\r\n          <div className=\"categories-container\" key={categories}>\r\n            <Category category={categories}/>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-main\">\r\n\r\n      <div className=\"page-main-title\">\r\n        <PageTitle title=\"Categories\"/>\r\n      </div>\r\n\r\n      <div className=\"page-main-content\">\r\n          <Card darkMode={darkMode}>\r\n            <div className=\"categories-page-card-categories\">\r\n              {createCategories()}\r\n            </div>\r\n          </Card>\r\n\r\n          <div className=\"categories-page-chart-main\">\r\n            <Card darkMode={darkMode}>\r\n              <div className=\"categories-page-chart-block\" ref={chartRef} />\r\n            </Card>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}"],"names":["Card","_ref","scale","children","className","bgImage","opacity","background","darkMode","_jsx","concat","style","backgroundImage","Category","category","NavLink","to","textDecoration","_jsxs","FontAwesomeIcon","icon","faBookmark","marginLeft","PageTitle","title","_Fragment","CategoriesPage","categories","useAppSelector","state","categoriesList","postCount","postList","length","chartRef","useRef","useEffect","Object","keys","createRadarChart","radarChart","echarts","current","textStyle","fontFamily","fontSize","color","itemStyle","axisName","fontWeight","max","forEach","item","option","backgroundColor","radar","indicator","map","categoryName","name","center","radius","series","areaStyle","label","show","type","data","value","catagoryName","position","setOption","createCategories","ref"],"sourceRoot":""}